{
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\object.d": {
		"origin": "class DH5Object : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Object",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Object : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\snippets\\dynamic.d": {
		"origin": "module uim.html.snippets.dynamic;\r\rimport uim.html;\r@safe:\r\rclass dynamicSortableTable : DH5Component {\r  this() {\r    super(); \r    /* this.css(`.table-sortable tbody tr {\r    cursor: move; }`)\r    .html(`<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"><\/script>\r<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"><\/script>\r<!------ Include the above in your HEAD tag ---------->\r\r<script src=\"//ajax.googleapis.com/ajax/libs/jqueryui/1.10.4/jquery-ui.min.js\"><\/script>\r\r<div class=\"container\">\r    <div class=\"row clearfix\">\r      <div class=\"col-md-12 table-responsive\">\r      <table class=\"table table-bordered table-hover table-sortable\" id=\"tab_logic\">\r        <thead>\r          <tr >\r            <th class=\"text-center\">\r              Name\r            <\/th>\r            <th class=\"text-center\">\r              Email\r            <\/th>\r            <th class=\"text-center\">\r              Notes\r            <\/th>\r              <th class=\"text-center\">\r              Option\r            <\/th>\r                <th class=\"text-center\" style=\"border-top: 1px solid #ffffff; border-right: 1px solid #ffffff;\">\r            <\/th>\r          <\/tr>\r        <\/thead>\r        <tbody>\r            <tr id='addr0' data-id=\"0\" class=\"hidden\">\r            <td data-name=\"name\">\r                <input type=\"text\" name='name0'  placeholder='Name' class=\"form-control\"/>\r            <\/td>\r            <td data-name=\"mail\">\r                <input type=\"text\" name='mail0' placeholder='Email' class=\"form-control\"/>\r            <\/td>\r            <td data-name=\"desc\">\r                <textarea name=\"desc0\" placeholder=\"Description\" class=\"form-control\"><\/textarea>\r            <\/td>\r              <td data-name=\"sel\">\r                <select name=\"sel0\">\r                        <option value=\"\">Select Option<\/option>\r                      <option value=\"1\">Option 1<\/option>\r                        <option value=\"2\">Option 2<\/option>\r                        <option value=\"3\">Option 3<\/option>\r                <\/select>\r            <\/td>\r                        <td data-name=\"del\">\r                            <button name=\"del0\" class='btn btn-danger glyphicon glyphicon-remove row-remove'><span aria-hidden=\"true\">×<\/span><\/button>\r                        <\/td>\r          <\/tr>\r        <\/tbody>\r      <\/table>\r    <\/div>\r  <\/div>\r  <a id=\"add_row\" class=\"btn btn-primary float-right\">Add Row<\/a>\r<\/div>`)\r.js(`(document).ready(function() {\r    (\"#add_row\").on(\"click\", function() {\r        // Dynamic Rows Code\r        \r        // Get max row id and set new id\r        var newid = 0;\r        .each((\"#tab_logic tr\"), function() {\r            if (parseInt((this).data(\"id\")) > newid) {\r                newid = parseInt((this).data(\"id\"));\r            }\r        });\r        newid++;\r        \r        var tr = (\"<tr><\/tr>\", {\r            id: \"addr\"+newid,\r            \"data-id\": newid\r        });\r        \r        // loop through each td and create new elements with name of newid\r        .each((\"#tab_logic tbody tr:nth(0) td\"), function() {\r            var td;\r            var cur_td = (this);\r            \r            var children = cur_td.children();\r            \r            // add new td and element if it has a nane\r            if ((this).data(\"name\") !== undefined) {\r                td = (\"<td><\/td>\", {\r                    \"data-name\": (cur_td).data(\"name\")\r                });\r                \r                var c = (cur_td).find((children[0]).prop('tagName')).clone().val(\"\");\r                c.attr(\"name\", (cur_td).data(\"name\") + newid);\r                c.appendTo((td));\r                td.appendTo((tr));\r            } else {\r                td = (\"<td><\/td>\", {\r                    'text': ('#tab_logic tr').length\r                }).appendTo((tr));\r            }\r        });\r        \r        // add delete button and td\r        /*\r        (\"<td><\/td>\").append(\r            (\"<button class='btn btn-danger glyphicon glyphicon-remove row-remove'><\/button>\")\r                .click(function() {\r                    (this).closest(\"tr\").removeKey();\r                })\r       ).appendTo((tr));\r        * /\r        \r        // add the new row\r        (tr).appendTo(('#tab_logic'));\r        \r        (tr).find(\"td button.row-remove\").on(\"click\", function() {\r             (this).closest(\"tr\").removeKey();\r        });\r});\r\r\r\r\r    // Sortable Code\r    var fixHelperModified = function(e, tr) {\r        var originals = tr.children();\r        var helper = tr.clone();\r    \r        helper.children().each(function(index) {\r            (this).width(originals.eq(index).width())\r        });\r        \r        return helper;\r    };\r  \r    (\".table-sortable tbody\").sortable({\r        helper: fixHelperModified      \r    }).disableSelection();\r\r    (\".table-sortable thead\").disableSelection();\r\r\r\r    (\"#add_row\").trigger(\"click\");\r});`);*/\r  }\r}",
		"isFinal": false,
		"package": "uim.html.snippets",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.snippets.dynamic;\r\rimport uim.html;\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.snippets.dynamic",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"dynamicSortableTable"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.snippets.dynamic;\r\rimport uim.html;\r@safe:\r\rdynamicSortableTable : DH5Component \r  this() \r    super(); \r    /* this.css(`.table-sortable tbody tr \r    cursor: move; }`)\r    .html(`<link href=\"",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\patterns\\collection.d": {
		"origin": "class DCollection(T : UIMObject) : UIMObject, IKeyAndPath, ICollection!T {",
		"isFinal": false,
		"package": "uim.oop.patterns",
		"visibility": "public",
		"comments": [],
		"name": "DCollection(T",
		"isAbstract": false,
		"namespace": "uim.oop.patterns.collection",
		"isInherited": false,
		"methods": {
			"bool hasAnyKeys(string[] keys...)": {
				"origin": "bool hasAnyKeys(string[] keys...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyKeys(string[] keys...)",
				"isStatic": false
			},
			"bool hasAnyKeys(string[] keys)": {
				"origin": "bool hasAnyKeys(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyKeys(string[] keys)",
				"isStatic": false
			},
			"string correctKey(string[] path)": {
				"origin": "string correctKey(string[] path)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] path",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string correctKey(string[] path)",
				"isStatic": false
			},
			"string correctKey(string key)": {
				"origin": "string correctKey(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string correctKey(string key)",
				"isStatic": false
			},
			"this(Json[string] initData)": {
				"origin": "this(Json[string] initData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(Json[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(Json[string] initData)",
				"isStatic": false
			},
			"size_t count()": {
				"origin": "size_t count()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "size_t count()",
				"isStatic": false
			},
			"override bool initialize(Json[string] initData = null)": {
				"origin": "override bool initialize(Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] initData = null",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool initialize(Json[string] initData = null)",
				"isStatic": false
			},
			"string[][] paths()": {
				"origin": "string[][] paths()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string[][]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[][] paths()",
				"isStatic": false
			},
			"bool hasAllPaths(string[][] paths)": {
				"origin": "bool hasAllPaths(string[][] paths)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[][] paths",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllPaths(string[][] paths)",
				"isStatic": false
			},
			"bool hasAllKeys(string[] keys)": {
				"origin": "bool hasAllKeys(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllKeys(string[] keys)",
				"isStatic": false
			},
			"bool hasKey(string key)": {
				"origin": "bool hasKey(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasKey(string key)",
				"isStatic": false
			},
			"this(string newName, Json[string] initData = null)": {
				"origin": "this(string newName, Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newName, Json[string] initData = null)",
				"isStatic": false
			},
			"bool hasPath(string[] path)": {
				"origin": "bool hasPath(string[] path)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] path",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasPath(string[] path)",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"bool hasAnyPaths(string[][] paths)": {
				"origin": "bool hasAnyPaths(string[][] paths)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[][] paths",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyPaths(string[][] paths)",
				"isStatic": false
			},
			"string[] keys()": {
				"origin": "string[] keys()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] keys()",
				"isStatic": false
			},
			"bool hasAllKeys(string[] keys...)": {
				"origin": "bool hasAllKeys(string[] keys...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllKeys(string[] keys...)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"UIMObject)"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DCollection(T : UIMObject) : UIMObject, IKeyAndPath, ICollection!T",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\patterns\\registry.d": {
		"origin": "class DObjectRegistry(T : UIMObject) {\r",
		"isFinal": false,
		"package": "uim.oop.patterns",
		"visibility": "public",
		"comments": [],
		"name": "DObjectRegistry(T",
		"isAbstract": false,
		"namespace": "uim.oop.patterns.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject)"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DObjectRegistry(T : UIMObject)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\windows\\filesystem.d": {
		"origin": "module uim.filesystems.classes.os.windows.filesystem;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DWindowsFilesystem : DFilesystem {\r  mixin(FilesystemThis!(\"Windows\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    pathSeparator(\"\\\\\");\r    return true;\r\r  }\r}\r\rmixin(FilesystemCalls!(\"Windows\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.windows",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.windows.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.windows.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.windows.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDWindowsFilesystem : DFilesystem \r  mixin(FilesystemThis!(\"Windows\"));\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    pathSeparator(\"\\\\\");\r    return true;\r\r  }\r}\r\rmixin(FilesystemCalls!(\"Windows\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\s.d": {
		"origin": "class DH5S : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5S",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5S : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\canvas.d": {
		"origin": "class DH5Canvas : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Canvas",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"auto drawImage(this O)(string image, double x, double y, double width, double height)": {
				"origin": "auto drawImage(this O)(string image, double x, double y, double width, double height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, double x, double y, double width, double height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto drawImage(this O)(string image, double x, double y, double width, double height)",
				"isStatic": false
			},
			"auto fillText(this O)(string text, string x, string y)": {
				"origin": "auto fillText(this O)(string text, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillText(this O)(string text, string x, string y)",
				"isStatic": false
			},
			"auto bezierCurveTo(this O)(string cpx0, string cpy0, string cpx1, string cpy1, string x, string y)": {
				"origin": "auto bezierCurveTo(this O)(string cpx0, string cpy0, string cpx1, string cpy1, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string cpx0, string cpy0, string cpx1, string cpy1, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto bezierCurveTo(this O)(string cpx0, string cpy0, string cpx1, string cpy1, string x, string y)",
				"isStatic": false
			},
			"auto getImageData(this O)(double x, double y, double width, double height)": {
				"origin": "auto getImageData(this O)(double x, double y, double width, double height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double x, double y, double width, double height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto getImageData(this O)(double x, double y, double width, double height)",
				"isStatic": false
			},
			"auto lineTo(this O)(int x, int y)": {
				"origin": "auto lineTo(this O)(int x, int y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineTo(this O)(int x, int y)",
				"isStatic": false
			},
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			},
			"auto restore(this O)()": {
				"origin": "auto restore(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto restore(this O)()",
				"isStatic": false
			},
			"auto shadowOffsetY(this O)(int value)": {
				"origin": "auto shadowOffsetY(this O)(int value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowOffsetY(this O)(int value)",
				"isStatic": false
			},
			"auto fillRect(this O)(string x, string y, string width, string height)": {
				"origin": "auto fillRect(this O)(string x, string y, string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y, string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillRect(this O)(string x, string y, string width, string height)",
				"isStatic": false
			},
			"auto stroke(this O)()": {
				"origin": "auto stroke(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto stroke(this O)()",
				"isStatic": false
			},
			"auto transform(this O)(double a, double b, double c, double d, double e, double f)": {
				"origin": "auto transform(this O)(double a, double b, double c, double d, double e, double f)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double a, double b, double c, double d, double e, double f",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto transform(this O)(double a, double b, double c, double d, double e, double f)",
				"isStatic": false
			},
			"auto createRadialGradient(this O)(string varName, string x0, string y0, string r0, string x1, string y1, string r1)": {
				"origin": "auto createRadialGradient(this O)(string varName, string x0, string y0, string r0, string x1, string y1, string r1)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, string x0, string y0, string r0, string x1, string y1, string r1",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createRadialGradient(this O)(string varName, string x0, string y0, string r0, string x1, string y1, string r1)",
				"isStatic": false
			},
			"auto putImageData(this O)(string image, string x, string y, string dirtyX, string dirtyY, string dirtyWidth, string dirtyHeight)": {
				"origin": "auto putImageData(this O)(string image, string x, string y, string dirtyX, string dirtyY, string dirtyWidth, string dirtyHeight)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, string x, string y, string dirtyX, string dirtyY, string dirtyWidth, string dirtyHeight",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto putImageData(this O)(string image, string x, string y, string dirtyX, string dirtyY, string dirtyWidth, string dirtyHeight)",
				"isStatic": false
			},
			"auto isPointInPath(this O)(double x, double y)": {
				"origin": "auto isPointInPath(this O)(double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto isPointInPath(this O)(double x, double y)",
				"isStatic": false
			},
			"auto createLinearGradient(this O)(string varName, int x0, int y0, int x1, int y1)": {
				"origin": "auto createLinearGradient(this O)(string varName, int x0, int y0, int x1, int y1)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, int x0, int y0, int x1, int y1",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createLinearGradient(this O)(string varName, int x0, int y0, int x1, int y1)",
				"isStatic": false
			},
			"auto lineJoin(this O)(string value)": {
				"origin": "auto lineJoin(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineJoin(this O)(string value)",
				"isStatic": false
			},
			"auto globalAlpha(this O)(string number)": {
				"origin": "auto globalAlpha(this O)(string number)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string number",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto globalAlpha(this O)(string number)",
				"isStatic": false
			},
			"auto rotate(this O)(double angle)": {
				"origin": "auto rotate(this O)(double angle)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double angle",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto rotate(this O)(double angle)",
				"isStatic": false
			},
			"auto clearRect(this O)(int x, int y, int width, int height)": {
				"origin": "auto clearRect(this O)(int x, int y, int width, int height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y, int width, int height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto clearRect(this O)(int x, int y, int width, int height)",
				"isStatic": false
			},
			"auto drawImage(this O)(string image, string x, string y)": {
				"origin": "auto drawImage(this O)(string image, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto drawImage(this O)(string image, string x, string y)",
				"isStatic": false
			},
			"auto textAlign(this O)(TextAligns anAlign)": {
				"origin": "auto textAlign(this O)(TextAligns anAlign)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(TextAligns anAlign",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto textAlign(this O)(TextAligns anAlign)",
				"isStatic": false
			},
			"auto globalCompositeOperation(this O)(CompositeOperations operation)": {
				"origin": "auto globalCompositeOperation(this O)(CompositeOperations operation)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(CompositeOperations operation",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto globalCompositeOperation(this O)(CompositeOperations operation)",
				"isStatic": false
			},
			"auto arc(this O)(string x, string y, string r, string sAngle, string eAngle, bool b = false)": {
				"origin": "auto arc(this O)(string x, string y, string r, string sAngle, string eAngle, bool b = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y, string r, string sAngle, string eAngle, bool b = false",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto arc(this O)(string x, string y, string r, string sAngle, string eAngle, bool b = false)",
				"isStatic": false
			},
			"auto globalAlpha(this O)(double number)": {
				"origin": "auto globalAlpha(this O)(double number)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double number",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto globalAlpha(this O)(double number)",
				"isStatic": false
			},
			"auto scale(this O)(double scaleWidth, double scaleHeight)": {
				"origin": "auto scale(this O)(double scaleWidth, double scaleHeight)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double scaleWidth, double scaleHeight",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto scale(this O)(double scaleWidth, double scaleHeight)",
				"isStatic": false
			},
			"auto putImageData(this O)(string image, string x, string y)": {
				"origin": "auto putImageData(this O)(string image, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto putImageData(this O)(string image, string x, string y)",
				"isStatic": false
			},
			"auto putImageData(this O)(string image, double x, double y, double dirtyX, double dirtyY, double dirtyWidth, double dirtyHeight)": {
				"origin": "auto putImageData(this O)(string image, double x, double y, double dirtyX, double dirtyY, double dirtyWidth, double dirtyHeight)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, double x, double y, double dirtyX, double dirtyY, double dirtyWidth, double dirtyHeight",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto putImageData(this O)(string image, double x, double y, double dirtyX, double dirtyY, double dirtyWidth, double dirtyHeight)",
				"isStatic": false
			},
			"auto shadowOffsetX(this O)(string value)": {
				"origin": "auto shadowOffsetX(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowOffsetX(this O)(string value)",
				"isStatic": false
			},
			"auto miterLimit(this O)(string length)": {
				"origin": "auto miterLimit(this O)(string length)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string length",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto miterLimit(this O)(string length)",
				"isStatic": false
			},
			"auto arcTo(this O)(string x1, string y1, string x2, string y2, string r)": {
				"origin": "auto arcTo(this O)(string x1, string y1, string x2, string y2, string r)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x1, string y1, string x2, string y2, string r",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto arcTo(this O)(string x1, string y1, string x2, string y2, string r)",
				"isStatic": false
			},
			"auto drawImage(this O)(string image, double sx, double sy, double sWidth, double sHeight, double x, double y, double width, double height)": {
				"origin": "auto drawImage(this O)(string image, double sx, double sy, double sWidth, double sHeight, double x, double y, double width, double height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, double sx, double sy, double sWidth, double sHeight, double x, double y, double width, double height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto drawImage(this O)(string image, double sx, double sy, double sWidth, double sHeight, double x, double y, double width, double height)",
				"isStatic": false
			},
			"auto shadowOffsetX(this O)(int value)": {
				"origin": "auto shadowOffsetX(this O)(int value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowOffsetX(this O)(int value)",
				"isStatic": false
			},
			"auto textAlign(this O)(string anAlign)": {
				"origin": "auto textAlign(this O)(string anAlign)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string anAlign",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto textAlign(this O)(string anAlign)",
				"isStatic": false
			},
			"auto globalCompositeOperation(this O)(string operation)": {
				"origin": "auto globalCompositeOperation(this O)(string operation)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string operation",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto globalCompositeOperation(this O)(string operation)",
				"isStatic": false
			},
			"auto moveTo(this O)(string x, string y)": {
				"origin": "auto moveTo(this O)(string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto moveTo(this O)(string x, string y)",
				"isStatic": false
			},
			"this(string id, int width, int height, string style = \"\")": {
				"origin": "this(string id, int width, int height, string style = \"\")",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string id, int width, int height, string style = \"\")",
				"isStatic": false
			},
			"auto rect(this O)(string x, int y, int width, int height)": {
				"origin": "auto rect(this O)(string x, int y, int width, int height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, int y, int width, int height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto rect(this O)(string x, int y, int width, int height)",
				"isStatic": false
			},
			"auto shadowOffsetY(this O)(string value)": {
				"origin": "auto shadowOffsetY(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowOffsetY(this O)(string value)",
				"isStatic": false
			},
			"auto strokeText(this O)(string text, double x, double y, double maxWidth)": {
				"origin": "auto strokeText(this O)(string text, double x, double y, double maxWidth)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, double x, double y, double maxWidth",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeText(this O)(string text, double x, double y, double maxWidth)",
				"isStatic": false
			},
			"auto clip(this O)()": {
				"origin": "auto clip(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto clip(this O)()",
				"isStatic": false
			},
			"auto clearRect(this O)(string x, string y, string width, string height)": {
				"origin": "auto clearRect(this O)(string x, string y, string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y, string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto clearRect(this O)(string x, string y, string width, string height)",
				"isStatic": false
			},
			"auto lineWidth(this O)(string value)": {
				"origin": "auto lineWidth(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineWidth(this O)(string value)",
				"isStatic": false
			},
			"auto createImageData(this O)(string image)": {
				"origin": "auto createImageData(this O)(string image)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createImageData(this O)(string image)",
				"isStatic": false
			},
			"auto shadowBlur(this O)(string blur)": {
				"origin": "auto shadowBlur(this O)(string blur)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string blur",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowBlur(this O)(string blur)",
				"isStatic": false
			},
			"auto strokeText(this O)(string text, string x, string y, string maxWidth)": {
				"origin": "auto strokeText(this O)(string text, string x, string y, string maxWidth)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, string x, string y, string maxWidth",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeText(this O)(string text, string x, string y, string maxWidth)",
				"isStatic": false
			},
			"auto setTransform(this O)(double a, double b, double c, double d, double e, double f)": {
				"origin": "auto setTransform(this O)(double a, double b, double c, double d, double e, double f)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double a, double b, double c, double d, double e, double f",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto setTransform(this O)(double a, double b, double c, double d, double e, double f)",
				"isStatic": false
			},
			"auto strokeRect(this O)(string x, string y, string width, string height)": {
				"origin": "auto strokeRect(this O)(string x, string y, string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y, string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeRect(this O)(string x, string y, string width, string height)",
				"isStatic": false
			},
			"auto bezierCurveTo(this O)(int cpx0, int cpy0, int cpx1, int cpy1, int x, int y)": {
				"origin": "auto bezierCurveTo(this O)(int cpx0, int cpy0, int cpx1, int cpy1, int x, int y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int cpx0, int cpy0, int cpx1, int cpy1, int x, int y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto bezierCurveTo(this O)(int cpx0, int cpy0, int cpx1, int cpy1, int x, int y)",
				"isStatic": false
			},
			"auto strokeRect(this O)(int x, int y, int width, int height)": {
				"origin": "auto strokeRect(this O)(int x, int y, int width, int height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y, int width, int height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeRect(this O)(int x, int y, int width, int height)",
				"isStatic": false
			},
			"auto createImageData(this O)(string width, string height)": {
				"origin": "auto createImageData(this O)(string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createImageData(this O)(string width, string height)",
				"isStatic": false
			},
			"auto fillText(this O)(string text, double x, double y)": {
				"origin": "auto fillText(this O)(string text, double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillText(this O)(string text, double x, double y)",
				"isStatic": false
			},
			"auto translate(this O)(double x, double y)": {
				"origin": "auto translate(this O)(double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto translate(this O)(double x, double y)",
				"isStatic": false
			},
			"auto lineTo(this O)(string x, string y)": {
				"origin": "auto lineTo(this O)(string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineTo(this O)(string x, string y)",
				"isStatic": false
			},
			"auto shadowColor(this O)(string color)": {
				"origin": "auto shadowColor(this O)(string color)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string color",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowColor(this O)(string color)",
				"isStatic": false
			},
			"auto rotate(this O)(string angle)": {
				"origin": "auto rotate(this O)(string angle)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string angle",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto rotate(this O)(string angle)",
				"isStatic": false
			},
			"auto fill(this O)()": {
				"origin": "auto fill(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fill(this O)()",
				"isStatic": false
			},
			"auto strokeStyle(this O)(string style)": {
				"origin": "auto strokeStyle(this O)(string style)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string style",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeStyle(this O)(string style)",
				"isStatic": false
			},
			"auto createLinearGradient(this O)(string varName, string x0, string y0, string x1, string y1)": {
				"origin": "auto createLinearGradient(this O)(string varName, string x0, string y0, string x1, string y1)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, string x0, string y0, string x1, string y1",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createLinearGradient(this O)(string varName, string x0, string y0, string x1, string y1)",
				"isStatic": false
			},
			"auto arc(this O)(int x, int y, int r, int sAngle, int eAngle, bool b = false)": {
				"origin": "auto arc(this O)(int x, int y, int r, int sAngle, int eAngle, bool b = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y, int r, int sAngle, int eAngle, bool b = false",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto arc(this O)(int x, int y, int r, int sAngle, int eAngle, bool b = false)",
				"isStatic": false
			},
			"auto shadowBlur(this O)(uint blur)": {
				"origin": "auto shadowBlur(this O)(uint blur)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(uint blur",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto shadowBlur(this O)(uint blur)",
				"isStatic": false
			},
			"auto fillText(this O)(string text, double x, double y, double maxWidth)": {
				"origin": "auto fillText(this O)(string text, double x, double y, double maxWidth)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, double x, double y, double maxWidth",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillText(this O)(string text, double x, double y, double maxWidth)",
				"isStatic": false
			},
			"auto transform(this O)(string a, string b, string c, string d, string e, string f)": {
				"origin": "auto transform(this O)(string a, string b, string c, string d, string e, string f)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string a, string b, string c, string d, string e, string f",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto transform(this O)(string a, string b, string c, string d, string e, string f)",
				"isStatic": false
			},
			"auto createPattern(this O)(string varName, string image, string mode)": {
				"origin": "auto createPattern(this O)(string varName, string image, string mode)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, string image, string mode",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createPattern(this O)(string varName, string image, string mode)",
				"isStatic": false
			},
			"auto fillText(this O)(string text, string x, string y, string maxWidth)": {
				"origin": "auto fillText(this O)(string text, string x, string y, string maxWidth)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, string x, string y, string maxWidth",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillText(this O)(string text, string x, string y, string maxWidth)",
				"isStatic": false
			},
			"version (test_uim_html)": {
				"origin": "version (test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_html",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_html)",
				"isStatic": false
			},
			"auto getImageData(this O)(string x, string y, string width, string height)": {
				"origin": "auto getImageData(this O)(string x, string y, string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y, string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto getImageData(this O)(string x, string y, string width, string height)",
				"isStatic": false
			},
			"auto beginPath(this O)()": {
				"origin": "auto beginPath(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto beginPath(this O)()",
				"isStatic": false
			},
			"auto save(this O)()": {
				"origin": "auto save(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto save(this O)()",
				"isStatic": false
			},
			"auto closePath(this O)()": {
				"origin": "auto closePath(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto closePath(this O)()",
				"isStatic": false
			},
			"auto moveTo(this O)(int x, int y)": {
				"origin": "auto moveTo(this O)(int x, int y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto moveTo(this O)(int x, int y)",
				"isStatic": false
			},
			"auto font(this O)(string value)": {
				"origin": "auto font(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto font(this O)(string value)",
				"isStatic": false
			},
			"auto lineCap(this O)(string value)": {
				"origin": "auto lineCap(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineCap(this O)(string value)",
				"isStatic": false
			},
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"auto miterLimit(this O)(uint length)": {
				"origin": "auto miterLimit(this O)(uint length)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(uint length",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto miterLimit(this O)(uint length)",
				"isStatic": false
			},
			"auto createImageData(this O)(double width, double height)": {
				"origin": "auto createImageData(this O)(double width, double height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(double width, double height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createImageData(this O)(double width, double height)",
				"isStatic": false
			},
			"auto fillRect(this O)(int x, int y, int width, int height)": {
				"origin": "auto fillRect(this O)(int x, int y, int width, int height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y, int width, int height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillRect(this O)(int x, int y, int width, int height)",
				"isStatic": false
			},
			"auto drawImage(this O)(string image, double x, double y)": {
				"origin": "auto drawImage(this O)(string image, double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto drawImage(this O)(string image, double x, double y)",
				"isStatic": false
			},
			"auto scale(this O)(string scaleWidth, string scaleHeight)": {
				"origin": "auto scale(this O)(string scaleWidth, string scaleHeight)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string scaleWidth, string scaleHeight",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto scale(this O)(string scaleWidth, string scaleHeight)",
				"isStatic": false
			},
			"auto drawImage(this O)(string image, string x, string y, string width, string height)": {
				"origin": "auto drawImage(this O)(string image, string x, string y, string width, string height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, string x, string y, string width, string height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto drawImage(this O)(string image, string x, string y, string width, string height)",
				"isStatic": false
			},
			"auto lineWidth(this O)(uint value)": {
				"origin": "auto lineWidth(this O)(uint value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(uint value",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto lineWidth(this O)(uint value)",
				"isStatic": false
			},
			"auto strokeText(this O)(string text, double x, double y)": {
				"origin": "auto strokeText(this O)(string text, double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeText(this O)(string text, double x, double y)",
				"isStatic": false
			},
			"auto fillStyle(this O)(string style)": {
				"origin": "auto fillStyle(this O)(string style)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string style",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto fillStyle(this O)(string style)",
				"isStatic": false
			},
			"auto strokeText(this O)(string text, string x, string y)": {
				"origin": "auto strokeText(this O)(string text, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string text, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto strokeText(this O)(string text, string x, string y)",
				"isStatic": false
			},
			"auto translate(this O)(string x, string y)": {
				"origin": "auto translate(this O)(string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto translate(this O)(string x, string y)",
				"isStatic": false
			},
			"auto isPointInPath(this O)(string x, string y)": {
				"origin": "auto isPointInPath(this O)(string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto isPointInPath(this O)(string x, string y)",
				"isStatic": false
			},
			"auto putImageData(this O)(string image, double x, double y)": {
				"origin": "auto putImageData(this O)(string image, double x, double y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string image, double x, double y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto putImageData(this O)(string image, double x, double y)",
				"isStatic": false
			},
			"auto quadraticCurveTo(this O)(string cpx, string cpy, string x, string y)": {
				"origin": "auto quadraticCurveTo(this O)(string cpx, string cpy, string x, string y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string cpx, string cpy, string x, string y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto quadraticCurveTo(this O)(string cpx, string cpy, string x, string y)",
				"isStatic": false
			},
			"auto setTransform(this O)(string a, string b, string c, string d, string e, string f)": {
				"origin": "auto setTransform(this O)(string a, string b, string c, string d, string e, string f)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string a, string b, string c, string d, string e, string f",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto setTransform(this O)(string a, string b, string c, string d, string e, string f)",
				"isStatic": false
			},
			"auto createRadialGradient(this O)(string varName, int x0, int y0, int r0, int x1, int y1, int r1)": {
				"origin": "auto createRadialGradient(this O)(string varName, int x0, int y0, int r0, int x1, int y1, int r1)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, int x0, int y0, int r0, int x1, int y1, int r1",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto createRadialGradient(this O)(string varName, int x0, int y0, int r0, int x1, int y1, int r1)",
				"isStatic": false
			},
			"auto arcTo(this O)(int x1, int y1, int x2, int y2, int r)": {
				"origin": "auto arcTo(this O)(int x1, int y1, int x2, int y2, int r)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x1, int y1, int x2, int y2, int r",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto arcTo(this O)(int x1, int y1, int x2, int y2, int r)",
				"isStatic": false
			},
			"auto measureText(this O)(string varName, string text)": {
				"origin": "auto measureText(this O)(string varName, string text)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, string text",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto measureText(this O)(string varName, string text)",
				"isStatic": false
			},
			"auto addColorStop(this O)(string varName, string stop, string color)": {
				"origin": "auto addColorStop(this O)(string varName, string stop, string color)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string varName, string stop, string color",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto addColorStop(this O)(string varName, string stop, string color)",
				"isStatic": false
			},
			"auto textBaseline(this O)(string aBaseline)": {
				"origin": "auto textBaseline(this O)(string aBaseline)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aBaseline",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto textBaseline(this O)(string aBaseline)",
				"isStatic": false
			},
			"auto textBaseline(this O)(TextBaselines aBaseline)": {
				"origin": "auto textBaseline(this O)(TextBaselines aBaseline)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(TextBaselines aBaseline",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto textBaseline(this O)(TextBaselines aBaseline)",
				"isStatic": false
			},
			"auto quadraticCurveTo(this O)(int cpx, int cpy, int x, int y)": {
				"origin": "auto quadraticCurveTo(this O)(int cpx, int cpy, int x, int y)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int cpx, int cpy, int x, int y",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto quadraticCurveTo(this O)(int cpx, int cpy, int x, int y)",
				"isStatic": false
			},
			"auto rect(this O)(int x, int y, int width, int height)": {
				"origin": "auto rect(this O)(int x, int y, int width, int height)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(int x, int y, int width, int height",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto rect(this O)(int x, int y, int width, int height)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Canvas : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\kbd.d": {
		"origin": "class DH5Kbd : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Kbd",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Kbd : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\figcaption.d": {
		"origin": "class DH5Figcaption : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for figcaption tag - represents a caption or legend describing the rest of the contents of its parent <figure> element."
		],
		"name": "DH5Figcaption",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Figcaption : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\core\\uim\\core\\extras\\bitmap.d": {
		"origin": "final class DImage(T) {",
		"isFinal": true,
		"package": "uim.core.extras",
		"visibility": "public",
		"comments": [],
		"name": "DImage(T)",
		"isAbstract": false,
		"namespace": "uim.core.extras.bitmap",
		"isInherited": false,
		"methods": {
			"void clear(in T color = this.black) pure nothrow @safe @nogc": {
				"origin": "void clear(in T color = this.black) pure nothrow @safe @nogc",
				"isFinal": false,
				"isProperty": false,
				"parameters": "in T color = this.black",
				"visibility": "public",
				"datatype": "void",
				"isSafe": true,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void clear(in T color = this.black) pure nothrow @nogc",
				"isStatic": false
			},
			"@property DImage dup() const pure nothrow @safe": {
				"origin": "@property DImage dup() const pure nothrow @safe",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "DImage",
				"isSafe": true,
				"isConst": true,
				"isAbstract": false,
				"isInherited": false,
				"header": "DImage dup() pure nothrow",
				"isStatic": false
			},
			"static if (is(typeof(": {
				"origin": "static if (is(typeof(",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "if",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "if (is(typeof(",
				"isStatic": true
			},
			"@property size_t ny() const pure nothrow @safe @nogc": {
				"origin": "@property size_t ny() const pure nothrow @safe @nogc",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": true,
				"isConst": true,
				"isAbstract": false,
				"isInherited": false,
				"header": "size_t ny() pure nothrow @nogc",
				"isStatic": false
			},
			"void main()": {
				"origin": "void main()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void main()",
				"isStatic": false
			},
			"foreach (immutable y; 0 .. img.ny)": {
				"origin": "foreach (immutable y; 0 .. img.ny)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "immutable y; 0 .. img.ny",
				"visibility": "public",
				"datatype": "foreach",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "foreach (immutable y; 0 .. img.ny)",
				"isStatic": false
			},
			"void textualShow(in char bl = '#', in char wh = '.') const nothrow": {
				"origin": "void textualShow(in char bl = '#', in char wh = '.') const nothrow",
				"isFinal": false,
				"isProperty": false,
				"parameters": "in char bl = '#', in char wh = '.'",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": true,
				"isAbstract": false,
				"isInherited": false,
				"header": "void textualShow(in char bl = '#', in char wh = '.') nothrow",
				"isStatic": false
			},
			"@property size_t nx() const pure nothrow @safe @nogc": {
				"origin": "@property size_t nx() const pure nothrow @safe @nogc",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": true,
				"isConst": true,
				"isAbstract": false,
				"isInherited": false,
				"header": "size_t nx() pure nothrow @nogc",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-core",
		"header": "DImage(T)",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\database\\folder.d": {
		"origin": "module uim.filesystems.classes.database.folder;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DDatabaseFolder : DFolder {\r  mixin(FolderThis!(\"Database\"));\r\r  override Json[string] debugInfo() {\r    return super.debugInfo();\r  }\r}\rmixin(FolderCalls!(\"Database\"));\r\runittest {\r  assert(DatabaseFolder);\r}",
		"isFinal": false,
		"package": "uim.filesystems.classes.database",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.database.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.database.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.database.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDDatabaseFolder : DFolder \r  mixin(FolderThis!(\"Database\"));\r\r  override Json[string] debugInfo() \r    return super.debugInfo();\r  }\r}\rmixin(FolderCalls!(\"Database\"));\r\runittest \r  assert(DatabaseFolder);\r}",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\dl.d": {
		"origin": "class DH5Dl : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"",
			"Definitionslisten, seit HTML5 Beschreibungslisten, werden durch dl-Elemente beschrieben. (dl = definition / description list)",
			"Beispiel: Listen für Glossare (Glossar = meist eine Liste von Einträgen, die wiederum aus mindestens einem zu erklärenden Sachverhalt nebst mindestens einer Erklärung besteht)",
			"",
			"Eine Definitions- bzw. Beschreibungliste wird mit <dl> eingeleitet und mit <\/dl> beendet.",
			"Der zu erläuternde Ausdruck steht zwischen <dt>…<\/dt> (description (list) term).",
			"<dd>…<\/dd> (description (list) description) umschließt die Erläuterung.",
			"Die Abfolge von dt- und dd-Elementen innerhalb einer dl-Liste ist nicht streng geregelt. Es dürfen auch mehrere dt- oder dd-Elemente hintereinander folgen. Zum Beispiel könnten Begriffe mit einer Erklärung abgehandelt werden oder mehrere Bedeutungen für einen Begriff existieren.",
			"Das Verschachteln von Definitionslisten ist ebenfalls möglich. Dadurch können Sie baumartige Strukturen im Text abbilden. „Innere“ Listen müssen dabei innerhalb des dd-Elements notiert werden.",
			""
		],
		"name": "DH5Dl",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Dl : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\radio.d": {
		"origin": "class DH5Radio : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Radio",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Radio : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\aside.d": {
		"origin": "class DH5Aside : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for aside tag - represents a portion of a document whose content is only indirectly related to the document's main content.",
			"Asides are frequently presented as sidebars or call-out boxes."
		],
		"name": "DH5Aside",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Aside : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\exceptions\\exception.d": {
		"origin": "module uim.filesystems.exceptions.exception;\r\rimport uim.filesystems;\r\r@safe:\r\r// I18n exception.\rclass DFilesystemsException : UIMException {\r  mixin(ExceptionThis!(\"Filesystems\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-filesystems\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Filesystems\"));\r\runittest {\r  assert(FilesystemsException);\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.exceptions.exception;\r\rimport uim.filesystems;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.exceptions.exception;\r\rimport uim.filesystems;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\tenants\\file.d": {
		"origin": "class DFileJsonTenant : DJsonTenant {\r",
		"isFinal": false,
		"package": "uim.jsonbases.classes.tenants",
		"visibility": "public",
		"comments": [
			"FileJsonTenant manages FileCollections"
		],
		"name": "DFileJsonTenant",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.tenants.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DJsonTenant"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DFileJsonTenant : DJsonTenant",
		"parent": "DJsonTenant"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\text.d": {
		"origin": "class DH5InputText : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputText",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputText : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\datetime.d": {
		"origin": "class DH5InputDATETIME : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputDATETIME",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputDATETIME : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\h5.d": {
		"origin": "module uim.html.classes.h5;\r\rimport uim.html;\r@safe:\r\rclass DH5 {\r    this() { _objs = []; }\r\r    protected DH5Obj[] _objs;\r    auto objs(this O)() { return _objs; }\r    O clear(this O)() {  _objs = []; return cast(O)this; }\r\r    DH5Obj obj(string tag) {\r        switch(tag.toLower) {\r            case \"thead\": return H5Thead();\r            default: return H5Obj().tag(tag);\r        } \r    }\r\r/*\r    T opBinary(string op)(DH5Obj[] someElements) {\r        static if (op == \"~\") return _objs~someElements;\r        else static // assert(0 == \"Operator \"~op~\" not implemented\");\r    }\r*/\r    mixin(H5Def!\"a\");\r    version(test_uim_html) { unittest {\r        assert(H5.a == \"<a><\/a>\");\r    }}\r    \r    mixin(H5Def!\"abbr\");\r    version(test_uim_html) { unittest {\r        assert(H5.abbr == \"<abbr><\/abbr>\");\r    }}\r    \r    mixin(H5Def!\"address\");\r    version(test_uim_html) { unittest {\r        assert(H5.address == \"<address><\/address>\");\r    }}\r    \r    mixin(H5Def!\"area\");\r    version(test_uim_html) { unittest {\r        assert(H5.area == \"<area><\/area>\");\r    }}\r    \r    mixin(H5Def!\"article\");\r    version(test_uim_html) { unittest {\r        assert(H5.article == \"<article><\/article>\");\r    }}\r\r    mixin(H5Def!\"aside\");\r    version(test_uim_html) { unittest {\r        assert(H5.aside == \"<aside><\/aside>\");\r    }}\r    \r    mixin(H5Def!\"audio\");\rversion(test_uim_html) { unittest {\r        assert(H5.audio == \"<audio><\/audio>\");\r    }}\r        \r    mixin(H5Def!\"b\");\rversion(test_uim_html) { unittest {\r        assert(H5.b == \"<b><\/b>\");\r    }}\r    \r    mixin(H5Def!\"base\");\rversion(test_uim_html) { unittest {\r        assert(H5.base == \"<base><\/base>\");\r    }}\r    \r    mixin(H5Def!\"bdi\");\rversion(test_uim_html) { unittest {\r        assert(H5.bdi == \"<bdi><\/bdi>\");\r    }}\r    \r    mixin(H5Def!\"bdo\");\rversion(test_uim_html) { unittest {\r        assert(H5.bdo == \"<bdo><\/bdo>\");\r    }}\r    \r    mixin(H5Def!\"blockquote\");\rversion(test_uim_html) { unittest {\r        assert(H5.blockquote == \"<blockquote><\/blockquote>\");\r    }}\r    \r    // mixin(H5Def!\"body\");\r    auto body_(this O)(string content) { _objs ~=  H5Body(content); return cast(O)this; }\r    auto body_(this O)(DH5Obj[] content...) { _objs ~=  H5Body(content); return cast(O)this; }\r    auto body_(this O)(DH5 content) { _objs ~=  H5Body(content); return cast(O)this; }\r\r    auto body_(this O)(string id, string content) { _objs ~=  H5Body(id, content); return cast(O)this; }\r    auto body_(this O)(string id, DH5Obj[] content...) { _objs ~=  H5Body(id, content); return cast(O)this; }\r    auto body_(this O)(string id, DH5 content) { _objs ~=  H5Body(id, content); return cast(O)this; }\r\r    auto body_(this O)(string id, string[] classes) { _objs ~=  H5Body(id, classes); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, string content) { _objs ~=  H5Body(id, classes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, DH5Obj[] content...) { _objs ~=  H5Body(id, classes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, DH5 content) { _objs ~=  H5Body(id, classes, content); return cast(O)this; }\r\r    auto body_(this O)(string[] classes) { _objs ~=  H5Body(classes); return cast(O)this; }\r    auto body_(this O)(string content) { _objs ~=  H5Body(classes, content); return cast(O)this; }\r    auto body_(this O)(string[] classes,string[] classes,  DH5Obj[] content...) { _objs ~=  H5Body(classes, content); return cast(O)this; }\r    auto body_(this O)(string[] classes, DH5 content) { _objs ~=  H5Body(classes, content); return cast(O)this; }\r\r    auto body_(this O)(string[string] attributes) { _objs ~=  H5Body(attributes); return cast(O)this; }\r    auto body_(this O)(string[string] attributes, string content) { _objs ~=  H5Body(attributes, content); return cast(O)this; }\r    auto body_(this O)(string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Body(attributes, content); return cast(O)this; }\r    auto body_(this O)(string[string] attributes, DH5 content) { _objs ~=  H5Body(attributes, content); return cast(O)this; }\r\r    auto body_(this O)(string id, string[string] attributes) { _objs ~=  H5Body(id, attributes); return cast(O)this; }\r    auto body_(this O)(string id, string[string] attributes, string content) { _objs ~=  H5Body(id, attributes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Body(id, attributes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[string] attributes, DH5 content) { _objs ~=  H5Body(id, attributes, content); return cast(O)this; }\r\r    auto body_(this O)(string id, string[] classes, string[string] attributes) { _objs ~=  H5Body(id, classes, attributes); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, string[string] attributes, string content) { _objs ~=  H5Body(id, classes, attributes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Body(id, classes, attributes, content); return cast(O)this; }\r    auto body_(this O)(string id, string[] classes, string[string] attributes, DH5 content) { _objs ~=  H5Body(id, classes, attributes, content); return cast(O)this; }\r    version(test_uim_html) { unittest { \r        assert(H5.body_ == \"<body><\/body>\");\r    }}\r    \r    mixin(H5Def!\"br\");\rversion(test_uim_html) { unittest {\r        assert(H5.br == \"<br>\");\r    }}\r    \r    mixin(H5Def!\"button\");\rversion(test_uim_html) { unittest {\r        assert(H5.button == \"<button><\/button>\");\r    }}\r    \r    mixin(H5Def!\"canvas\");\r    version(test_uim_html) { unittest {\r/*      assert(H5.canvas(\"test\", [\"\"]), `<canvas id=\"test\"><\/canvas><script>function drawtest(){var canvas=document.getElementById('test');`~\r    `var context=canvas.getContext('2d');}window.adIEventListener(\"load\",drawtest,true);<\/script>`);\r*/    }}\r    \r    mixin(H5Def!\"caption\");\rversion(test_uim_html) { unittest {\r        assert(H5.caption == \"<caption><\/caption>\");\r    }}\r    \r    mixin(H5Def!\"cite\");\rversion(test_uim_html) { unittest {\r        assert(H5.cite == \"<cite><\/cite>\");\r    }}\r    \r    mixin(H5Def!\"code\");\rversion(test_uim_html) { unittest {\r        assert(H5.code == \"<code><\/code>\");\r    }}\r    \r    mixin(H5Def!\"col\");\rversion(test_uim_html) { unittest {\r        assert(H5.col == \"<col><\/col>\");\r    }}\r    \r    mixin(H5Def!\"colgroup\");\rversion(test_uim_html) { unittest {\r        assert(H5.colgroup == \"<colgroup><\/colgroup>\");\r    }}\r    \r    mixin(H5Def!\"content\");\rversion(test_uim_html) { unittest {\r        assert(H5.content == \"<content><\/content>\");\r    }}\r    \r    mixin(H5Def!\"data\");\rversion(test_uim_html) { unittest {\r        assert(H5.data == \"<data><\/data>\");\r    }}\r\r    mixin(H5Def!\"datalist\");\rversion(test_uim_html) { unittest {\r        assert(H5.datalist == \"<datalist><\/datalist>\");\r    }}\r\r     mixin(H5Def!\"dd\");\rversion(test_uim_html) { unittest {\r        assert(H5.dd == \"<dd><\/dd>\");\r    }}\r\r    mixin(H5Def!\"del\");\rversion(test_uim_html) { unittest {\r        assert(H5.del == \"<del><\/del>\");\r    }}\r\r    mixin(H5Def!\"details\");\rversion(test_uim_html) { unittest {\r        assert(H5.details == \"<details><\/details>\");\r    }}\r\r    mixin(H5Def!\"dfn\");\rversion(test_uim_html) { unittest {\r        assert(H5.dfn == \"<dfn><\/dfn>\");\r    }}\r\r    mixin(H5Def!\"dialog\");\rversion(test_uim_html) { unittest {\r        assert(H5.dialog == \"<dialog><\/dialog>\");\r    }}\r\r    mixin(H5Def!\"div\");\r    version(test_uim_html) { unittest { \r        assert(H5.div == \"<div><\/div>\");\r    }}\r\r    mixin(H5Def!\"dl\");\r    version(test_uim_html) { unittest { \r        assert(H5.dl == \"<dl><\/dl>\");\r    }}\r\r    mixin(H5Def!\"dt\");\r    version(test_uim_html) { unittest { \r        assert(H5.dt == \"<dt><\/dt>\");\r    }}\r\r    mixin(H5Def!\"element\");\r    version(test_uim_html) { unittest { \r        assert(H5.element == \"<element><\/element>\");\r    }}\r\r    mixin(H5Def!\"em\");\r    version(test_uim_html) { unittest { \r        assert(H5.em == \"<em><\/em>\");\r    }}\r\r    mixin(H5Def!\"embed\");\r    version(test_uim_html) { unittest { \r        assert(H5.embed == \"<embed><\/embed>\");\r    }}\r\r    mixin(H5Def!\"fieldset\");\r    version(test_uim_html) { unittest { \r        assert(H5.fieldset == \"<fieldset><\/fieldset>\");\r    }}\r\r    mixin(H5Def!\"figcaption\");\r    version(test_uim_html) { unittest { \r        assert(H5.figcaption == \"<figcaption><\/figcaption>\");\r    }}\r    mixin(H5Def!\"figure\");\r    version(test_uim_html) { unittest { \r        assert(H5.figure == \"<figure><\/figure>\");\r    }}\r\r    mixin(H5Def!\"footer\");\r    version(test_uim_html) { unittest { \r        assert(H5.footer == \"<footer><\/footer>\");\r    }}\r\r    mixin(H5Def!\"form\");\r    version(test_uim_html) { unittest { \r        assert(H5.form == \"<form><\/form>\");\r    }}\r\r    mixin(H5Def!\"h1\");\r    version(test_uim_html) { unittest { \r        assert(H5.h1 == \"<h1><\/h1>\");\r    }}\r\r    mixin(H5Def!\"h2\");\r    version(test_uim_html) { unittest { \r        assert(H5.h2 == \"<h2><\/h2>\");\r    }\r    }\r    mixin(H5Def!\"h3\");\r    version(test_uim_html) { unittest { \r        assert(H5.h3 == \"<h3><\/h3>\");\r    }}\r\r    mixin(H5Def!\"h4\");\r    version(test_uim_html) { unittest { \r        assert(H5.h4 == \"<h4><\/h4>\");\r    }}\r\r    mixin(H5Def!\"h5\");\r    version(test_uim_html) { unittest { \r        assert(H5.h5 == \"<h5><\/h5>\");\r    }}\r\r    mixin(H5Def!\"h6\");\r    version(test_uim_html) { unittest { \r        assert(H5.h6 == \"<h6><\/h6>\");\r    }}\r\r    mixin(H5Def!\"head\");\r    version(test_uim_html) { unittest { \r        assert(H5.head == \"<head><\/head>\");\r    }}\r\r    mixin(H5Def!\"header\");\r    version(test_uim_html) { unittest { \r        assert(H5.header == \"<header><\/header>\");\r    }}\r\r    mixin(H5Def!\"hr\");\r    version(test_uim_html) { unittest { \r        assert(H5.hr == \"<hr><\/hr>\");\r    }}\r\r    mixin(H5Def!\"html\");\r    version(test_uim_html) { unittest { \r        assert(H5.html == \"<!doctype html><html><head><\/head><body><\/body><\/html>\");\r    }}\r\r    mixin(H5Def!\"i\");\r    version(test_uim_html) { unittest { \r        assert(H5.i == \"<i><\/i>\");\r    }}\r\r    mixin(H5Def!\"iframe\");\r    version(test_uim_html) { unittest { \r        assert(H5.iframe == \"<iframe><\/iframe>\");\r    }}\r\r    mixin(H5Def!\"img\");\r    version(test_uim_html) { unittest { \r        assert(H5.img == \"<img>\");\r    }}\r\r    mixin(H5Def!\"input\");\r    version(test_uim_html) { unittest { \r        assert(H5.input == \"<input>\");\r    }}\r\r    mixin(H5Def!\"ins\");\r    version(test_uim_html) { unittest { \r        assert(H5.ins == \"<ins><\/ins>\");\r    }}\r\r    mixin(H5Def!\"kbd\");\r    version(test_uim_html) { unittest { \r        assert(H5.kbd == \"<kbd><\/kbd>\");\r    }}\r\r    mixin(H5Def!\"label\");\r    version(test_uim_html) { unittest { \r        assert(H5.label == \"<label><\/label>\");\r    }\r    }\r    mixin(H5Def!\"legend\");\r    version(test_uim_html) { unittest { \r        assert(H5.legend == \"<legend><\/legend>\");\r    }}\r\r    mixin(H5Def!\"li\");\r    version(test_uim_html) { unittest { \r        assert(H5.li== \"<li><\/li>\");\r    }}\r\r    mixin(H5Def!\"link\");\r    version(test_uim_html) { unittest { \r        assert(H5.link== \"<link>\");\r    }}\r\r    // mixin(H5Def!\"main\");\rauto main_(this O)(string content) { _objs ~=  H5Main(content); return cast(O)this; }\rauto main_(this O)(DH5Obj[] content...) { _objs ~=  H5Main(content); return cast(O)this; }\rauto main_(this O)(DH5 content) { _objs ~=  H5Main(content); return cast(O)this; }\r\rauto main_(this O)(string id, string content) { _objs ~=  H5Main(id, content); return cast(O)this; }\rauto main_(this O)(string id, DH5Obj[] content...) { _objs ~=  H5Main(id, content); return cast(O)this; }\rauto main_(this O)(string id, DH5 content) { _objs ~=  H5Main(id, content); return cast(O)this; }\r\rauto main_(this O)(string id, string[] classes) { _objs ~=  H5Main(id, classes); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, string content) { _objs ~=  H5Main(id, classes, content); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, DH5Obj[] content...) { _objs ~=  H5Main(id, classes, content); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, DH5 content) { _objs ~=  H5Main(id, classes, content); return cast(O)this; }\r\rauto main_(this O)(string[] classes) { _objs ~=  H5Main(classes); return cast(O)this; }\rauto main_(this O)(string content) { _objs ~=  H5Main(classes, content); return cast(O)this; }\rauto main_(this O)(string[] classes,string[] classes,  DH5Obj[] content...) { _objs ~=  H5Main(classes, content); return cast(O)this; }\rauto main_(this O)(string[] classes, DH5 content) { _objs ~=  H5Main(classes, content); return cast(O)this; }\r\rauto main_(this O)(string[string] attributes) { _objs ~=  H5Main(attributes); return cast(O)this; }\rauto main_(this O)(string[string] attributes, string content) { _objs ~=  H5Main(attributes, content); return cast(O)this; }\rauto main_(this O)(string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Main(attributes, content); return cast(O)this; }\rauto main_(this O)(string[string] attributes, DH5 content) { _objs ~=  H5Main(attributes, content); return cast(O)this; }\r\rauto main_(this O)(string id, string[string] attributes) { _objs ~=  H5Main(id, attributes); return cast(O)this; }\rauto main_(this O)(string id, string[string] attributes, string content) { _objs ~=  H5Main(id, attributes, content); return cast(O)this; }\rauto main_(this O)(string id, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Main(id, attributes, content); return cast(O)this; }\rauto main_(this O)(string id, string[string] attributes, DH5 content) { _objs ~=  H5Main(id, attributes, content); return cast(O)this; }\r\rauto main_(this O)(string id, string[] classes, string[string] attributes) { _objs ~=  H5Main(id, classes, attributes); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, string[string] attributes, string content) { _objs ~=  H5Main(id, classes, attributes, content); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Main(id, classes, attributes, content); return cast(O)this; }\rauto main_(this O)(string id, string[] classes, string[string] attributes, DH5 content) { _objs ~=  H5Main(id, classes, attributes, content); return cast(O)this; }\r\r    version(test_uim_html) { unittest { \r        assert(H5.main_ == \"<main><\/main>\");\r    }}\r\r    mixin(H5Def!\"map\");\r    version(test_uim_html) { unittest { \r        assert(H5.map == \"<map><\/map>\");\r    }}\r\r    mixin(H5Def!\"mark\");\r    version(test_uim_html) { unittest { \r        assert(H5.mark == \"<mark><\/mark>\");\r    }}\r\r    mixin(H5Def!\"math\");\r    version(test_uim_html) { unittest { \r        assert(H5.math == \"<math><\/math>\");\r    }}\r\r    mixin(H5Def!\"menu\");\r    version(test_uim_html) { unittest { \r        assert(H5.menu == \"<menu><\/menu>\");\r    }}\r\r    mixin(H5Def!\"meta\");\r    version(test_uim_html) { unittest { \r        assert(H5.meta == \"<meta>\");\r    }}\r\r    mixin(H5Def!\"meter\");\r    version(test_uim_html) { unittest { \r        assert(H5.meter == \"<meter><\/meter>\");\r    }}\r\r    mixin(H5Def!\"nav\");\r    version(test_uim_html) { unittest { \r        assert(H5.nav == \"<nav><\/nav>\");\r    }}\r\r    mixin(H5Def!\"noscript\");\r    version(test_uim_html) { unittest { \r        assert(H5.noscript == \"<noscript><\/noscript>\");\r    }}\r\r    mixin(H5Def!\"object\");\r    version(test_uim_html) { unittest { \r        assert(H5.object == \"<object><\/object>\");\r    }}\r\r    mixin(H5Def!\"ol\");\r    version(test_uim_html) { unittest { \r        assert(H5.ol == \"<ol><\/ol>\");\r    }}\r\r    mixin(H5Def!\"optgroup\");\r    version(test_uim_html) { unittest { \r        assert(H5.optgroup == \"<optgroup><\/optgroup>\");\r    }}\r\r    mixin(H5Def!\"option\");\r    version(test_uim_html) { unittest { \r        assert(H5.option == \"<option><\/option>\");\r    }}\r\r    mixin(H5Def!\"output\");\r    version(test_uim_html) { unittest { \r        assert(H5.output == \"<output><\/output>\");\r    }}\r\r    mixin(H5Def!\"p\");\r    version(test_uim_html) { unittest { \r        assert(H5.p == \"<p><\/p>\");\r    }}\r\r    mixin(H5Def!\"param\");\r    version(test_uim_html) { unittest { \r        assert(H5.param == \"<param><\/param>\");\r    }}\r\r    mixin(H5Def!\"picture\");\r    version(test_uim_html) { unittest { \r        assert(H5.picture == \"<picture><\/picture>\");\r    }\r    }\r    mixin(H5Def!\"pre\");\r    version(test_uim_html) { unittest { \r        assert(H5.pre == \"<pre><\/pre>\");\r    }}\r\r    mixin(H5Def!\"progress\");\r    version(test_uim_html) { unittest { \r        assert(H5.progress == \"<progress><\/progress>\");\r    }}\r\r    mixin(H5Def!\"q\");\r    version(test_uim_html) { unittest { \r        assert(H5.q == \"<q><\/q>\");\r    }}\r\r    mixin(H5Def!\"rbc\");\r    version(test_uim_html) { unittest { \r        assert(H5.rbc == \"<rbc><\/rbc>\");\r    }}\r\r    mixin(H5Def!\"rp\");\r    version(test_uim_html) { unittest { \r        assert(H5.rp == \"<rp><\/rp>\");\r    }}\r\r    mixin(H5Def!\"rt\");\r    version(test_uim_html) { unittest { \r        assert(H5.rt == \"<rt><\/rt>\");\r    }}\r\r   mixin(H5Def!\"rtc\");\r    version(test_uim_html) { unittest {\r          assert(H5.rtc == \"<rtc><\/rtc>\");\r    }}\r\r    mixin(H5Def!\"ruby\");\r    version(test_uim_html) { unittest {\r            //assert(H5.ruby == \"<ruby><\/ruby>\");\r    }}\r\r    mixin(H5Def!\"s\");\r    version(test_uim_html) { unittest {\r            assert(H5.s == \"<s><\/s>\");\r    }}\r\r    mixin(H5Def!\"samp\");\r    version(test_uim_html) { unittest { \r        assert(H5.samp == \"<samp><\/samp>\");\r    }}\r\r    mixin(H5Def!\"script\");\r    version(test_uim_html) { unittest { \r        assert(H5.script == \"<script><\/script>\");\r    }}\r\r    mixin(H5Def!\"section\");\r    version(test_uim_html) { unittest { \r        assert(H5.section == \"<section><\/section>\");\r    }}\r\r    mixin(H5Def!\"select\");\r    version(test_uim_html) { unittest { \r        assert(H5.script == \"<script><\/script>\");\r    }}\r\r/*    mixin(H5Def!\"slot\");\r    version(test_uim_html) { unittest { \r        assert(H5.slot == \"<slot><\/slot>\");\r    }\r */\r    mixin(H5Def!\"small\");\r    version(test_uim_html) { unittest { \r        assert(H5.small == \"<small><\/small>\");\r    }}\r\r    mixin(H5Def!\"source\");\r    version(test_uim_html) { unittest { \r        assert(H5.source == \"<source><\/source>\");\r    }}\r\r    mixin(H5Def!\"span\");\r    version(test_uim_html) { unittest { \r        assert(H5.span == \"<span><\/span>\");\r    }}\r\r    mixin(H5Def!\"strong\");\r    version(test_uim_html) { unittest { \r        assert(H5.strong == \"<strong><\/strong>\");\r    }}\r\r    mixin(H5Def!\"style\");\r    version(test_uim_html) { unittest { \r        assert(H5.style == \"<style><\/style>\");\r    }}\r\r    mixin(H5Def!\"sub\");\r    version(test_uim_html) { unittest { \r        assert(H5.sub == \"<sub><\/sub>\");\r    }}\r\r    mixin(H5Def!\"summary\");\r    version(test_uim_html) { unittest { \r        assert(H5.summary == \"<summary><\/summary>\");\r    }}\r\r    mixin(H5Def!\"sup\");\r    version(test_uim_html) { unittest { \r        assert(H5.sup == \"<sup><\/sup>\");\r    }}\r\r    mixin(H5Def!\"svg\");\r    version(test_uim_html) { unittest { \r        assert(H5.svg == \"<svg><\/svg>\");\r    }}\r\r    mixin(H5Def!\"table\");\r    version(test_uim_html) { unittest { \r        assert(H5.table == \"<table><\/table>\");\r    }\r    }\r    mixin(H5Def!\"tbody\");\r    version(test_uim_html) { unittest { \r        assert(H5.tbody == \"<tbody><\/tbody>\");\r    }}\r\r    mixin(H5Def!\"td\");\r    version(test_uim_html) { unittest { \r        assert(H5.td == \"<td><\/td>\");\r    }}\r\r    // mixin(H5Def!\"template\");\rauto template_(this O)(string content) { _objs ~=  H5Template(content); return cast(O)this; }\rauto template_(this O)(DH5Obj[] content...) { _objs ~=  H5Template(content); return cast(O)this; }\rauto template_(this O)(DH5 content) { _objs ~=  H5Template(content); return cast(O)this; }\r\rauto template_(this O)(string id, string content) { _objs ~=  H5Template(id, content); return cast(O)this; }\rauto template_(this O)(string id, DH5Obj[] content...) { _objs ~=  H5Template(id, content); return cast(O)this; }\rauto template_(this O)(string id, DH5 content) { _objs ~=  H5Template(id, content); return cast(O)this; }\r\rauto template_(this O)(string id, string[] classes) { _objs ~=  H5Template(id, classes); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, string content) { _objs ~=  H5Template(id, classes, content); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, DH5Obj[] content...) { _objs ~=  H5Template(id, classes, content); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, DH5 content) { _objs ~=  H5Template(id, classes, content); return cast(O)this; }\r\rauto template_(this O)(string[] classes) { _objs ~=  H5Template(classes); return cast(O)this; }\rauto template_(this O)(string[] classes, string content) { _objs ~=  H5Template(classes, content); return cast(O)this; }\rauto template_(this O)(string[] classes, DH5Obj[] content...) { _objs ~=  H5Template(classes, content); return cast(O)this; }\rauto template_(this O)(string[] classes, DH5 content) { _objs ~=  H5Template(classes, content); return cast(O)this; }\r\rauto template_(this O)(string[string] attributes) { _objs ~=  H5Template(attributes); return cast(O)this; }\rauto template_(this O)(string[string] attributes, string content) { _objs ~=  H5Template(attributes, content); return cast(O)this; }\rauto template_(this O)(string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Template(attributes, content); return cast(O)this; }\rauto template_(this O)(string[string] attributes, DH5 content) { _objs ~=  H5Template(attributes, content); return cast(O)this; }\r\rauto template_(this O)(string id, string[string] attributes) { _objs ~=  H5Template(id, attributes); return cast(O)this; }\rauto template_(this O)(string id, string[string] attributes, string content) { _objs ~=  H5Template(id, attributes, content); return cast(O)this; }\rauto template_(this O)(string id, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Template(id, attributes, content); return cast(O)this; }\rauto template_(this O)(string id, string[string] attributes, DH5 content) { _objs ~=  H5Template(id, attributes, content); return cast(O)this; }\r\rauto template_(this O)(string id, string[] classes, string[string] attributes) { _objs ~=  H5Template(id, classes, attributes); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, string[string] attributes, string content) { _objs ~=  H5Template(id, classes, attributes, content); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5Template(id, classes, attributes, content); return cast(O)this; }\rauto template_(this O)(string id, string[] classes, string[string] attributes, DH5 content) { _objs ~=  H5Template(id, classes, attributes, content); return cast(O)this; }\r\r    version(test_uim_html) { unittest { \r        assert(H5.template_ == \"<template><\/template>\");\r    }}\r\r    mixin(H5Def!\"textarea\");\r    version(test_uim_html) { unittest { \r        assert(H5.textarea == \"<textarea><\/textarea>\");\r    }}\r\r    mixin(H5Def!\"tfoot\");\r    version(test_uim_html) { unittest { \r        assert(H5.tfoot == \"<tfoot><\/tfoot>\");\r    }}\r\r    mixin(H5Def!\"th\");\r    version(test_uim_html) { unittest { \r        assert(H5.th == \"<th><\/th>\");\r    }}\r\r    mixin(H5Def!\"thead\");\r    version(test_uim_html) { unittest { \r        assert(H5.thead == \"<thead><\/thead>\");\r    }}\r\r    mixin(H5Def!\"title\");\r    version(test_uim_html) { unittest { \r        assert(H5.title == \"<title><\/title>\");\r    }}\r\r    mixin(H5Def!\"tr\");\r    version(test_uim_html) { unittest { \r        assert(H5.tr == \"<tr><\/tr>\");\r    }}\r\r    mixin(H5Def!\"track\");\r    version(test_uim_html) { unittest { \r        assert(H5.track == \"<track><\/track>\");\r    }}\r\r    mixin(H5Def!\"u\");\r    version(test_uim_html) { unittest { \r        assert(H5.u == \"<u><\/u>\");\r    }}\r\r    mixin(H5Def!\"ul\");\r    version(test_uim_html) { unittest { \r        assert(H5.ul == \"<ul><\/ul>\");\r    }}\r\r    mixin(H5Def!\"var\");\r    version(test_uim_html) { unittest { \r        assert(H5.var == \"<var><\/var>\");\r    }}\r\r    mixin(H5Def!\"video\");\r    version(test_uim_html) { unittest { \r        assert(H5.video == \"<video><\/video>\");\r    }}\r\r    mixin(H5Def!\"wbr\");\r    version(test_uim_html) { unittest { \r        assert(H5.wbr == \"<wbr><\/wbr>\");\r    }}\r\r    bool opEquals(string text) { return (text == toString); }\r    override string toString() {\r        return _objs.map!(obj => obj.toString).join;\r    }\r }    \rauto H5() { return new DH5(); }\r\rtemplate H5Def(string name) {    \r  const char[] H5Def = \"\rO \"~name.toLower~\"(this O)(string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string id, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string id, string[] classes) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string[] classes) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string[string] attributes) { _objs ~=  H5\"~name.toLower.capitalize~\"(attributes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[string] attributes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[string] attributes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[string] attributes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(attributes, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string id, string[string] attributes) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, attributes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[string] attributes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[string] attributes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, attributes, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string id, string[] classes, string[string] attributes) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, attributes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, string[string] attributes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string id, string[] classes, string[string] attributes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(id, classes, attributes, content); return cast(O)this; }\r\rO \"~name.toLower~\"(this O)(string[] classes, string[string] attributes) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, attributes); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, string[string] attributes, string content) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, string[string] attributes, DH5Obj[] content...) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, attributes, content); return cast(O)this; }\rO \"~name.toLower~\"(this O)(string[] classes, string[string] attributes, DH5 content) { _objs ~=  H5\"~name.toLower.capitalize~\"(classes, attributes, content); return cast(O)this; }\r \";\r}",
		"isFinal": false,
		"package": "uim.html.classes",
		"visibility": "protected",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.h5;\r\rimport uim.html;\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.h5",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5 \r    this()  _objs = []; }\r\r    DH5Obj[] _objs;\r    auto objs(this O)()  return _objs; }\r    O clear(this O)()   _objs = []; return cast(O)this; }\r\r    DH5Obj obj(string tag) \r        switch(tag.toLower) \r            case \"thead\""
		],
		"isStatic": true,
		"library": "uim-html",
		"header": "module uim.html.classes.h5;\r\rimport uim.html;\r@safe:\r\rDH5 \r    this()  _objs = []; }\r\r    DH5Obj[] _objs;\r    auto objs(this O)()  return _objs; }\r    O clear(this O)()   _objs = []; return cast(O)this; }\r\r    DH5Obj obj(string tag) \r        switch(tag.toLower) \r            case \"thead\": return H5Thead();\r            default: return H5Obj().tag(tag);\r        } \r    }\r\r/*\r    T opBinary(string op)(DH5Obj[] someElements) \r        if (op == \"~\") return _objs~someElements;\r        else static",
		"parent": "DH5 \r    this()  _objs = []; }\r\r    DH5Obj[] _objs;\r    auto objs(this O)()  return _objs; }\r    O clear(this O)()   _objs = []; return cast(O)this; }\r\r    DH5Obj obj(string tag) \r        switch(tag.toLower) \r            case \"thead\""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\bases\\file.d": {
		"origin": "class DFileJsonBase : DJsonBase {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.bases",
		"visibility": "public",
		"comments": [],
		"name": "DFileJsonBase",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.bases.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DJsonBase"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DFileJsonBase : DJsonBase",
		"parent": "DJsonBase"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\commands\\command.d": {
		"origin": "class DCommand : UIMObject, ICommand {\r",
		"isFinal": false,
		"package": "uim.oop.commands",
		"visibility": "public",
		"comments": [
			"Base class for commands"
		],
		"name": "DCommand",
		"isAbstract": false,
		"namespace": "uim.oop.commands.command",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"ICommand"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DCommand : UIMObject, ICommand",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\models\\uim\\models\\classes\\attributes\\builder.d": {
		"origin": "static class DAttributeBuilder {\r",
		"isFinal": false,
		"package": "uim.models.classes.attributes",
		"visibility": "public",
		"comments": [],
		"name": "DAttributeBuilder",
		"isAbstract": false,
		"namespace": "uim.models.classes.attributes.builder",
		"isInherited": false,
		"methods": {
			"public DAttribute build()": {
				"origin": "public DAttribute build()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DAttribute",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DAttribute build()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": true,
		"library": "uim-models",
		"header": "DAttributeBuilder",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\tbody.d": {
		"origin": "class DH5Tbody : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Tbody",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Tbody : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\datetimelocal.d": {
		"origin": "class DH5InputDATETIMELOCAL : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputDATETIMELOCAL",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputDATETIMELOCAL : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\option.d": {
		"origin": "class DH5Option : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Option",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Option : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\col.d": {
		"origin": "class DH5Col : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"WRapper for col tag - defines a column within a table and is used for defining common semantics on all common cells."
		],
		"name": "DH5Col",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Col : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\windows\\file.d": {
		"origin": "module uim.filesystems.classes.os.windows.file;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DWindowsFile : DFile {\r  mixin(FileThis!(\"Windows\"));\r}\r\rmixin(FileCalls!(\"Windows\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.windows",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.windows.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.windows.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.windows.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDWindowsFile : DFile \r  mixin(FileThis!(\"Windows\"));\r}\r\rmixin(FileCalls!(\"Windows\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\element.d": {
		"origin": "class DH5Element : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Element",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Element : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\memory\\filesystem.d": {
		"origin": "class DMemoryFilesystem : DFilesystem {\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.memory",
		"visibility": "public",
		"comments": [],
		"name": "DMemoryFilesystem",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.memory.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFilesystem"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "DMemoryFilesystem : DFilesystem",
		"parent": "DFilesystem"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\form.d": {
		"origin": "class DH5Form : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Form",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"@property string method()": {
				"origin": "@property string method()",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string method()",
				"isStatic": false
			},
			"@property string target()": {
				"origin": "@property string target()",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string target()",
				"isStatic": false
			},
			"void add(FormTargets value)": {
				"origin": "void add(FormTargets value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "FormTargets value",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void add(FormTargets value)",
				"isStatic": false
			},
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			},
			"void add(Methods value)": {
				"origin": "void add(Methods value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Methods value",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void add(Methods value)",
				"isStatic": false
			},
			"override public string toString()": {
				"origin": "override public string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Form : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\configurations\\configuration.d": {
		"origin": "class DConfiguration : UIMObject, IConfiguration {",
		"isFinal": false,
		"package": "uim.oop.configurations",
		"visibility": "public",
		"comments": [
			"Configuration for handling config data = key: string / value: Json"
		],
		"name": "DConfiguration",
		"isAbstract": false,
		"namespace": "uim.oop.configurations.configuration",
		"isInherited": false,
		"methods": {
			"long getBoolean(string key, bool nullValue = false)": {
				"origin": "long getBoolean(string key, bool nullValue = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, bool nullValue = false",
				"visibility": "public",
				"datatype": "long",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "long getBoolean(string key, bool nullValue = false)",
				"isStatic": false
			},
			"IConfiguration merge(string key, Json[] newValue)": {
				"origin": "IConfiguration merge(string key, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, Json[] newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, double newValue)": {
				"origin": "IConfiguration updateDefault(string key, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, double newValue)",
				"isStatic": false
			},
			"void opAssign(Json[string] newData)": {
				"origin": "void opAssign(Json[string] newData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] newData",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opAssign(Json[string] newData)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, Json newValue)": {
				"origin": "IConfiguration merge(string[] keys, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, Json newValue)",
				"isStatic": false
			},
			"Json opIndex(string key)": {
				"origin": "Json opIndex(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json opIndex(string key)",
				"isStatic": false
			},
			"IConfiguration mergeDefaults(T)(string[] keys, T value)": {
				"origin": "IConfiguration mergeDefaults(T)(string[] keys, T value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "T)(string[] keys, T value",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration mergeDefaults(T)(string[] keys, T value)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, Json[string] newValue)": {
				"origin": "IConfiguration update(string[] keys, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, bool newValue)": {
				"origin": "IConfiguration update(string[] keys, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, bool newValue)",
				"isStatic": false
			},
			"override bool initialize(Json[string] initData = null)": {
				"origin": "override bool initialize(Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] initData = null",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool initialize(Json[string] initData = null)",
				"isStatic": false
			},
			"bool isLong(string key)": {
				"origin": "bool isLong(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isLong(string key)",
				"isStatic": false
			},
			"bool hasKeys(string[] keys...)": {
				"origin": "bool hasKeys(string[] keys...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasKeys(string[] keys...)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, bool newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, bool newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, string newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, string newValue)",
				"isStatic": false
			},
			"bool hasAllValues(Json[] values)": {
				"origin": "bool hasAllValues(Json[] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[] values",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllValues(Json[] values)",
				"isStatic": false
			},
			"Json[string] get(string[] keys, bool compressMode = false)": {
				"origin": "Json[string] get(string[] keys, bool compressMode = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, bool compressMode = false",
				"visibility": "public",
				"datatype": "Json[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json[string] get(string[] keys, bool compressMode = false)",
				"isStatic": false
			},
			"bool isArray(string key)": {
				"origin": "bool isArray(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isArray(string key)",
				"isStatic": false
			},
			"IConfiguration mergeDefaults(T)(T[string] items)": {
				"origin": "IConfiguration mergeDefaults(T)(T[string] items)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "T)(T[string] items",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration mergeDefaults(T)(T[string] items)",
				"isStatic": false
			},
			"IConfiguration setDefault(string key, bool newValue)": {
				"origin": "IConfiguration setDefault(string key, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefault(string key, bool newValue)",
				"isStatic": false
			},
			"Json[string] getMap(string key)": {
				"origin": "Json[string] getMap(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "Json[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json[string] getMap(string key)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, double newValue)": {
				"origin": "IConfiguration update(string[] keys, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, double newValue)",
				"isStatic": false
			},
			"IConfiguration setDefault(string key, double newValue)": {
				"origin": "IConfiguration setDefault(string key, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefault(string key, double newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string key, long newValue)": {
				"origin": "IConfiguration merge(string key, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, long newValue)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, string newValue)": {
				"origin": "IConfiguration update(string[] keys, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, string newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, long newValue)": {
				"origin": "IConfiguration merge(string[] keys, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, long newValue)",
				"isStatic": false
			},
			"bool hasAllDefaults(string[] keys)": {
				"origin": "bool hasAllDefaults(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllDefaults(string[] keys)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, Json[] newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, Json[] newValue)",
				"isStatic": false
			},
			"string getString(string key, string nullValue = null)": {
				"origin": "string getString(string key, string nullValue = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string nullValue = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string getString(string key, string nullValue = null)",
				"isStatic": false
			},
			"bool hasAnyKeys(string[] keys...)": {
				"origin": "bool hasAnyKeys(string[] keys...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyKeys(string[] keys...)",
				"isStatic": false
			},
			"bool hasAnyDefaults(string[] keys)": {
				"origin": "bool hasAnyDefaults(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyDefaults(string[] keys)",
				"isStatic": false
			},
			"IConfiguration setDefault(string key, string newValue)": {
				"origin": "IConfiguration setDefault(string key, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefault(string key, string newValue)",
				"isStatic": false
			},
			"IConfiguration update(string key, double newValue)": {
				"origin": "IConfiguration update(string key, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, double newValue)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, Json[] newValue)": {
				"origin": "IConfiguration update(string[] keys, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, Json[] newValue)",
				"isStatic": false
			},
			"IConfiguration clear()": {
				"origin": "IConfiguration clear()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration clear()",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, double newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, double newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, string newValue)": {
				"origin": "IConfiguration updateDefault(string key, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, string newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, Json[string] newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, Json[] newValue)": {
				"origin": "IConfiguration updateDefault(string key, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, Json[] newValue)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, Json[string] newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, Json[string] newValue)",
				"isStatic": false
			},
			"bool hasKeys(string[] keys)": {
				"origin": "bool hasKeys(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasKeys(string[] keys)",
				"isStatic": false
			},
			"IConfiguration update(string key, Json[] newValue)": {
				"origin": "IConfiguration update(string key, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, Json[] newValue)",
				"isStatic": false
			},
			"bool isBoolean(string key)": {
				"origin": "bool isBoolean(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isBoolean(string key)",
				"isStatic": false
			},
			"IConfiguration setDefault(string key, long newValue)": {
				"origin": "IConfiguration setDefault(string key, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefault(string key, long newValue)",
				"isStatic": false
			},
			"string[string] getStringMap(string key)": {
				"origin": "string[string] getStringMap(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[string] getStringMap(string key)",
				"isStatic": false
			},
			"IConfiguration merge(Json[string] newItems, string[] validKeys = null)": {
				"origin": "IConfiguration merge(Json[string] newItems, string[] validKeys = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] newItems, string[] validKeys = null",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(Json[string] newItems, string[] validKeys = null)",
				"isStatic": false
			},
			"Json[] getArray(string key)": {
				"origin": "Json[] getArray(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json[] getArray(string key)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, Json[] newValue)": {
				"origin": "IConfiguration merge(string[] keys, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, Json[] newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, long newValue)": {
				"origin": "IConfiguration updateDefault(string key, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, long newValue)",
				"isStatic": false
			},
			"bool hasAnyValues(Json[] values...)": {
				"origin": "bool hasAnyValues(Json[] values...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[] values...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyValues(Json[] values...)",
				"isStatic": false
			},
			"bool hasAnyValues(Json[] values)": {
				"origin": "bool hasAnyValues(Json[] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[] values",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyValues(Json[] values)",
				"isStatic": false
			},
			"long getLong(string key, long nullValue = 0)": {
				"origin": "long getLong(string key, long nullValue = 0)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, long nullValue = 0",
				"visibility": "public",
				"datatype": "long",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "long getLong(string key, long nullValue = 0)",
				"isStatic": false
			},
			"IConfiguration merge(string key, double newValue)": {
				"origin": "IConfiguration merge(string key, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, double newValue)",
				"isStatic": false
			},
			"IConfiguration set(string[string] data, string[] keys = null)": {
				"origin": "IConfiguration set(string[string] data, string[] keys = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] data, string[] keys = null",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration set(string[string] data, string[] keys = null)",
				"isStatic": false
			},
			"Json shift(string key)": {
				"origin": "Json shift(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json shift(string key)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, string newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, string newValue)",
				"isStatic": false
			},
			"IConfiguration update(string key, bool newValue)": {
				"origin": "IConfiguration update(string key, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, bool newValue)",
				"isStatic": false
			},
			"string[] getStringArray(string key, string[] nullValue = null)": {
				"origin": "string[] getStringArray(string key, string[] nullValue = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string[] nullValue = null",
				"visibility": "public",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] getStringArray(string key, string[] nullValue = null)",
				"isStatic": false
			},
			"Json getJson(string key)": {
				"origin": "Json getJson(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "Json getJson(string key)",
				"isStatic": false
			},
			"IConfiguration update(string key, Json[string] newValue)": {
				"origin": "IConfiguration update(string key, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration removeKey(Json json)": {
				"origin": "IConfiguration removeKey(Json json)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json json",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration removeKey(Json json)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, bool newValue)": {
				"origin": "IConfiguration updateDefault(string key, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, bool newValue)",
				"isStatic": false
			},
			"bool isDouble(string key)": {
				"origin": "bool isDouble(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isDouble(string key)",
				"isStatic": false
			},
			"IConfiguration merge(string key, Json newValue)": {
				"origin": "IConfiguration merge(string key, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, Json newValue)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, long newValue)": {
				"origin": "IConfiguration update(string[] keys, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, long newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string key, string newValue)": {
				"origin": "IConfiguration merge(string key, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, string newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, double newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, double newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, double newValue)": {
				"origin": "IConfiguration merge(string[] keys, double newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, double newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, double newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, Json newValue)": {
				"origin": "IConfiguration updateDefault(string key, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, Json newValue)",
				"isStatic": false
			},
			"IConfiguration removeKey(Json[string] items)": {
				"origin": "IConfiguration removeKey(Json[string] items)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] items",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration removeKey(Json[string] items)",
				"isStatic": false
			},
			"IConfiguration update(string[] keys, Json newValue)": {
				"origin": "IConfiguration update(string[] keys, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string[] keys, Json newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string key, Json[string] newValue)": {
				"origin": "IConfiguration merge(string key, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, Json newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, Json newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, long newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, long newValue)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, bool newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, bool newValue)",
				"isStatic": false
			},
			"double getDouble(string key, double nullValue = 0.0)": {
				"origin": "double getDouble(string key, double nullValue = 0.0)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, double nullValue = 0.0",
				"visibility": "public",
				"datatype": "double",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "double getDouble(string key, double nullValue = 0.0)",
				"isStatic": false
			},
			"IConfiguration removeKey(string[] keys...)": {
				"origin": "IConfiguration removeKey(string[] keys...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys...",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration removeKey(string[] keys...)",
				"isStatic": false
			},
			"bool hasAllValues(Json[] values...)": {
				"origin": "bool hasAllValues(Json[] values...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[] values...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAllValues(Json[] values...)",
				"isStatic": false
			},
			"bool isString(string key)": {
				"origin": "bool isString(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isString(string key)",
				"isStatic": false
			},
			"bool isMap(string key)": {
				"origin": "bool isMap(string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isMap(string key)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, long newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, long newValue)",
				"isStatic": false
			},
			"IConfiguration mergeDefaults(T)(string key, T value)": {
				"origin": "IConfiguration mergeDefaults(T)(string key, T value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "T)(string key, T value",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration mergeDefaults(T)(string key, T value)",
				"isStatic": false
			},
			"IConfiguration update(string key, long newValue)": {
				"origin": "IConfiguration update(string key, long newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, long newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, long newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, Json[string] newValue)": {
				"origin": "IConfiguration merge(string[] keys, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration update(string key, Json newValue)": {
				"origin": "IConfiguration update(string key, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, Json newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string key, Json[string] newValue)": {
				"origin": "IConfiguration updateDefault(string key, Json[string] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json[string] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string key, Json[string] newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string key, bool newValue)": {
				"origin": "IConfiguration merge(string key, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string key, bool newValue)",
				"isStatic": false
			},
			"IConfiguration set(Json[string] newData, string[] keys = null)": {
				"origin": "IConfiguration set(Json[string] newData, string[] keys = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] newData, string[] keys = null",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration set(Json[string] newData, string[] keys = null)",
				"isStatic": false
			},
			"IConfiguration setDefaults(string[] keys, Json[] newValue)": {
				"origin": "IConfiguration setDefaults(string[] keys, Json[] newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json[] newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration setDefaults(string[] keys, Json[] newValue)",
				"isStatic": false
			},
			"IConfiguration updateDefault(string[] keys, Json newValue)": {
				"origin": "IConfiguration updateDefault(string[] keys, Json newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, Json newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration updateDefault(string[] keys, Json newValue)",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, bool newValue)": {
				"origin": "IConfiguration merge(string[] keys, bool newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, bool newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, bool newValue)",
				"isStatic": false
			},
			"IConfiguration clone()": {
				"origin": "IConfiguration clone()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration clone()",
				"isStatic": false
			},
			"IConfiguration merge(string[] keys, string newValue)": {
				"origin": "IConfiguration merge(string[] keys, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration merge(string[] keys, string newValue)",
				"isStatic": false
			},
			"IConfiguration update(string key, string newValue)": {
				"origin": "IConfiguration update(string key, string newValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, string newValue",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(string key, string newValue)",
				"isStatic": false
			},
			"IConfiguration mergeDefault(string key, Json value)": {
				"origin": "IConfiguration mergeDefault(string key, Json value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string key, Json value",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration mergeDefault(string key, Json value)",
				"isStatic": false
			},
			"IConfiguration update(Json[string] newItems, string[] validKeys = null)": {
				"origin": "IConfiguration update(Json[string] newItems, string[] validKeys = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] newItems, string[] validKeys = null",
				"visibility": "public",
				"datatype": "IConfiguration",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IConfiguration update(Json[string] newItems, string[] validKeys = null)",
				"isStatic": false
			},
			"bool hasAnyKeys(string[] keys)": {
				"origin": "bool hasAnyKeys(string[] keys)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] keys",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasAnyKeys(string[] keys)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IConfiguration"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DConfiguration : UIMObject, IConfiguration",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\legend.d": {
		"origin": "class DH5Legend : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <legend> - represents a caption for the content of its parent <fieldset>."
		],
		"name": "DH5Legend",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Legend : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\collections\\package.d": {
		"origin": "/****************************************************************************************************************\r",
		"isFinal": false,
		"package": "uim.jsonbases.classes",
		"visibility": "public",
		"comments": [],
		"name": "/****************************************************************************************************************",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.collections",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "/****************************************************************************************************************",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\exceptions\\exception.d": {
		"origin": "module uim.html.exceptions.exception;\r\rimport uim.html;\r\r@safe:\r\r// I18n exception.\rclass DHtmlException : UIMException {\r  mixin(ExceptionThis!(\"Html\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exeption in libary uim-html\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Html\"));\r\runittest {\r  testException(HtmlException);\r}\r",
		"isFinal": false,
		"package": "uim.html.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.exceptions.exception;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.exceptions.exception;\r\rimport uim.html;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\controllers\\uim\\controllers\\classes\\controllers\\factory.d": {
		"origin": "class DControllerFactory : DFactory!DController { ",
		"isFinal": false,
		"package": "uim.controllers.classes.controllers",
		"visibility": "public",
		"comments": [],
		"name": "DControllerFactory",
		"isAbstract": false,
		"namespace": "uim.controllers.classes.controllers.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DController"
		],
		"isStatic": false,
		"library": "uim-controllers",
		"header": "DControllerFactory : DFactory!DController",
		"parent": "DFactory!DController"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\dialog.d": {
		"origin": "class DH5Dialog : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Dialog",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Dialog : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\style.d": {
		"origin": "class DH5Style : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Style",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Style : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\fieldset.d": {
		"origin": "class DH5Fieldset : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Fieldset",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Fieldset : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\ins.d": {
		"origin": "class DH5Ins : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <ins> - represents a range of text that has been added to a document."
		],
		"name": "DH5Ins",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Ins : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\bases\\memory.d": {
		"origin": "class DMemoryJsonBase : DJsonBase {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.bases",
		"visibility": "public",
		"comments": [],
		"name": "DMemoryJsonBase",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.bases.memory",
		"isInherited": false,
		"methods": {
			"version(test_uim_jsonbase)": {
				"origin": "version(test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_jsonbase)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_jsonbase)",
				"isStatic": false
			},
			"override IJsonTenant createTenant(string aName)": {
				"origin": "override IJsonTenant createTenant(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName",
				"visibility": "public",
				"datatype": "IJsonTenant",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "IJsonTenant createTenant(string aName)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DJsonBase"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DMemoryJsonBase : DJsonBase",
		"parent": "DJsonBase"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\br.d": {
		"origin": "class DH5Br : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the br tag - produces a line break in text (carriage-return)."
		],
		"name": "DH5Br",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Br : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\containers\\vectors\\vector.d": {
		"origin": "class DVector(T) {\r",
		"isFinal": false,
		"package": "uim.oop.containers.vectors",
		"visibility": "public",
		"comments": [],
		"name": "DVector(T)",
		"isAbstract": false,
		"namespace": "uim.oop.containers.vectors.vector",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DVector(T)",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\comment.d": {
		"origin": "class DH5Comment : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Comment",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Comment : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\dfn.d": {
		"origin": "class DH5Dfn : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Dfn",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Dfn : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\commands\\registry.d": {
		"origin": "class DCommandRegistry : DObjectRegistry!DCommand {\r",
		"isFinal": false,
		"package": "uim.oop.commands",
		"visibility": "public",
		"comments": [],
		"name": "DCommandRegistry",
		"isAbstract": false,
		"namespace": "uim.oop.commands.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DCommand"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DCommandRegistry : DObjectRegistry!DCommand",
		"parent": "DObjectRegistry!DCommand"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\address.d": {
		"origin": "class DH5Address : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <address> - indicates that the enclosed HTML provides contact information for a person or people, or for an organization."
		],
		"name": "DH5Address",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Address : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\hr.d": {
		"origin": "class DH5Hr : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Hr",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Hr : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\tr.d": {
		"origin": "class DH5Tr : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Tr",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Tr : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\validators\\validator.d": {
		"origin": "class DUIMValidator : UIMObject, IValidator {\r",
		"isFinal": false,
		"package": "uim.oop.validators",
		"visibility": "public",
		"comments": [
			"Base class for validators"
		],
		"name": "DUIMValidator",
		"isAbstract": false,
		"namespace": "uim.oop.validators.validator",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IValidator"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DUIMValidator : UIMObject, IValidator",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\base.d": {
		"origin": "class DH5Base : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the base tag - specifies the base URL and/or target for all relative URLs in a document."
		],
		"name": "DH5Base",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Base : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\em.d": {
		"origin": "class DH5Em: DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Em",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Em: DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\formatters\\collection.d": {
		"origin": "class DFormatterCollection : DCollection!DFormatter {   ",
		"isFinal": false,
		"package": "uim.oop.formatters",
		"visibility": "public",
		"comments": [],
		"name": "DFormatterCollection",
		"isAbstract": false,
		"namespace": "uim.oop.formatters.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCollection!DFormatter"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFormatterCollection : DCollection!DFormatter",
		"parent": "DCollection!DFormatter"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\entry.d": {
		"origin": "module uim.filesystems.classes.entry;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DFilesystemEntry : UIMObject, IFilesystemEntry {\r  this() {\r    super(\"FilesystemEntry\");\r  }\r\r  this(Json[string] initData) {\r    super(\"FilesystemEntry\", initData);\r  }\r\r  this(string name, Json[string] initData = null) {\r    super(name, initData);\r  }\r\r  this(string[] path, Json[string] initData = null) {\r    this(initData);\r    this.path(path);\r  }\r\r  this(IFilesystem filesystem, Json[string] initData = null) {\r    this(initData);\r    this.filesystem(filesystem);\r  }\r\r  this(IFilesystem filesystem, string name, Json[string] initData = null) {\r    this(name, initData);\r    this.filesystem(filesystem);\r  }\r\r  this(IFilesystem filesystem, string[] path, Json[string] initData = null) {\r    this(name, initData);\r    this.filesystem(filesystem);\r  }\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    return true;\r  }\r\r  // Owning Filesystem\r  bool hasFilesystem() {\r    return (filesystem !is null);\r  }\r\r  mixin(TProperty!(\"IFilesystem\", \"filesystem\"));\r\r  // Get name of entry\r  mixin(TProperty!(\"string[]\", \"path\"));\r\r  size_t size() {\r    return 0;\r  }\r\r  void parentFolder(IFolder aFolder) {\r  }\r\r  IFolder parentFolder() {\r    return null;\r  }\r\r  bool exists() { // TODO\r    return (hasFilesystem ? filesystem.existsFolder(name) : false);\r  }\r\r  // #region path\r  // Path starting from filesystem TODO: required?\r  string relPath(string aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = %s\".format(aPath));\r    }\r\r    return (filesystem ? filesystem.relPath(aPath) : null);\r  }\r\r  string relPath(string[] pathItems = null) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"pathItems = %s\".format(pathItems));\r    }\r\r    return (filesystem ? filesystem.relPath(pathItems) : null);\r  }\r\r  // Path starting from rootpath\r  string absolutePath(string aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = %s\".format(aPath));\r    }\r\r    return (filesystem ? filesystem.absolutePath(aPath) : null);\r  }\r\r  string absolutePath(string[] pathItems = null) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"pathItems = %s\".format(pathItems));\r    }\r\r    return (filesystem ? filesystem.absolutePath(pathItems) : null);\r  }\r  // #endregion path\r\r  // Rename entry\r  bool rename(string newName) {\r    return false;\r  }\r\r  // Check if entry is hidden\r  bool isHidden() {\r    return false;\r  }\r\r  // #region isFolder\r  bool isFolder() {\r    return false;\r  }\r  // #endregion isFolder\r\r  // #region isFile\r  bool isFile() {\r    return false;\r  }\r  // #endregion isFile\r\r  // #region isLink\r  bool isLink() {\r    return false;\r  }\r  // #endregion isLink\r\r  override string toString() {\r    return this.classname ~ \": \" ~ name;\r  }\r\r  override Json[string] debugInfo() {\r    return super.debugInfo()\r      .set(\"relPath\", relPath)\r      .set(\"absolutePath\", absolutePath);\r  }\r}\r\rauto FilesystemEntry() {\r  return new DFilesystemEntry();\r}\r\runittest {\r  // TODO add tests\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.entry;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.entry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.entry;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDFilesystemEntry : UIMObject, IFilesystemEntry \r  this() \r    super(\"FilesystemEntry\");\r  }\r\r  this(Json[string] initData) \r    super(\"FilesystemEntry\", initData);\r  }\r\r  this(string name, Json[string] initData = null) \r    super(name, initData);\r  }\r\r  this(string[] path, Json[string] initData = null) \r    this(initData);\r    this.path(path);\r  }\r\r  this(IFilesystem filesystem, Json[string] initData = null) \r    this(initData);\r    this.filesystem(filesystem);\r  }\r\r  this(IFilesystem filesystem, string name, Json[string] initData = null) \r    this(name, initData);\r    this.filesystem(filesystem);\r  }\r\r  this(IFilesystem filesystem, string[] path, Json[string] initData = null) \r    this(name, initData);\r    this.filesystem(filesystem);\r  }\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    return true;\r  }",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\services\\uim\\services\\classes\\services\\services.d": {
		"origin": "class DServices : UIMObject {\r",
		"isFinal": false,
		"package": "uim.services.classes.services",
		"visibility": "public",
		"comments": [],
		"name": "DServices",
		"isAbstract": false,
		"namespace": "uim.services.classes.services.services",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject"
		],
		"isStatic": false,
		"library": "uim-services",
		"header": "DServices : UIMObject",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\span.d": {
		"origin": "class DH5Span : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Span",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Span : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\button.d": {
		"origin": "class DH5Button : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Button",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Button : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\rtc.d": {
		"origin": "class DH5Rtc : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Rtc",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Rtc : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\th.d": {
		"origin": "class DH5Th : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Th",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Th : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\div.d": {
		"origin": "class DH5Div : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Div",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Div : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\small.d": {
		"origin": "class DH5Small : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <small> - represents side-comments and small print, like copyright and legal text, independent of its styled presentation."
		],
		"name": "DH5Small",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Small : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\containers\\maps\\map.d": {
		"origin": "class DMap(T : Object) : IMap {\r",
		"isFinal": false,
		"package": "uim.oop.containers.maps",
		"visibility": "public",
		"comments": [],
		"name": "DMap(T",
		"isAbstract": false,
		"namespace": "uim.oop.containers.maps.map",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"Object)"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DMap(T : Object) : IMap",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\picture.d": {
		"origin": "class DH5Picture : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Picture",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Picture : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\testsession.d": {
		"origin": "class DTestSession {\r",
		"isFinal": false,
		"package": "uim.oop.tests",
		"visibility": "public",
		"comments": [
			"",
			"",
			"A class to contain and retain the session during integration testing.",
			"Read only access to the session during testing.",
			""
		],
		"name": "DTestSession",
		"isAbstract": false,
		"namespace": "uim.oop.tests.testsession",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTestSession",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\mixins\\properties\\safe.d": {
		"origin": "  class DTest{ int _a = 1; mixin(SProperty_get!(\"int\", \"a\")); }\r",
		"isFinal": false,
		"package": "uim.oop.mixins.properties",
		"visibility": "public",
		"comments": [],
		"name": "DTest int _a = 1; mixin(SProperty_get!(\"int\", \"a\")); }",
		"isAbstract": false,
		"namespace": "uim.oop.mixins.properties.safe",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTest int _a = 1; mixin(SProperty_get!(\"int\", \"a\")); }",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\linux\\file.d": {
		"origin": "module uim.filesystems.classes.os.linux.file;\r\rimport uim.filesystems;\r\runittest {\r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe:\rclass DLinuxFile : DFile {\r  mixin(FileThis!(\"Linux\"));\r\r}\r\rmixin(FileCalls!(\"Linux\"));\r\rversion (testUimFilesystems) {\r  unittest {\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto myFilesystem = LinuxFilesystem(\"TestmyFilesystem\");\r    myFilesystem.rootPath(\"for_testing\");\r\r    myFilesystem.createIfNotExitsFolder(\"LinuxFile\");\r    myFilesystem.createIfNotExitsFolder([\"LinuxFile\"], \"files\");\r    myFilesystem.createIfNotExitsFolder([\"LinuxFile\"], \"file\");\r\r    IFile aFile = myFilesystem.createFile([\"LinuxFile\", \"file\"], \"file\" ~ to!string(uniform(0, 1000)));\r    int[] a = [1, 2, 3];\r    aFile.appendContent(a);\r    const data = aFile.readData;\r    const results = (() @trusted => cast(int[]) data)();\r    writeln(results);\r\r    aFile = myFilesystem.createFile([\"LinuxFile\", \"file\"], \"file\" ~ to!string(uniform(0, 1000)));\r    aFile.writeText(\"text\");\r    assert(aFile.readText == \"text\");\r\r    aFile.appendText(\"2text\");\r    assert(aFile.readText == \"text2text\");\r    debug writeln(aFile.readText);\r\r    /*   // #region Test Files\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files\")) { myFilesystem.createFolder(\"LinuxFile/files\"); }\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/creatingFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/creatingFiles\"); }\r      testFile_CreateFiles(__MODULE__, myFilesystem, \"LinuxFilesystem/files/creatingFiles\", [\"LinuxFilesystem\", \"files\", \"creatingFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/readFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/readFiles\"); }\r      testFile_ReadFiles(__MODULE__, myFilesystem, \"LinuxFilesystem/files/readFiles\", [\"LinuxFilesystem\", \"files\", \"readFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/updateFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/updateFiles\"); }\r      testFile_UpdateFiles(__MODULE__, myFilesystem, \"LinuxFilesystem/files/updateFiles\", [\"LinuxFilesystem\", \"files\", \"updateFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/removeFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/removeFiles\"); }\r      testFile_RemoveFiles(__MODULE__, myFilesystem, \"LinuxFilesystem/files/removeFiles\", [\"LinuxFilesystem\", \"files\", \"removeFiles\"]);  \r  // #endregion Test Files */\r\r    /*   // #region Test File\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files\")) { myFilesystem.createFolder(\"LinuxFile/file\"); }\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/creatingFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/creatingFiles\"); }\r      testFile_CreateFile(__MODULE__, myFilesystem, \"LinuxFilesystem/files/creatingFiles\", [\"LinuxFilesystem\", \"files\", \"creatingFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/readFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/readFiles\"); }\r      testFile_ReadFile(__MODULE__, myFilesystem, \"LinuxFilesystem/files/readFiles\", [\"LinuxFilesystem\", \"files\", \"readFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/updateFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/updateFiles\"); }\r      testFile_UpdateFile(__MODULE__, myFilesystem, \"LinuxFilesystem/files/updateFiles\", [\"LinuxFilesystem\", \"files\", \"updateFiles\"]);\r\r      if (!myFilesystem.existsFolder(\"LinuxFilesystem/files/removeFiles\")) { myFilesystem.createFolder(\"LinuxFilesystem/files/removeFiles\"); }\r      testFile_RemoveFile(__MODULE__, myFilesystem, \"LinuxFilesystem/files/removeFiles\", [\"LinuxFilesystem\", \"files\", \"removeFiles\"]);  \r  // #endregion Test File */\r\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"End tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.white).setForeground(AnsiColor.black));\r    }\r  }\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.linux",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.linux.file;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.linux.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DLinuxFile"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.linux.file;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe:\rDLinuxFile : DFile \r  mixin(FileThis!(\"Linux\"));\r\r}\r\rmixin(FileCalls!(\"Linux\"));\r\rversion (testUimFilesystems) \r  unittest \r    version (testUimFilesystems) \r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto myFilesystem = LinuxFilesystem(\"TestmyFilesystem\");\r    myFilesystem.rootPath(\"for_testing\");\r\r    myFilesystem.createIfNotExitsFolder(\"LinuxFile\");\r    myFilesystem.createIfNotExitsFolder([\"LinuxFile\"], \"files\");\r    myFilesystem.createIfNotExitsFolder([\"LinuxFile\"], \"file\");\r\r    IFile aFile = myFilesystem.createFile([\"LinuxFile\", \"file\"], \"file\" ~ to!string(uniform(0, 1000)));\r    int[] a = [1, 2, 3];\r    aFile.appendContent(a);\r    const data = aFile.readData;\r    const results = (() @trusted => cast(int[]) data)();\r    writeln(results);\r\r    aFile = myFilesystem.createFile([\"LinuxFile\", \"file\"], \"file\" ~ to!string(uniform(0, 1000)));\r    aFile.writeText(\"text\");\r    assert(aFile.readText == \"text\");\r\r    aFile.appendText(\"2text\");\r    assert(aFile.readText == \"text2text\");\r    debug writeln(aFile.readText);\r\r    /*",
		"parent": "DLinuxFile"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\tenants\\memory.d": {
		"origin": "class DMemoryJsonTenant : DJsonTenant {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.tenants",
		"visibility": "public",
		"comments": [
			"MemoryTenant manages MemoryCollections"
		],
		"name": "DMemoryJsonTenant",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.tenants.memory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DJsonTenant"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DMemoryJsonTenant : DJsonTenant",
		"parent": "DJsonTenant"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\genetics\\uim\\genetics\\exceptions\\exception.d": {
		"origin": "class DGeneticsException : UIMException {\r",
		"isFinal": false,
		"package": "uim.genetics.exceptions",
		"visibility": "public",
		"comments": [],
		"name": "DGeneticsException",
		"isAbstract": false,
		"namespace": "uim.genetics.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMException"
		],
		"isStatic": false,
		"library": "uim-genetics",
		"header": "DGeneticsException : UIMException",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\rt.d": {
		"origin": "class DH5Rt : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Rt",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Rt : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\formatters\\registry.d": {
		"origin": "class DFormatterRegistry : DObjectRegistry!DFormatter {\r",
		"isFinal": false,
		"package": "uim.oop.formatters",
		"visibility": "public",
		"comments": [],
		"name": "DFormatterRegistry",
		"isAbstract": false,
		"namespace": "uim.oop.formatters.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DFormatter"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFormatterRegistry : DObjectRegistry!DFormatter",
		"parent": "DObjectRegistry!DFormatter"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\virtual\\link.d": {
		"origin": "module uim.filesystems.classes.virtual.link;\r\rimport uim.filesystems;\r\runittest { \r  version(testUimFilesystems) { \r    debug writeln(\"\\n\", __MODULE__~\": \"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe:\rclass DVirtualLink : DLink {\r  mixin(LinkThis!(\"Virtual\"));\r\r  \r}\rmixin(LinkCalls!(\"Virtual\"));",
		"isFinal": false,
		"package": "uim.filesystems.classes.virtual",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.virtual.link;\r\rimport uim.filesystems;\r\runittest  \r  version(testUimFilesystems)  \r    debug writeln(\"\\n\", __MODULE__~\"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.virtual.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.virtual.link;\r\rimport uim.filesystems;\r\runittest  \r  version(testUimFilesystems)  \r    debug writeln(\"\\n\", __MODULE__~\": \"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe:\rDVirtualLink : DLink \r  mixin(LinkThis!(\"Virtual\"));\r\r  \r}\rmixin(LinkCalls!(\"Virtual\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\search.d": {
		"origin": "class DH5InputSEARCH : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputSEARCH",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputSEARCH : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\extras\\string.d": {
		"origin": "class DH5String : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Additional element to handle string in DOM"
		],
		"name": "DH5String",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5String : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\truncatestrategy.d": {
		"origin": "class DTruncateStrategy : IFixtureStrategy {\r",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"Fixture strategy that truncates all fixture ables at the end of test."
		],
		"name": "DTruncateStrategy",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.truncatestrategys",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"IFixtureStrategy"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTruncateStrategy : IFixtureStrategy",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\database\\filesystem.d": {
		"origin": "module uim.filesystems.classes.database.filesystem;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DDatabaseFilesystem : DFilesystem {\r  mixin(FilesystemThis!(\"Database\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    pathSeparator(\"/\");\r    \r    return true;\r  }\r}\r\rmixin(FilesystemCalls!(\"Database\"));\r\runittest {\r  assert(DatabaseFilesystem);\r}",
		"isFinal": false,
		"package": "uim.filesystems.classes.database",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.database.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.database.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.database.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDDatabaseFilesystem : DFilesystem \r  mixin(FilesystemThis!(\"Database\"));\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    pathSeparator(\"/\");\r    \r    return true;\r  }\r}\r\rmixin(FilesystemCalls!(\"Database\"));\r\runittest \r  assert(DatabaseFilesystem);\r}",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\core\\uim\\core\\helpers\\classes.d": {
		"origin": "    class Test : ITest {\r",
		"isFinal": false,
		"package": "uim.core.helpers",
		"visibility": "public",
		"comments": [],
		"name": "Test",
		"isAbstract": false,
		"namespace": "uim.core.helpers.classes",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"ITest"
		],
		"isStatic": false,
		"library": "uim-core",
		"header": "Test : ITest",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\button.d": {
		"origin": "class DH5InputButton : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputButton",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputButton : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\track.d": {
		"origin": "class DH5Track : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Track",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Track : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\data.d": {
		"origin": "class DH5Data : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Data",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Data : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\cache.d": {
		"origin": "module uim.filesystems.classes.cache;\r\rimport uim.filesystems;\r\runittest { \r  version(testUimFilesystems) { \r    debug writeln(\"\\n\", __MODULE__~\": \"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe:\rclass DCacheFilesystem : DFilesystem {\r  this() { super(); }\r}\rauto CacheFilesystem() { return new DCacheFilesystem; }\r\runittest {\r  // TODO add tests\r}",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.cache;\r\rimport uim.filesystems;\r\runittest  \r  version(testUimFilesystems)  \r    debug writeln(\"\\n\", __MODULE__~\"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.cache",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.cache;\r\rimport uim.filesystems;\r\runittest  \r  version(testUimFilesystems)  \r    debug writeln(\"\\n\", __MODULE__~\": \"~__PRETTY_FUNCTION__); \r  }\r}\r\r@safe:\rDCacheFilesystem : DFilesystem \r  this()  super(); }\r}\rauto CacheFilesystem()  return new DCacheFilesystem; }\r\runittest",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\password.d": {
		"origin": "class DH5InputPASSWORD : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputPASSWORD",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputPASSWORD : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\progress.d": {
		"origin": "class DH5Progress : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Progress",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Progress : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\interfaces\\entry.d": {
		"origin": "/****************************************************************************************************************\r",
		"isFinal": false,
		"package": "uim.filesystems.interfaces",
		"visibility": "public",
		"comments": [],
		"name": "/****************************************************************************************************************",
		"isAbstract": false,
		"namespace": "uim.filesystems.interfaces.entry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "/****************************************************************************************************************",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\tenants\\package.d": {
		"origin": "/****************************************************************************************************************\r",
		"isFinal": false,
		"package": "uim.jsonbases.classes",
		"visibility": "public",
		"comments": [],
		"name": "/****************************************************************************************************************",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.tenants",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "/****************************************************************************************************************",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\formatters\\formatter.d": {
		"origin": "class DFormatter : UIMObject, IFormatter {\r",
		"isFinal": false,
		"package": "uim.oop.formatters",
		"visibility": "public",
		"comments": [
			"Base class for Formatters"
		],
		"name": "DFormatter",
		"isAbstract": false,
		"namespace": "uim.oop.formatters.formatter",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IFormatter"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFormatter : UIMObject, IFormatter",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\models\\uim\\models\\classes\\attributes\\registry.d": {
		"origin": "class DAttributeRegistry : DObjectRegistry!DAttribute {\r",
		"isFinal": false,
		"package": "uim.models.classes.attributes",
		"visibility": "public",
		"comments": [],
		"name": "DAttributeRegistry",
		"isAbstract": false,
		"namespace": "uim.models.classes.attributes.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DAttribute"
		],
		"isStatic": false,
		"library": "uim-models",
		"header": "DAttributeRegistry : DObjectRegistry!DAttribute",
		"parent": "DObjectRegistry!DAttribute"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\section.d": {
		"origin": "class DH5Section : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Section",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Section : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\mark.d": {
		"origin": "class DH5Mark : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <mark> - represents text which is marked or highlighted for reference or notation purposes, due to the marked passage's relevance or importance in the enclosing context."
		],
		"name": "DH5Mark",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Mark : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\parsers\\factory.d": {
		"origin": "class DParserFactory : DFactory!DParser {}\r",
		"isFinal": false,
		"package": "uim.oop.parsers",
		"visibility": "public",
		"comments": [],
		"name": "DParserFactory",
		"isAbstract": false,
		"namespace": "uim.oop.parsers.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DParser"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DParserFactory : DFactory!DParser",
		"parent": "DFactory!DParser"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\virtual\\filesystem.d": {
		"origin": "module uim.filesystems.classes.virtual.filesystem;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DVirtualFilesystem : DFilesystem {\r  mixin(FilesystemThis!(\"Virtual\"));\r\r  override bool initialize(Json[string] initData = null) { // Hook\r    if (!super.initialize(initData)) {\r      return false;\r    }\r    _rootFolder = VirtualFolder(this);\r    return true;\r  }\r}\r\rmixin(FilesystemCalls!(\"Virtual\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.virtual",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.virtual.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.virtual.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.virtual.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDVirtualFilesystem : DFilesystem \r  mixin(FilesystemThis!(\"Virtual\"));\r\r  override bool initialize(Json[string] initData = null)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\select.d": {
		"origin": "class DH5Select : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Select",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Select : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\title.d": {
		"origin": "class DH5Title : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Title",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Title : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\windows\\folder.d": {
		"origin": "module uim.filesystems.classes.os.windows.folder;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DWindowsFolder : DFolder {\r  mixin(FolderThis!(\"Windows\"));\r}\r\rmixin(FolderCalls!(\"Windows\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.windows",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.windows.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.windows.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.windows.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDWindowsFolder : DFolder \r  mixin(FolderThis!(\"Windows\"));\r}\r\rmixin(FolderCalls!(\"Windows\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\folder.d": {
		"origin": "module uim.filesystems.classes.folder;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DFolder : DFilesystemEntry, IFolder, IFolderManager, IFileManager, ILinkManager {\r  mixin(FolderThis!());\r\r  override bool initialize(Json[string] initData = null) { // Hook\r    if (!super.initialize(initData)) {\r      return false;\r    }\r    return true;\r  }\r\r  protected string _pathSeparator;\r  void pathSeparator(string newSeparator) {\r    _pathSeparator = newSeparator;\r  }\r\r  string pathSeparator() {\r    return (hasFilesystem ? filesystem.pathSeparator : null);\r  }\r\r  override bool exists() {\r    return (hasFilesystem ? filesystem.existsFolder(path, name) : false);\r  }\r\r  override bool isFolder() {\r    return exists;\r  }\r\r  // Sets or returns the attributes of a specified folder.\r  long attributes() {\r    // TODO\r    return 0;\r  }\r\r  void attributes(long newAttributes) {\r    // TODO\r  }\r\r  // Returns the date and time when a specified folder was created.\r  long createdOn() {\r    // TODO\r    return 0;\r  }\r\r  // Returns the date and time when a specified folder was last accessed.\r  long accessedOn() {\r    // TODO\r    return 0;\r  }\r  // Returns the date and time when a specified folder was last modified.\r  long modifiedOn() {\r    // TODO\r    return 0;\r  }\r  // Returns the drive letter of the drive where the specified folder resides.\r  IDrive drive() {\r    // TODO\r    return null;\r  }\r\r  bool hasEntries() {\r    // TODO\r    return false;\r  }\r\r  bool isEmpty() {\r    // TODO\r    return true;\r  }\r\r  // Returns True if a folder is the root folder and False if not.\r  bool isRootFolder() {\r    // TODO\r    return false;\r  }\r\r  // Returns the type of a specified folder. */\r  string type() {\r    // TODO\r    return null;\r  }\r\r  // #region Methods\r  // Deletes file.\r  bool remove() {\r    return false;\r  }\r  // #endregion Methods\r\r  mixin TFolderManager!();\r  mixin TFileManager!();\r  mixin TLinkManager!();\r\r  override string toString() {\r    return this.classname ~ \": \" ~ name;\r  }\r\r  override Json[string] debugInfo() {\r    return super.debugInfo();\r  }\r\r}\r// mixin(FolderCalls!(\"Folder\"));\r\runittest {\r  // assert(Folder(), \"Could not create file object\");\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDFolder : DFilesystemEntry, IFolder, IFolderManager, IFileManager, ILinkManager \r  mixin(FolderThis!());\r\r  override bool initialize(Json[string] initData = null)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\parsers\\registry.d": {
		"origin": "class DParserRegistry : DObjectRegistry!DParser {\r",
		"isFinal": false,
		"package": "uim.oop.parsers",
		"visibility": "public",
		"comments": [],
		"name": "DParserRegistry",
		"isAbstract": false,
		"namespace": "uim.oop.parsers.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DParser"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DParserRegistry : DObjectRegistry!DParser",
		"parent": "DObjectRegistry!DParser"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\validators\\factory.d": {
		"origin": "class DValidatorFactory : DFactory!DUIMValidator {}\r",
		"isFinal": false,
		"package": "uim.oop.validators",
		"visibility": "public",
		"comments": [],
		"name": "DValidatorFactory",
		"isAbstract": false,
		"namespace": "uim.oop.validators.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DUIMValidator"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DValidatorFactory : DFactory!DUIMValidator",
		"parent": "DFactory!DUIMValidator"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\web\\uim\\web\\exceptions\\exception.d": {
		"origin": "module uim.web.exceptions.exception;\r\rimport uim.web;\r\r@safe:\r\r// Web exception.\rclass DWebException : UIMException {\r  mixin(ExceptionThis!(\"Web\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-web\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Web\"));\r",
		"isFinal": false,
		"package": "uim.web.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.web.exceptions.exception;\r\rimport uim.web;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.web.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-web",
		"header": "module uim.web.exceptions.exception;\r\rimport uim.web;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\filesystem.d": {
		"origin": "module uim.filesystems.classes.filesystem;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DFilesystem : UIMObject, IFilesystem, IFolderManager, IFileManager, ILinkManager {\r  mixin(FilesystemThis!());\r\r  this(string[] path, Json[string] initData = null) {\r    this(initData).path(path);\r  }\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    pathSeparator(\"/\");\r    return true;\r  }\r\r  // #region Properties\r  bool hasFilesystem() {\r    return (filesystem !is null);\r  }\r\r  mixin(TProperty!(\"IFilesystem\", \"filesystem\"));\r\r  mixin(TProperty!(\"string\", \"classname\"));\r  mixin(TProperty!(\"string\", \"rootPath\"));\r  mixin(TProperty!(\"string\", \"invalidCharacters\"));\r  mixin(TProperty!(\"string\", \"pathSeparator\"));\r\r  protected IFolder _rootFolder;\r  IFolder rootFolder() {\r    return _rootFolder;\r  }\r\r  // Sets or returns the name of the filesystem\r  protected string[] _path;\r  string[] path() {\r    return _path;\r  }\r\r  void path(string[] path) {\r    // TODO _path = path.strip;\r  }\r\r  // Returns information about the type of the filesystem\r  string type() {\r    return null;\r  }\r\r  size_t availableDiskSpace() {\r    return 0;\r  }\r\r  // Returns the size, in bytes, of the filesystem\r  size_t size() {\r    return 0;\r  }\r\r  // Returns the size, in bytes, of the filesystem\r  size_t capacity() {\r    return 0;\r  }\r  // #endregion Properties\r\r  // #region path\r  // Path starting from filesystem TODO: required?\r  string relPath(string aPath) {\r    return relPath(toPathItems(aPath, pathSeparator));\r  }\r\r  string relPath(string[] pathItems = null) {\r    return (pathItems).join(pathSeparator);\r  }\r\r  // Path starting from rootpath\r  string absolutePath(string aPath) {\r    return absolutePath(toPathItems(aPath, pathSeparator));\r  }\r\r  string absolutePath(string[] pathItems = null) {\r    return (rootPath ~ pathItems).join(pathSeparator);\r  }\r  // #endregion path\r\r  // #region isFolder\r  bool isFolder(string aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (aPath is null) {\r      return false;\r    }\r    return isFolder(toPathItems(aPath, pathSeparator));\r  }\r\r  bool isFolder(string aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    return isFolder(toPathItems(aPath, pathSeparator), aFileName);\r  }\r\r  bool isFolder(string[] aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (aPath.length == 0) {\r      return false;\r    }\r\r    string[] aNullArray;\r    return (aPath.length > 1\r        ? isFolder(aPath[0 .. $ - 1], aPath[$ - 1]) : isFolder(aNullArray, aPath[$ - 1]));\r  }\r\r  bool isFolder(string[] aPath, string aFileName) {\r    return false;\r  }\r  // #endregion isFolder\r\r  // #region isFile\r  bool isFile(string aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (aPath is null) {\r      return false;\r    }\r    return isFile(toPathItems(aPath, pathSeparator));\r  }\r\r  bool isFile(string aPath, string aFileName) {\r    return isFile(toPathItems(aPath, pathSeparator), aFileName);\r  }\r\r  bool isFile(string[] aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (aPath.length == 0) {\r      return false;\r    }\r\r    string[] aNullArray;\r    return (aPath.length > 1\r        ? isFile(aPath[0 .. $ - 1], aPath[$ - 1]) : isFile(aNullArray, aPath[$ - 1]));\r  }\r\r  bool isFile(string[] aPath, string aFileName) {\r    return false;\r  }\r  // #endregion isFile\r\r  // #region isLink\r  bool isLink(string aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    // IN check\r    if (aPath.isEmpty) {\r      return false;\r    }\r\r    // Body\r    return isLink(toPathItems(aPath, pathSeparator));\r  }\r\r  bool isLink(string aPath, string aLinkName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return isLink(toPathItems(aPath, pathSeparator), aLinkName);\r  }\r\r  bool isLink(string[] aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    // IN Check\r    if (aPath.isEmpty) {\r      return false;\r    }\r\r    string[] aNullArray;\r    return (aPath.length > 1\r        ? isLink(aPath[0 .. $ - 1], aPath[$ - 1]) : isLink(aNullArray, aPath[$ - 1]));\r  }\r\r  bool isLink(string[] aPath, string aLinkName) {\r    return false;\r  }\r  // #endregion isLink\r\r  // #region Entry Management\r  mixin TEntryManager;\r\r  bool isHidden(string aPath) {\r    if (aPath.isEmpty) {\r      return false;\r    }\r\r    return isHidden(toPathItems(aPath, pathSeparator));\r  }\r\r  bool isHidden(string aPath, string aLinkName) {\r    return isHidden(toPathItems(aPath, pathSeparator), aLinkName);\r  }\r\r  bool isHidden(string[] aPath) {\r    if (aPath.isEmpty) {\r      return false;\r    }\r\r    string[] aNullArray;\r    return (aPath.length > 1\r        ? isHidden(aPath[0 .. $ - 1], aPath[$ - 1]) : isHidden(aNullArray, aPath[$ - 1]));\r  }\r\r  bool isHidden(string[] aPath, string aLinkName) {\r    return false;\r  }\r  // #endregion Entry Management\r\r  mixin TFolderManager!();\r  mixin TFileManager!();\r\r  void[] readFromFile(string[] aPath, string aFileName, size_t numberOfBytes = size_t.max) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return null;\r  }\r\r  void writeToFile(string[] aPath, string aFileName, const void[] buffer) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r  }\r\r  void appendToFile(string[] aPath, string aFileName, const void[] buffer) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r  }\r\r  string readTextFromFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return null;\r  }\r\r  void writeTextToFile(string[] aPath, string aFileName, string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r  }\r\r  void appendTextToFile(string[] aPath, string aFileName, string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r  }\r\r  string[] readLines(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return null;\r  }\r\r  mixin TLinkManager!();\r}\r\r// mixin(FilesystemCalls!(\"Filesystem\"));\r\runittest {\r  // assert(Filesystem, \"Could not create Filesystem\");\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.filesystem;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDFilesystem : UIMObject, IFilesystem, IFolderManager, IFileManager, ILinkManager \r  mixin(FilesystemThis!());\r\r  this(string[] path, Json[string] initData = null) \r    this(initData).path(path);\r  }\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    pathSeparator(\"/\");\r    return true;\r  }",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\sub.d": {
		"origin": "class DH5Sub : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Sub",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Sub : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\thead.d": {
		"origin": "class DH5Thead : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Thead",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Thead : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\windows\\link.d": {
		"origin": "module uim.filesystems.classes.os.windows.link;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DWindowsLink : DLink {\r  mixin(LinkThis!(\"Windows\"));\r}\r\rmixin(LinkCalls!(\"Windows\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.windows",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.windows.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.windows.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.windows.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDWindowsLink : DLink \r  mixin(LinkThis!(\"Windows\"));\r}\r\rmixin(LinkCalls!(\"Windows\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\virtual\\file.d": {
		"origin": "module uim.filesystems.classes.virtual.file;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DVirtualFile : DFile {\r  mixin(FileThis!(\"Virtual\"));\r}\r\rmixin(FileCalls!(\"Virtual\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.virtual",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.virtual.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.virtual.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.virtual.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDVirtualFile : DFile \r  mixin(FileThis!(\"Virtual\"));\r}\r\rmixin(FileCalls!(\"Virtual\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\email.d": {
		"origin": "class DH5InputEmail : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputEmail",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputEmail : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\template_.d": {
		"origin": "class DH5Template : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <template> - s a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript."
		],
		"name": "DH5Template",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Template : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\collections\\null_.d": {
		"origin": "class DNullJsonCollection : DJsonCollection {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.collections",
		"visibility": "public",
		"comments": [],
		"name": "DNullJsonCollection",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.collections.null_",
		"isInherited": false,
		"methods": {
			"override Json findOne(UUID id, size_t versionNumber)": {
				"origin": "override Json findOne(UUID id, size_t versionNumber)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, size_t versionNumber",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID id, size_t versionNumber)",
				"isStatic": false
			},
			"override Json insertOne(Json newData)": {
				"origin": "override Json insertOne(Json newData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json newData",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json insertOne(Json newData)",
				"isStatic": false
			},
			"override bool removeOne(UUID id, bool allVersions = false)": {
				"origin": "override bool removeOne(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(UUID id, size_t versionNumber)": {
				"origin": "override bool removeOne(UUID id, size_t versionNumber)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, size_t versionNumber",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID id, size_t versionNumber)",
				"isStatic": false
			},
			"override size_t updateMany(Json select, Json updateData)": {
				"origin": "override size_t updateMany(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t updateMany(Json select, Json updateData)",
				"isStatic": false
			},
			"override size_t removeMany(UUID id, bool allVersions = false)": {
				"origin": "override size_t removeMany(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(string[string] select, bool allVersions = false)": {
				"origin": "override bool removeOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(Json select, bool allVersions = false)": {
				"origin": "override Json findOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(UUID id, bool allVersions = false)": {
				"origin": "override Json[] findMany(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"version (test_uim_jsonbase)": {
				"origin": "version (test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_jsonbase",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_jsonbase)",
				"isStatic": false
			},
			"override size_t removeMany(string[string] select, bool allVersions = false)": {
				"origin": "override size_t removeMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(Json select, bool allVersions = false)": {
				"origin": "override bool removeOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(string[string] select, bool allVersions = false)": {
				"origin": "override Json findOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(string[string] select, bool allVersions = false)": {
				"origin": "override Json[] findMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override size_t removeMany(Json select, bool allVersions = false)": {
				"origin": "override size_t removeMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool updateOne(Json select, Json updateData)": {
				"origin": "override bool updateOne(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool updateOne(Json select, Json updateData)",
				"isStatic": false
			},
			"override Json[] findMany(Json select, bool allVersions = false)": {
				"origin": "override Json[] findMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(bool allVersions = false)": {
				"origin": "override Json[] findMany(bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(UUID id, bool allVersions = false)": {
				"origin": "override Json findOne(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID id, bool allVersions = false)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DJsonCollection"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DNullJsonCollection : DJsonCollection",
		"parent": "DJsonCollection"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\month.d": {
		"origin": "class DH5InputMONTH : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputMONTH",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputMONTH : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\obj.d": {
		"origin": "class DCSSObj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DCSSObj",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"protected void _init()": {
				"origin": "protected void _init()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "protected",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void _init()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "",
		"header": "DCSSObj",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\memory\\file.d": {
		"origin": "module uim.filesystems.classes.memory.file;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DMemoryFile : DFile {\r  mixin(FileThis!(\"Memory\"));\r\r  override Json[string] debugInfo() {\r    return super.debugInfo();\r  }\r\r}\r\rmixin(FileCalls!(\"Memory\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.memory",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.memory.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.memory.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.memory.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDMemoryFile : DFile \r  mixin(FileThis!(\"Memory\"));\r\r  override Json[string] debugInfo() \r    return super.debugInfo();\r  }\r\r}\r\rmixin(FileCalls!(\"Memory\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\meter.d": {
		"origin": "class DH5Meter : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <meter> - represents either a scalar value within a known range or a fractional value."
		],
		"name": "DH5Meter",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Meter : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\models\\uim\\models\\classes\\attributes\\factory.d": {
		"origin": "class DAttributeFactory : DFactory!DAttribute {\r",
		"isFinal": false,
		"package": "uim.models.classes.attributes",
		"visibility": "public",
		"comments": [],
		"name": "DAttributeFactory",
		"isAbstract": false,
		"namespace": "uim.models.classes.attributes.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DAttribute"
		],
		"isStatic": false,
		"library": "uim-models",
		"header": "DAttributeFactory : DFactory!DAttribute",
		"parent": "DFactory!DAttribute"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\parsers\\parser.d": {
		"origin": "class DParser : UIMObject, IParser {\r",
		"isFinal": false,
		"package": "uim.oop.parsers",
		"visibility": "public",
		"comments": [
			"Base class for parsers"
		],
		"name": "DParser",
		"isAbstract": false,
		"namespace": "uim.oop.parsers.parser",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IParser"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DParser : UIMObject, IParser",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\memory\\link.d": {
		"origin": "module uim.filesystems.classes.memory.link;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DMemoryLink : DLink {\r  mixin(LinkThis!(\"Memory\"));\r}\r\rmixin(LinkCalls!(\"Memory\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.memory",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.memory.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.memory.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.memory.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDMemoryLink : DLink \r  mixin(LinkThis!(\"Memory\"));\r}\r\rmixin(LinkCalls!(\"Memory\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\linux\\folder.d": {
		"origin": "module uim.filesystems.classes.os.linux.folder;\r\rimport uim.filesystems;\r\r@safe:\r\runittest {\r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\rclass DLinuxFolder : DFolder {\r  mixin(FolderThis!(\"Linux\"));\r\r  override bool exists( /* string path, string name = null */ ) {\r\r    if (filesystem is null) {\r      return false;\r    }\r\r    if (path.isEmpty && name.isEmpty) {\r      return false;\r    }\r\r    auto myPath = !path.isEmpty\r      ? (!name.isEmpty ? absolutePath(path ~ name) : absolutePath(path)) : absolutePath(name);\r\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": name = \", name);\r      debug writeln(\"\\n\", __MODULE__ ~ \": path = \", path);\r      debug writeln(\"\\n\", __MODULE__ ~ \": myPath = \", myPath);\r    }\r    return (myPath.exists ? myPath.isDir : false);\r  }\r\r  override long createdOn() {\r    return (exists ? 0 : 0); // TODO\r  }\r\r  // Returns the date and time when a specified folder was last accessed.\r  override long accessedOn() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    return (exists ? 0 /* toTimestamp(timeLastAccessed(absolutePath)) */  : 0);\r  }\r\r  // Returns the date and time when a specified folder was last modified.\r  override long modifiedOn() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    return (exists ? toTimestamp(timeLastModified(absolutePath)) : 0);\r  }\r\r  override ILink[] links(string[] aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    return (exists ? filesystem.links(aPath) : null);\r  }\r\r  // #region Folders\r  // #region existsFolders() \r  alias existsFolders = DFolder.existsFolders;\r  override bool existsFolders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.existsFolders(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion existsFolders() \r\r  // #region folders() \r  alias folders = DFolder.folders;\r  override IFolder[] folders() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (!hasFilesystem) {\r      return null;\r    }\r\r    return filesystem.folders(chain(path, [name]).array);\r  }\r\r  override IFolder[] folders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \", aPath, \"\\t aFolderName = \", aFolderName);\r    }\r\r    if (!hasFilesystem) {\r      return null;\r    }\r\r    return filesystem.folders(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion folders() \r\r  // #region countFolders() \r  alias countFolders = DFolder.countFolders;\r  override size_t countFolders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \", aPath, \"\\t aFolderName = \", aFolderName);\r    }\r    if (!hasFilesystem) {\r      return 0;\r    }\r\r    return filesystem.countFolders(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion countFolders() \r  // #endregion Folders\r\r  // #region Folder\r  // #region Create\r  alias createFolder = DFolder.createFolder;\r  override IFolder createFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r\r    // In Check  \r    if (!hasFilesystem) {\r      return null;\r    }\r\r    // Body\r    auto result = filesystem.createFolder(chain(path, [name], aPath).array, aFolderName);\r\r    return result;\r  }\r  // #endregion Create\r\r  // #region Read\r  // #region existsFolder()\r  alias existsFolder = DFolder.existsFolder;\r  override bool existsFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r\r    // In Check  \r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.existsFolder(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion existsFolder()\r\r  // #region folder()\r  alias folder = DFolder.folder;\r  override IFolder folder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r    if (!hasFilesystem) {\r      return null;\r    }\r\r    return filesystem.folder(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion folder()\r  // #endregion Read\r\r  // #region Update\r  alias renameFolder = DFolder.renameFolder;\r  override bool renameFolder(string[] aPath, string oldName, string newName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.renameFolder(chain(path, [name], aPath).array, oldName, newName);\r  }\r  // #endregion Update\r\r  // #region Delete\r  alias removeFolder = DFolder.removeFolder;\r  override bool removeFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.removeFolder(chain(path, [name], aPath).array, aFolderName);\r  }\r  // #endregion Delete\r  // #endregion Folder\r\r  // #region File\r  // #region Create\r  alias createFile = DFolder.createFile;\r  override IFile createFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFileName = \\t\", aFileName);\r    }\r    if (!hasFilesystem) {\r      return null;\r    }\r\r    return filesystem.createFile(chain(path, [name], aPath).array, aFileName);\r  }\r  // #endregion Create\r\r  // #region Read\r  alias existsFile = DFolder.existsFile;\r  override bool existsFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFileName = \\t\", aFileName);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.existsFile(chain(path, [name], aPath).array, aFileName);\r  }\r\r  alias file = DFolder.file;\r  override IFile file(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFileName = \\t\", aFileName);\r    }\r    if (!hasFilesystem) {\r      return null;\r    }\r\r    return filesystem.file(chain(path, [name], aPath).array, aFileName);\r  }\r  // #endregion Read\r\r  // #region Update\r  alias renameFile = DFolder.renameFile;\r  override bool renameFile(string[] aPath, string oldName, string newName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"Path = \\t\", path, \"\\tName = \\t\", name);\r      debug writeln(\"aPath = \\t\", aPath, \"\\toldName = \\t\", oldName, \" \\tnewName = \\t\", newName);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.renameFile(chain(path, [name], aPath).array, oldName, newName);\r  }\r  // #endregion Update\r\r  // #region Delete\r  alias removeFile = DFolder.removeFile;\r  override bool removeFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (!hasFilesystem) {\r      return false;\r    }\r\r    return filesystem.removeFile(chain(path, [name], aPath).array, aFileName);\r  }\r  // #endregion Delete\r  // #region File\r}\r\rmixin(FolderCalls!(\"Linux\"));\r\rversion (testUimFilesystems) {\r  unittest {\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto fs = LinuxFilesystem(\"TestFS\");\r    fs.rootPath(\"for_testing\");\r    if (!fs.existsFolder(\"LinuxFolder\")) {\r      fs.createFolder(\"LinuxFolder\");\r    }\r    if (!fs.existsFolder([\"LinuxFolder\"], \"folders\")) {\r      fs.createFolder([\"LinuxFolder\"], \"folders\");\r    }\r    if (!fs.existsFolder([\"LinuxFolder\"], \"folder\")) {\r      fs.createFolder([\"LinuxFolder\"], \"folder\");\r    }\r\r    IFolder myFolder = fs.folder([\"LinuxFolder\"], \"folder\");\r\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"Part 1 - Test folder\")\r          .setBackground(AnsiColor.blue).setForeground(AnsiColor.black));\r    }\r    // #region Test Folder\r    if (!myFolder.existsFolder(\"createFolder\")) {\r      myFolder.createFolder(\"createFolder\");\r    }\r    testFolder_CreateFolder(__MODULE__, myFolder, \"createFolder\", [\r        \"createFolder\"\r      ]);\r\r    if (!myFolder.existsFolder(\"readFolder\")) {\r      myFolder.createFolder(\"readFolder\");\r    }\r    testFolder_ReadFolder(__MODULE__, myFolder, \"readFolder\", [\"readFolder\"]);\r\r    if (!myFolder.existsFolder(\"updateFolder\")) {\r      myFolder.createFolder(\"updateFolder\");\r    }\r    testFolder_UpdateFolder(__MODULE__, myFolder, \"updateFolder\", [\r        \"updateFolder\"\r      ]);\r\r    if (!myFolder.existsFolder(\"removeFolder\")) {\r      myFolder.createFolder(\"removeFolder\");\r    }\r    testFolder_RemoveFolder(__MODULE__, myFolder, \"removeFolder\", [\r        \"removeFolder\"\r      ]);\r    // #endregion Test Folder\r\r    if (!fs.existsFolder([\"LinuxFolder\"], \"files\")) {\r      fs.createFolder([\"LinuxFolder\"], \"files\");\r    }\r    myFolder = fs.folder([\"LinuxFolder\"], \"files\");\r\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"Part 2 - Test file\")\r          .setBackground(AnsiColor.blue).setForeground(AnsiColor.black));\r    }\r    // #region Test File\r    if (!myFolder.existsFolder(\"creatingFiles\")) {\r      myFolder.createFolder(\"creatingFiles\");\r    }\r    testFolder_CreateFile(__MODULE__, myFolder, \"creatingFiles\", [\r        \"creatingFiles\"\r      ]);\r\r    if (!myFolder.existsFolder(\"readFiles\")) {\r      myFolder.createFolder(\"readFiles\");\r    }\r    testFolder_ReadFile(__MODULE__, myFolder, \"readFiles\", [\"readFiles\"]);\r\r    if (!myFolder.existsFolder(\"updateFiles\")) {\r      myFolder.createFolder(\"updateFiles\");\r    }\r    testFolder_UpdateFile(__MODULE__, myFolder, \"updateFiles\", [\"updateFiles\"]);\r\r    if (!myFolder.existsFolder(\"removeFiles\")) {\r      myFolder.createFolder(\"removeFiles\");\r    }\r    testFolder_removeFile(__MODULE__, myFolder, \"removeFiles\", [\"removeFiles\"]);\r    // #endregion Test File\r\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"End tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.white).setForeground(AnsiColor.black));\r    }\r  }\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.linux",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.linux.folder;\r\rimport uim.filesystems;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.linux.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"unittest \r  writeln(\"-----  \"",
			"__MODULE__",
			"\"\\t  -----\");\r}\r\rDLinuxFolder"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.linux.folder;\r\rimport uim.filesystems;\r\r@safe:\r\runittest \r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\rDLinuxFolder : DFolder \r  mixin(FolderThis!(\"Linux\"));\r\r  override bool exists( /* string path, string name = null */ ) \r\r    if (filesystem is null) \r      return false;\r    }\r\r    if (path.isEmpty && name.isEmpty) \r      return false;\r    }\r\r    auto myPath = !path.isEmpty\r      ? (!name.isEmpty ? absolutePath(path ~ name) : absolutePath(path)) : absolutePath(name);\r\r    version (testUimFilesystems) \r      debug writeln(\"\\n\", __MODULE__ ~ \": name = \", name);\r      debug writeln(\"\\n\", __MODULE__ ~ \": path = \", path);\r      debug writeln(\"\\n\", __MODULE__ ~ \": myPath = \", myPath);\r    }\r    return (myPath.exists ? myPath.isDir : false);\r  }\r\r  override long createdOn() \r    return (exists ? 0 : 0);",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\languages\\uim\\languages\\exceptions\\exception.d": {
		"origin": "class DLanguagesException : UIMException {\r",
		"isFinal": false,
		"package": "uim.languages.exceptions",
		"visibility": "public",
		"comments": [
			"I18n exception."
		],
		"name": "DLanguagesException",
		"isAbstract": false,
		"namespace": "uim.languages.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMException"
		],
		"isStatic": false,
		"library": "uim-languages",
		"header": "DLanguagesException : UIMException",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\time.d": {
		"origin": "class DH5InputTIME : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputTIME",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputTIME : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\services\\uim\\services\\exceptions\\exception.d": {
		"origin": "class DServiceException : UIMException {\r",
		"isFinal": false,
		"package": "uim.services.exceptions",
		"visibility": "public",
		"comments": [
			"Service exception."
		],
		"name": "DServiceException",
		"isAbstract": false,
		"namespace": "uim.services.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMException"
		],
		"isStatic": false,
		"library": "uim-services",
		"header": "DServiceException : UIMException",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\patterns\\obj.d": {
		"origin": "class UIMObject : INamed {\r",
		"isFinal": false,
		"package": "uim.oop.patterns",
		"visibility": "public",
		"comments": [],
		"name": "UIMObject",
		"isAbstract": false,
		"namespace": "uim.oop.patterns.obj",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"INamed"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "UIMObject : INamed",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\head.d": {
		"origin": "class DH5Head : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Head",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"DH5Head Base(string[string] values)": {
				"origin": "DH5Head Base(string[string] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] values",
				"visibility": "public",
				"datatype": "DH5Head",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DH5Head Base(string[string] values)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Head : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\commands\\collection.d": {
		"origin": "class DCommandCollection : DCollection!DCommand {   ",
		"isFinal": false,
		"package": "uim.oop.commands",
		"visibility": "public",
		"comments": [],
		"name": "DCommandCollection",
		"isAbstract": false,
		"namespace": "uim.oop.commands.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCollection!DCommand"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DCommandCollection : DCollection!DCommand",
		"parent": "DCollection!DCommand"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\nav.d": {
		"origin": "class DH5Nav : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <nav>",
			"DH5Nav/H5Nav represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents."
		],
		"name": "DH5Nav",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Nav : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\rp.d": {
		"origin": "class DH5Rp : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Rp",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Rp : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\samp.d": {
		"origin": "class DH5Samp : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Samp",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Samp : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\snippets\\client.d": {
		"origin": "module uim.html.snippets.client;\r\rimport uim.html;\r@safe:\r\rclass clientOrPartnersLogoSlider : DH5Component {\r  this() {\r    super(); \r/*   this.css(`h2 {\r  text-align:center;\r  padding: 20px;\r}\r/ * Slider * /\r.slick-slide {\r    margin: 0px 20px;\r}\r.slick-slide img {\r    width: 100%;\r}\r.slick-slider {\r    position: relative;\r    display: block;\r    box-sizing: border-box;\r    -webkit-user-select: none;\r    -moz-user-select: none;\r    -ms-user-select: none;\r            user-select: none;\r    -webkit-touch-callout: none;\r    -khtml-user-select: none;\r    -ms-touch-action: pan-y;\r        touch-action: pan-y;\r    -webkit-tap-highlight-color: transparent;\r}\r\r.slick-list {\r    position: relative;\r    display: block;\r    overflow: hidden;\r    margin: 0;\r    padding: 0;\r}\r.slick-list:focus {\r    outline: none;\r}\r.slick-list.dragging {\r    cursor: pointer;\r    cursor: hand;\r}\r\r.slick-slider .slick-track, .slick-slider .slick-list {\r    -webkit-transform: translate3d(0, 0, 0);\r       -moz-transform: translate3d(0, 0, 0);\r        -ms-transform: translate3d(0, 0, 0);\r         -o-transform: translate3d(0, 0, 0);\r            transform: translate3d(0, 0, 0);\r}\r\r.slick-track {\r    position: relative;\r    top: 0;\r    left: 0;\r    display: block;\r}\r.slick-track:before, .slick-track:after {\r    display: table;\r    content: '';\r}\r.slick-track:after {\r    clear: both;\r}\r.slick-loading .slick-track {\r    visibility: hidden;\r}\r\r.slick-slide {\r    display: none;\r    float: left;\r    height: 100%;\r    min-height: 1px;\r}\r[dir='rtl'] .slick-slide\r{\r    float: right;\r}\r.slick-slide img\r{\r    display: block;\r}\r.slick-slide.slick-loading img\r{\r    display: none;\r}\r.slick-slide.dragging img\r{\r    pointer-events: none;\r}\r.slick-initialized .slick-slide\r{\r    display: block;\r}\r.slick-loading .slick-slide\r{\r    visibility: hidden;\r}\r.slick-vertical .slick-slide\r{\r    display: block;\r    height: auto;\r    border: 1px solid transparent;\r}\r.slick-arrow.slick-hidden {\r    display: none;\r}`)\r.html(`<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"><\/script>\r<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"><\/script>\r<!------ Include the above in your HEAD tag ---------->\r\r<script src=\"https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.js\"><\/script>\r\r<div class=\"container\">\r  <h2>Our  Partners/ Our Clients<\/h2>\r   <section class=\"customer-logos slider\">\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/luxury-letter-e-logo-design_1017-8903.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"http://www.webcoderskull.com/img/logo.png\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/3d-box-logo_1103-876.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/blue-tech-logo_1103-822.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/colors-curl-logo-template_23-2147536125.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/abstract-cross-logo_23-2147536124.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/football-logo-background_1195-244.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/background-of-spots-halftone_1035-3847.jpg\"><\/div>\r      <div class=\"slide\"><img src=\"https://image.freepik.com/free-vector/retro-label-on-rustic-background_82147503374.jpg\"><\/div>\r   <\/section>\r   \r<h2><a href=\"http://www.webcoderskull.com\" target=\"_blank\">http://www.webcoderskull.com<\/a><\/h2>\r<\/div>`)\r.js(`(document).ready(function(){\r    ('.customer-logos').slick({\r        slidesToShow: 6,\r        slidesToScroll: 1,\r        autoplay: true,\r        autoplaySpeed: 1500,\r        arrows: false,\r        dots: false,\r        pauseOnHover: false,\r        responsive: [{\r            breakpoint: 768,\r            settings: {\r                slidesToShow: 4\r            }\r        }, {\r            breakpoint: 520,\r            settings: {\r                slidesToShow: 3\r            }\r        }]\r    });\r});`);*/\r  }\r}",
		"isFinal": false,
		"package": "uim.html.snippets",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.snippets.client;\r\rimport uim.html;\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.snippets.client",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"clientOrPartnersLogoSlider"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.snippets.client;\r\rimport uim.html;\r@safe:\r\rclientOrPartnersLogoSlider : DH5Component \r  this() \r    super(); \r/*   this.css(`h2 \r  text-align:center;\r  padding: 20px;\r}\r/ * Slider * /\r.slick-slide \r    margin: 0px 20px;\r}\r.slick-slide img \r    width: 100%;\r}\r.slick-slider \r    position: relative;\r    display: block;\r    box-sizing: border-box;\r    -webkit-user-select: none;\r    -moz-user-select: none;\r    -ms-user-select: none;\r            user-select: none;\r    -webkit-touch-callout: none;\r    -khtml-user-select: none;\r    -ms-touch-action: pan-y;\r        touch-action: pan-y;\r    -webkit-tap-highlight-color: transparent;\r}\r\r.slick-list \r    position: relative;\r    display: block;\r    overflow: hidden;\r    margin: 0;\r    padding: 0;\r}\r.slick-list:focus \r    outline: none;\r}\r.slick-list.dragging \r    cursor: pointer;\r    cursor: hand;\r}\r\r.slick-slider .slick-track, .slick-slider .slick-list \r    -webkit-transform: translate3d(0, 0, 0);\r       -moz-transform: translate3d(0, 0, 0);\r        -ms-transform: translate3d(0, 0, 0);\r         -o-transform: translate3d(0, 0, 0);\r            transform: translate3d(0, 0, 0);\r}\r\r.slick-track \r    position: relative;\r    top: 0;\r    left: 0;\r    display: block;\r}\r.slick-track:before, .slick-track:after \r    display: table;\r    content: '';\r}\r.slick-track:after \r    clear: both;\r}\r.slick-loading .slick-track \r    visibility: hidden;\r}\r\r.slick-slide \r    display: none;\r    float: left;\r    height: 100%;\r    min-height: 1px;\r}\r[dir='rtl'] .slick-slide\r\r    float: right;\r}\r.slick-slide img\r\r    display: block;\r}\r.slick-slide.slick-loading img\r\r    display: none;\r}\r.slick-slide.dragging img\r\r    pointer-events: none;\r}\r.slick-initialized .slick-slide\r\r    display: block;\r}\r.slick-loading .slick-slide\r\r    visibility: hidden;\r}\r.slick-vertical .slick-slide\r\r    display: block;\r    height: auto;\r    border: 1px solid transparent;\r}\r.slick-arrow.slick-hidden \r    display: none;\r}`)\r.html(`<link href=\"",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\package.d": {
		"origin": "/****************************************************************************************************************\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [],
		"name": "/****************************************************************************************************************",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.classes",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "/****************************************************************************************************************",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\rbc.d": {
		"origin": "class DH5Rbc : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Rbc",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Rbc : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\del.d": {
		"origin": "class DH5Del : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Del",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Del : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\errors\\registry.d": {
		"origin": "class DErrorRegistry : DObjectRegistry!UIMError {",
		"isFinal": false,
		"package": "uim.oop.errors",
		"visibility": "public",
		"comments": [],
		"name": "DErrorRegistry",
		"isAbstract": false,
		"namespace": "uim.oop.errors.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!UIMError"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DErrorRegistry : DObjectRegistry!UIMError",
		"parent": "DObjectRegistry!UIMError"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\transactionfixturestrategy.d": {
		"origin": "class DTransactionFixtureStrategy : IFixtureStrategy {\r",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"",
			"",
			"Fixture strategy that wraps fixtures in a transaction that is rolled back",
			"after each test.",
			"",
			"Any test that calls Connection.rollback(true) will break this strategy.",
			""
		],
		"name": "DTransactionFixtureStrategy",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.transactionfixturestrategys",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"IFixtureStrategy"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTransactionFixtureStrategy : IFixtureStrategy",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\tel.d": {
		"origin": "class DH5InputTEL: DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputTEL",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputTEL: DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\reset.d": {
		"origin": "class DH5InputRESET : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputRESET",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputRESET : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\noscript.d": {
		"origin": "class DH5Noscript : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Noscript",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Noscript : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\li.d": {
		"origin": "class DH5Li : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <li> - represent an item in a list."
		],
		"name": "DH5Li",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Li : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\h.d": {
		"origin": "class DH5H1 : DH5Obj { ",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5H1",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5H1 : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\errors\\error.d": {
		"origin": "class UIMError : UIMObject, IError {",
		"isFinal": false,
		"package": "uim.oop.errors",
		"visibility": "public",
		"comments": [
			"Error base class for UIM applications"
		],
		"name": "UIMError",
		"isAbstract": false,
		"namespace": "uim.oop.errors.error",
		"isInherited": false,
		"methods": {
			"string traceAsString()": {
				"origin": "string traceAsString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string traceAsString()",
				"isStatic": false
			},
			"string label()": {
				"origin": "string label()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string label()",
				"isStatic": false
			},
			"override bool initialize(Json[string] initData = null)": {
				"origin": "override bool initialize(Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json[string] initData = null",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool initialize(Json[string] initData = null)",
				"isStatic": false
			},
			"LogLevel logLevel()": {
				"origin": "LogLevel logLevel()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "LogLevel",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "LogLevel logLevel()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IError"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "UIMError : UIMObject, IError",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\output.d": {
		"origin": "class DH5Output : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Output",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Output : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\errors\\package.d": {
		"origin": "/****************************************************************************************************************\r",
		"isFinal": false,
		"package": "uim.oop",
		"visibility": "public",
		"comments": [],
		"name": "/****************************************************************************************************************",
		"isAbstract": false,
		"namespace": "uim.oop.errors",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "/****************************************************************************************************************",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\table.d": {
		"origin": "class DH5Table : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Table",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Table : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\patterns\\factory.d": {
		"origin": "class DFactory(T : UIMObject) : UIMObject, IKeyAndPath {\r",
		"isFinal": false,
		"package": "uim.oop.patterns",
		"visibility": "public",
		"comments": [],
		"name": "DFactory(T",
		"isAbstract": false,
		"namespace": "uim.oop.patterns.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject)"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFactory(T : UIMObject) : UIMObject, IKeyAndPath",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\u.d": {
		"origin": "class DH5U : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5U",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5U : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\truncatefixturestrategy.d": {
		"origin": "class DTruncateFixtureStrategy : IFixtureStrategy {\r",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"Fixture strategy that truncates all fixture ables at the end of test."
		],
		"name": "DTruncateFixtureStrategy",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.truncatefixturestrategy",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"IFixtureStrategy"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTruncateFixtureStrategy : IFixtureStrategy",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\components\\botton_navigation_bar.d": {
		"origin": "module uim.html.classes.components.botton_navigation_bar;\r\rimport uim.html;\r\r@safe:\r\rclass DH5SidebarDropdown : DH5Component {\r  this() {\r    super();\r  }\r}\r\rversion (test_uim_html) {\r  unittest {\r    // TODO\r  }\r}\r",
		"isFinal": false,
		"package": "uim.html.classes.components",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.components.botton_navigation_bar;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.components.botton_navigation_bar",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5SidebarDropdown"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.classes.components.botton_navigation_bar;\r\rimport uim.html;\r\r@safe:\r\rDH5SidebarDropdown : DH5Component \r  this() \r    super();\r  }\r}\r\rversion (test_uim_html) \r  unittest",
		"parent": "DH5SidebarDropdown"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\colgroup.d": {
		"origin": "class DH5Colgroup : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Colgroup",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Colgroup : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\abbr.d": {
		"origin": "class DH5Abbr : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <abbr> - represents an abbreviation or acronym."
		],
		"name": "DH5Abbr",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Abbr : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\tenants\\tenant.d": {
		"origin": "class DJsonTenant : UIMObject, IJsonTenant, IJsonCollectionManager {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.tenants",
		"visibility": "public",
		"comments": [],
		"name": "DJsonTenant",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.tenants.tenant",
		"isInherited": false,
		"methods": {
			"this(IJsonBase aBase, Json[string] initData = null)": {
				"origin": "this(IJsonBase aBase, Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(IJsonBase",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(IJsonBase aBase, Json[string] initData = null)",
				"isStatic": false
			},
			"version(test_uim_jsonbase)": {
				"origin": "version(test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_jsonbase)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_jsonbase)",
				"isStatic": false
			},
			"this(IJsonBase aBase, string aName, Json[string] initData = null)": {
				"origin": "this(IJsonBase aBase, string aName, Json[string] initData = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(IJsonBase",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(IJsonBase aBase, string aName, Json[string] initData = null)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IJsonTenant",
			"IJsonCollectionManager"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DJsonTenant : UIMObject, IJsonTenant, IJsonCollectionManager",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\database\\file.d": {
		"origin": "module uim.filesystems.classes.database.file;\r\rimport uim.filesystems;\r\runittest {\r  writeln(\"-----  \", __MODULE__ , \"\\t  -----\");\r}\r\r@safe:\rclass DDatabaseFile : DFile {\r  mixin(FileThis!(\"Database\"));\r\r  override Json[string] debugInfo() {\r    return super.debugInfo();\r  }\r}\rmixin(FileCalls!(\"Database\"));",
		"isFinal": false,
		"package": "uim.filesystems.classes.database",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.database.file;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__ , \"\\t  -----\");\r}\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.database.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DDatabaseFile"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.database.file;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__ , \"\\t  -----\");\r}\r\r@safe:\rDDatabaseFile : DFile \r  mixin(FileThis!(\"Database\"));\r\r  override Json[string] debugInfo() \r    return super.debugInfo();\r  }\r}\rmixin(FileCalls!(\"Database\"));",
		"parent": "DDatabaseFile"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\video.d": {
		"origin": "class DH5Video : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Video",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Video : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\direntries\\fileinfo.d": {
		"origin": "class DFileInfo : UIMObject {\r",
		"isFinal": false,
		"package": "uim.oop.direntries",
		"visibility": "public",
		"comments": [],
		"name": "DFileInfo",
		"isAbstract": false,
		"namespace": "uim.oop.direntries.fileinfo",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFileInfo : UIMObject",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\blockquote.d": {
		"origin": "class DH5Blockquote : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the blockquote tag - indicates that the enclosed text is an extended quotation"
		],
		"name": "DH5Blockquote",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Blockquote : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\constraints\\constraint.d": {
		"origin": "class DConstraint {\r",
		"isFinal": false,
		"package": "uim.oop.tests.constraints",
		"visibility": "public",
		"comments": [],
		"name": "DConstraint",
		"isAbstract": false,
		"namespace": "uim.oop.tests.constraints.constraint",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DConstraint",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\audio.d": {
		"origin": "module uim.html.classes.elements.audio;\r\rimport uim.html;\r\r@safe:\r\r// The <audio> tag defines sound, such as music or other audio streams.\rclass DH5Audio : DH5Obj {\r  mixin(H5This!\"Audio\");\r\r  // Attribute autoplay - if specified, the audio will automatically begin playback as soon as it can do so, without waiting for the entire audio file to finish downloading.\r  mixin(MyAttribute!\"autoplay\");\r\r  // Attribute controls - If this attribute is present, the browser will offer controls to allow the user to control audio playback, including volume, seeking, and pause/resume playback.\r  mixin(MyAttribute!\"controls\");\r\r  // Attribute crossorigin - This enumerated attribute indicates whether to use CORS to fetch the related audio file.\r  // Valid values: anonymous use-credentials\r  mixin(MyAttribute!\"crossorigin\");\r\r  // Attribute disableremoteplayback - A Boolean attribute used to disable the capability of remote playback in devices that are attached using wired (HDMI, DVI, etc.) and wireless technologies (Miracast, Chromecast, DLNA, AirPlay, etc).\r  mixin(MyAttribute!\"disableremoteplayback\");\r\r  // Attribute loop - if specified, the audio player will automatically seek back to the start upon reaching the end of the audio.\r  mixin(MyAttribute!\"loop\");\r\r  // Attribute muted - indicates whether the audio will be initially silenced.\r  mixin(MyAttribute!\"muted\");\r\r  // Attribute preload - This enumerated attribute is intended to provide a hint to the browser about what the author thinks will lead to the best user experience.\r  mixin(MyAttribute!\"preload\"); // Valid values: none, metadata, auto\r\r  // Attribute preload - The URL of the audio to embed. \r  mixin(MyAttribute!\"src\");\r\r  mixin(MyContent!(\"source\", \"H5Source\"));\r  mixin(MyContent!(\"track\", \"H5Track\"));\r}\r\rmixin(H5Short!\"Audio\");\r\rversion (test_uim_html) {\r  unittest {\r    testH5Obj(H5Audio, \"audio\");\r    assert(H5Audio.source([\"src\": \"horse.ogg\", \"type\": \"audio/ogg\"]) == `<audio><source src=\"horse.ogg\" type=\"audio/ogg\"><\/source><\/audio>`);\r    assert(H5Audio.source([\"src\": \"horse.ogg\", \"type\": \"audio/ogg\"])(\"Your browser does not support the audio tag.\") == `<audio><source src=\"horse.ogg\" type=\"audio/ogg\"><\/source>Your browser does not support the audio tag.<\/audio>`);\r\r    mixin(TestH5DoubleAttributes!(\"H5Audio\", \"audio\", [\r          \"autoplay\", \"buffered\", \"controls\", \"crossorigin\",\r          \"disableremoteplayback\", \"loop\", \"muted\", \"preload\", \"src\"\r        ]));\r  }\r}\r",
		"isFinal": false,
		"package": "uim.html.classes.elements",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.elements.audio;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.elements.audio",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.classes.elements.audio;\r\rimport uim.html;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\color.d": {
		"origin": "class DH5InputCOLOR : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputCOLOR",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputCOLOR : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\middlewaredispatcher.d": {
		"origin": "class DMiddlewareDispatcher {",
		"isFinal": false,
		"package": "uim.oop.tests",
		"visibility": "public",
		"comments": [
			"",
			"Dispatches a request capturing the response for integration",
			"testing purposes into the UIM\\Http stack.",
			"",
			"@internal",
			""
		],
		"name": "DMiddlewareDispatcher",
		"isAbstract": false,
		"namespace": "uim.oop.tests.middlewaredispatcher",
		"isInherited": false,
		"methods": {
			"protected string resolveRoute(string[] urlToResolve)": {
				"origin": "protected string resolveRoute(string[] urlToResolve)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] urlToResolve",
				"visibility": "protected",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string resolveRoute(string[] urlToResolve)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DMiddlewareDispatcher",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\obj.d": {
		"origin": "class DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Obj",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			},
			"DH5Obj clone()": {
				"origin": "DH5Obj clone()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DH5Obj",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DH5Obj clone()",
				"isStatic": false
			},
			"string toPretty(int intendSpace = 0, int step = 2)": {
				"origin": "string toPretty(int intendSpace = 0, int step = 2)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "int intendSpace = 0, int step = 2",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string toPretty(int intendSpace = 0, int step = 2)",
				"isStatic": false
			},
			"this(string[] newClasses, string[string] newAttributes, string newContent)": {
				"origin": "this(string[] newClasses, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"O js(this O)(string[] codes...)": {
				"origin": "O js(this O)(string[] codes...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] codes...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O js(this O)(string[] codes...)",
				"isStatic": false
			},
			"string renderJS(string[string] bindings = null)": {
				"origin": "string renderJS(string[string] bindings = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] bindings = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string renderJS(string[string] bindings = null)",
				"isStatic": false
			},
			"O clearContent(this O)()": {
				"origin": "O clearContent(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clearContent(this O)()",
				"isStatic": false
			},
			"string attsToHTML()": {
				"origin": "string attsToHTML()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string attsToHTML()",
				"isStatic": false
			},
			"this(string[] newClasses, DH5 newContent)": {
				"origin": "this(string[] newClasses, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, DH5 newContent)",
				"isStatic": false
			},
			"O content(this O)(string[] newContent)": {
				"origin": "O content(this O)(string[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O content(this O)(string[] newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O attribute(this O)(string name, string value)": {
				"origin": "O attribute(this O)(string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string name, string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O attribute(this O)(string name, string value)",
				"isStatic": false
			},
			"O css(this O)(DCSSRule aRule)": {
				"origin": "O css(this O)(DCSSRule aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O css(this O)(DCSSRule aRule)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string[string] newAttributes, string newContent)": {
				"origin": "this(string newId, string[] newClasses, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"void opIndexAssign(T)(T value, string key, T notValue)": {
				"origin": "void opIndexAssign(T)(T value, string key, T notValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "T)(T value, string key, T notValue",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opIndexAssign(T)(T value, string key, T notValue)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses)": {
				"origin": "O opCall(this O)(string[] newClasses)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, string newContent)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, string[string] newAttributes, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"O clearJs(this O)()": {
				"origin": "O clearJs(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clearJs(this O)()",
				"isStatic": false
			},
			"string toJS(string target = null)": {
				"origin": "string toJS(string target = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string target = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string toJS(string target = null)",
				"isStatic": false
			},
			"O clearHtml(this O)()": {
				"origin": "O clearHtml(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clearHtml(this O)()",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string newContent)": {
				"origin": "this(string newId, string[] newClasses, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string newContent)",
				"isStatic": false
			},
			"O content(this O)(string[] newContent...)": {
				"origin": "O content(this O)(string[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O content(this O)(string[] newContent...)",
				"isStatic": false
			},
			"O opCall(this O)(DH5 newContent)": {
				"origin": "O opCall(this O)(DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5 newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DH5 newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, string[string] newAttributes)": {
				"origin": "O opCall(this O)(string[] newClasses, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, string[string] newAttributes)",
				"isStatic": false
			},
			"O dir(this O)(string value)": {
				"origin": "O dir(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O dir(this O)(string value)",
				"isStatic": false
			},
			"version (test_uim_html)": {
				"origin": "version (test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_html",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_html)",
				"isStatic": false
			},
			"O addAttributes(this O)(string[string] newAttributes)": {
				"origin": "O addAttributes(this O)(string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addAttributes(this O)(string[string] newAttributes)",
				"isStatic": false
			},
			"O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string[string] newAttributes)": {
				"origin": "this(string newId, string[] newClasses, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string[string] newAttributes)",
				"isStatic": false
			},
			"O content(this O)(DH5 newContent)": {
				"origin": "O content(this O)(DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5 newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O content(this O)(DH5 newContent)",
				"isStatic": false
			},
			"O content(this O)(DH5Obj[] newContent)": {
				"origin": "O content(this O)(DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O content(this O)(DH5Obj[] newContent)",
				"isStatic": false
			},
			"O removeClasses(this O)(string[] values)": {
				"origin": "O removeClasses(this O)(string[] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O removeClasses(this O)(string[] values)",
				"isStatic": false
			},
			"string opBinary(string op)(string rhs)": {
				"origin": "string opBinary(string op)(string rhs)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string op)(string rhs",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string opBinary(string op)(string rhs)",
				"isStatic": false
			},
			"string renderCSS(string[string] bindings = null)": {
				"origin": "string renderCSS(string[string] bindings = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] bindings = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string renderCSS(string[string] bindings = null)",
				"isStatic": false
			},
			"O add(this O)(DH5Obj[] newContent...)": {
				"origin": "O add(this O)(DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DH5Obj[] newContent...)",
				"isStatic": false
			},
			"bool isBoolAttribute(string name)": {
				"origin": "bool isBoolAttribute(string name)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string name",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isBoolAttribute(string name)",
				"isStatic": false
			},
			"@property string js()": {
				"origin": "@property string js()",
				"isFinal": false,
				"isProperty": true,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string js()",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, DH5 newContent)": {
				"origin": "this(string newId, string[] newClasses, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, DH5 newContent)",
				"isStatic": false
			},
			"O attribute(this O)(string name, bool value)": {
				"origin": "O attribute(this O)(string name, bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string name, bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O attribute(this O)(string name, bool value)",
				"isStatic": false
			},
			"O opCall(this O)(DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string[string] newAttributes)": {
				"origin": "this(string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[string] newAttributes)",
				"isStatic": false
			},
			"O opCall(this O)(DCSSRules aRules)": {
				"origin": "O opCall(this O)(DCSSRules aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRules aRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DCSSRules aRules)",
				"isStatic": false
			},
			"string attribute(string name)": {
				"origin": "string attribute(string name)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string name",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string attribute(string name)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O addContent(this O)(string[] newContent)": {
				"origin": "O addContent(this O)(string[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addContent(this O)(string[] newContent)",
				"isStatic": false
			},
			"O style(this O)(string value)": {
				"origin": "O style(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O style(this O)(string value)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string[] newClasses, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O removeClasses(this O)(string[] values...)": {
				"origin": "O removeClasses(this O)(string[] values...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O removeClasses(this O)(string[] values...)",
				"isStatic": false
			},
			"O translate(this O)(bool value)": {
				"origin": "O translate(this O)(bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O translate(this O)(bool value)",
				"isStatic": false
			},
			"O tabindex(this O)(string value)": {
				"origin": "O tabindex(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O tabindex(this O)(string value)",
				"isStatic": false
			},
			"string render(string[string] bindings = null)": {
				"origin": "string render(string[string] bindings = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] bindings = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string render(string[string] bindings = null)",
				"isStatic": false
			},
			"this(string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "this(string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string newId, string[string] newAttributes)": {
				"origin": "this(string newId, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[string] newAttributes)",
				"isStatic": false
			},
			"O addContent(this O)(string[] newContent...)": {
				"origin": "O addContent(this O)(string[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addContent(this O)(string[] newContent...)",
				"isStatic": false
			},
			"O add(this O)(DH5 newContent)": {
				"origin": "O add(this O)(DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5 newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DH5 newContent)",
				"isStatic": false
			},
			"this(DH5 newContent)": {
				"origin": "this(DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(DH5",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(DH5 newContent)",
				"isStatic": false
			},
			"O draggable(this O)(bool value)": {
				"origin": "O draggable(this O)(bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O draggable(this O)(bool value)",
				"isStatic": false
			},
			"void opIndexAssign(bool value, string key, bool notValue)": {
				"origin": "void opIndexAssign(bool value, string key, bool notValue)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "bool value, string key, bool notValue",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opIndexAssign(bool value, string key, bool notValue)",
				"isStatic": false
			},
			"O clearCss(this O)()": {
				"origin": "O clearCss(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clearCss(this O)()",
				"isStatic": false
			},
			"this(string newId, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "this(string newId, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"O opCall(this O)(string newId, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string newId, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string newId, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, DH5Obj[] newContent)",
				"isStatic": false
			},
			"string toString(string[string] parameters)": {
				"origin": "string toString(string[string] parameters)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] parameters",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string toString(string[string] parameters)",
				"isStatic": false
			},
			"O clearClasses(this O)()": {
				"origin": "O clearClasses(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clearClasses(this O)()",
				"isStatic": false
			},
			"O addContent(this O)(DH5 newContent)": {
				"origin": "O addContent(this O)(DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5 newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addContent(this O)(DH5 newContent)",
				"isStatic": false
			},
			"O classes(this O)(string[] values)": {
				"origin": "O classes(this O)(string[] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O classes(this O)(string[] values)",
				"isStatic": false
			},
			"this(DH5Obj[] newContent)": {
				"origin": "this(DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(DH5Obj[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(DH5Obj[] newContent)",
				"isStatic": false
			},
			"O title(this O)(string value)": {
				"origin": "O title(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O title(this O)(string value)",
				"isStatic": false
			},
			"O opCall(this O)(DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DH5Obj[] newContent...)",
				"isStatic": false
			},
			"string renderHTML(string[string] bindings = null)": {
				"origin": "string renderHTML(string[string] bindings = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] bindings = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string renderHTML(string[string] bindings = null)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes)",
				"isStatic": false
			},
			"O css(this O)(string aSelector, string[string] someDeclarations)": {
				"origin": "O css(this O)(string aSelector, string[string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string[string] someDeclarations",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O css(this O)(string aSelector, string[string] someDeclarations)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O dropzone(this O)(string value)": {
				"origin": "O dropzone(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O dropzone(this O)(string value)",
				"isStatic": false
			},
			"this(string[] newClasses, DH5Obj[] newContent...)": {
				"origin": "this(string[] newClasses, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"bool opEquals(string html)": {
				"origin": "bool opEquals(string html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string html",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool opEquals(string html)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string[] newClasses, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, DH5Obj[] newContent...)": {
				"origin": "this(string newId, string[] newClasses, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"string opBinary(string op)(DH5Obj rhs)": {
				"origin": "string opBinary(string op)(DH5Obj rhs)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string op)(DH5Obj rhs",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string opBinary(string op)(DH5Obj rhs)",
				"isStatic": false
			},
			"O contextmenu(this O)(string value)": {
				"origin": "O contextmenu(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O contextmenu(this O)(string value)",
				"isStatic": false
			},
			"this(string newContent)": {
				"origin": "this(string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newContent)",
				"isStatic": false
			},
			"O removeAttribute(this O)(string name)": {
				"origin": "O removeAttribute(this O)(string name)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string name",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O removeAttribute(this O)(string name)",
				"isStatic": false
			},
			"O content(this O)(DH5Obj[] newContent...)": {
				"origin": "O content(this O)(DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O content(this O)(DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O add(this O)(string[string] newAttributes)": {
				"origin": "O add(this O)(string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(string[string] newAttributes)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[string] newAttributes)": {
				"origin": "O opCall(this O)(string newId, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[string] newAttributes)",
				"isStatic": false
			},
			"DH5Obj copy()": {
				"origin": "DH5Obj copy()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DH5Obj",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DH5Obj copy()",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[string] newAttributes, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, string newContent)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, string newContent)",
				"isStatic": false
			},
			"O clear(this O)()": {
				"origin": "O clear(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O clear(this O)()",
				"isStatic": false
			},
			"this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, DH5Obj[] newContent)": {
				"origin": "this(string newId, string[] newClasses, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O add(this O)(string[] newClasses)": {
				"origin": "O add(this O)(string[] newClasses)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(string[] newClasses)",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"this(DH5Obj[] newContent...)": {
				"origin": "this(DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(DH5Obj[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O lang(this O)(string value)": {
				"origin": "O lang(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O lang(this O)(string value)",
				"isStatic": false
			},
			"this(string[string] newAttributes, string newContent)": {
				"origin": "this(string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"auto classes()": {
				"origin": "auto classes()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto classes()",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string[string] newAttributes, DH5 newContent)": {
				"origin": "this(string newId, string[] newClasses, string[string] newAttributes, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string[string] newAttributes, DH5 newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O addContent(this O)(DH5Obj[] newContent...)": {
				"origin": "O addContent(this O)(DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addContent(this O)(DH5Obj[] newContent...)",
				"isStatic": false
			},
			"this(string[] newClasses, string newContent)": {
				"origin": "this(string[] newClasses, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string newContent)",
				"isStatic": false
			},
			"this(string[] newClasses, DH5Obj[] newContent)": {
				"origin": "this(string[] newClasses, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O addClasses(this O)(string[] values)": {
				"origin": "O addClasses(this O)(string[] values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addClasses(this O)(string[] values)",
				"isStatic": false
			},
			"O opCall(this O)(string[string] newAttributes)": {
				"origin": "O opCall(this O)(string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[string] newAttributes)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, string[string] newAttributes, string newContent)": {
				"origin": "O opCall(this O)(string[] newClasses, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, string[string] newAttributes, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"O addClasses(this O)(string[] values...)": {
				"origin": "O addClasses(this O)(string[] values...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addClasses(this O)(string[] values...)",
				"isStatic": false
			},
			"DCSSRules css()": {
				"origin": "DCSSRules css()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DCSSRules",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DCSSRules css()",
				"isStatic": false
			},
			"O css(this O)(DCSSRules aRules)": {
				"origin": "O css(this O)(DCSSRules aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRules aRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O css(this O)(DCSSRules aRules)",
				"isStatic": false
			},
			"this(string newId, DH5Obj[] newContent...)": {
				"origin": "this(string newId, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"O classes(this O)(string[] values...)": {
				"origin": "O classes(this O)(string[] values...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] values...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O classes(this O)(string[] values...)",
				"isStatic": false
			},
			"this(string newId, string[string] newAttributes, string newContent)": {
				"origin": "this(string newId, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"this(string[] newClasses, string[string] newAttributes)": {
				"origin": "this(string[] newClasses, string[string] newAttributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string[string] newAttributes)",
				"isStatic": false
			},
			"this(string newId, DH5 newContent)": {
				"origin": "this(string newId, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, DH5 newContent)",
				"isStatic": false
			},
			"O add(this O)(DH5Obj[] newContent)": {
				"origin": "O add(this O)(DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DH5Obj[] newContent)",
				"isStatic": false
			},
			"DH5Obj[] content()": {
				"origin": "DH5Obj[] content()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DH5Obj[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DH5Obj[] content()",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, string newContent)": {
				"origin": "O opCall(this O)(string[] newClasses, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, string newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string[string] newAttributes, string newContent)": {
				"origin": "O opCall(this O)(string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] newAttributes, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"O accesskey(this O)(string value)": {
				"origin": "O accesskey(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O accesskey(this O)(string value)",
				"isStatic": false
			},
			"void opIndexAssign(bool value, string key)": {
				"origin": "void opIndexAssign(bool value, string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "bool value, string key",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opIndexAssign(bool value, string key)",
				"isStatic": false
			},
			"O css(this O)(string aSelector, string name, string value)": {
				"origin": "O css(this O)(string aSelector, string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string name, string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O css(this O)(string aSelector, string name, string value)",
				"isStatic": false
			},
			"this(string[] newClasses)": {
				"origin": "this(string[] newClasses)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[string] newAttributes, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O hidden(this O)(bool value)": {
				"origin": "O hidden(this O)(bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O hidden(this O)(bool value)",
				"isStatic": false
			},
			"O contenteditable(this O)(bool value)": {
				"origin": "O contenteditable(this O)(bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O contenteditable(this O)(bool value)",
				"isStatic": false
			},
			"this(string[string] newAttributes, DH5Obj[] newContent...)": {
				"origin": "this(string[string] newAttributes, DH5Obj[] newContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[string] newAttributes, DH5Obj[] newContent...)",
				"isStatic": false
			},
			"this(string[string] newAttributes, DH5 newContent)": {
				"origin": "this(string[string] newAttributes, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[string]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[string] newAttributes, DH5 newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string newContent)": {
				"origin": "O opCall(this O)(string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[] newClasses)": {
				"origin": "O opCall(this O)(string newId, string[] newClasses)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[] newClasses",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[] newClasses)",
				"isStatic": false
			},
			"bool initialize()": {
				"origin": "bool initialize()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool initialize()",
				"isStatic": false
			},
			"O opCall(this O)(DCSSRule aRule)": {
				"origin": "O opCall(this O)(DCSSRule aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DCSSRule aRule)",
				"isStatic": false
			},
			"void opIndexAssign(T)(T value, string key)": {
				"origin": "void opIndexAssign(T)(T value, string key)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "T)(T value, string key",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opIndexAssign(T)(T value, string key)",
				"isStatic": false
			},
			"O spellcheck(this O)(bool value)": {
				"origin": "O spellcheck(this O)(bool value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O spellcheck(this O)(bool value)",
				"isStatic": false
			},
			"O add(this O)(string newContent)": {
				"origin": "O add(this O)(string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(string newContent)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			},
			"O opCall(this O)(string newId, string[string] newAttributes, string newContent)": {
				"origin": "O opCall(this O)(string newId, string[string] newAttributes, string newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string newId, string[string] newAttributes, string newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string newId, string[string] newAttributes, string newContent)",
				"isStatic": false
			},
			"this(string newId, string[] newClasses)": {
				"origin": "this(string newId, string[] newClasses)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[] newClasses)",
				"isStatic": false
			},
			"this(string newId, string[string] newAttributes, DH5 newContent)": {
				"origin": "this(string newId, string[string] newAttributes, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[string] newAttributes, DH5 newContent)",
				"isStatic": false
			},
			"this(string newId, DH5Obj[] newContent)": {
				"origin": "this(string newId, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string[] newClasses, string[string] newAttributes, DH5 newContent)": {
				"origin": "this(string[] newClasses, string[string] newAttributes, DH5 newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string[] newClasses, string[string] newAttributes, DH5 newContent)",
				"isStatic": false
			},
			"O addContent(this O)(DH5Obj[] newContent)": {
				"origin": "O addContent(this O)(DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] newContent",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O addContent(this O)(DH5Obj[] newContent)",
				"isStatic": false
			},
			"this(string newId, string[string] newAttributes, DH5Obj[] newContent)": {
				"origin": "this(string newId, string[string] newAttributes, DH5Obj[] newContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string newId, string[string] newAttributes, DH5Obj[] newContent)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "",
		"header": "DH5Obj",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\summary.d": {
		"origin": "class DH5Summary : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Summary",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Summary : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\strong.d": {
		"origin": "class DH5Strong : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <strong> - indicates that its contents have strong importance, seriousness, or urgency."
		],
		"name": "DH5Strong",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Strong : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\bdi.d": {
		"origin": "class DH5Bdi : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for bdi tag - tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text."
		],
		"name": "DH5Bdi",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Bdi : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\details.d": {
		"origin": "class DH5Details: DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Details",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Details: DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\time.d": {
		"origin": "class DH5Time : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <time> - represents a specific period in time. It may include the datetime attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders."
		],
		"name": "DH5Time",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Time : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\header.d": {
		"origin": "class DH5Header : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Header",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Header : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\param.d": {
		"origin": "class DH5Param : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Param",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Param : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\submit.d": {
		"origin": "class DH5InputSUBMIT : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputSUBMIT",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputSUBMIT : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\fixturehelper.d": {
		"origin": "class DFixtureHelper {",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"Helper for managing fixtures."
		],
		"name": "DFixtureHelper",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.fixturehelper",
		"isInherited": false,
		"methods": {
			"void runPerConnection(DClosure aCallback, IFixture[] fixtures)": {
				"origin": "void runPerConnection(DClosure aCallback, IFixture[] fixtures)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "DClosure aCallback, IFixture[] fixtures",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void runPerConnection(DClosure aCallback, IFixture[] fixtures)",
				"isStatic": false
			},
			"void truncate(IFixture[] testFixtures)": {
				"origin": "void truncate(IFixture[] testFixtures)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "IFixture[] testFixtures",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void truncate(IFixture[] testFixtures)",
				"isStatic": false
			},
			"IFixture[] loadFixtures(string[] fixtureNames)": {
				"origin": "IFixture[] loadFixtures(string[] fixtureNames)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] fixtureNames",
				"visibility": "public",
				"datatype": "IFixture[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IFixture[] loadFixtures(string[] fixtureNames)",
				"isStatic": false
			},
			"protected string[] getForeignReferences(Connection dbConnection, IFixture fixture)": {
				"origin": "protected string[] getForeignReferences(Connection dbConnection, IFixture fixture)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Connection dbConnection, IFixture fixture",
				"visibility": "protected",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] getForeignReferences(Connection dbConnection, IFixture fixture)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFixtureHelper",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\errors\\collection.d": {
		"origin": "class DErrorCollection : DCollection!UIMError {   ",
		"isFinal": false,
		"package": "uim.oop.errors",
		"visibility": "public",
		"comments": [],
		"name": "DErrorCollection",
		"isAbstract": false,
		"namespace": "uim.oop.errors.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCollection!UIMError"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DErrorCollection : DCollection!UIMError",
		"parent": "DCollection!UIMError"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\classes\\containers\\container.d": {
		"origin": "module uim.css.classes.containers.container;\r\rimport uim.css;\r\r@safe:\r\rclass DCSSContainer : UIMObject {\r\r  this() {\r    super();\r  }\r\r  this(Json[string] initData) {\r    super(initData);\r  }\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    return true;\r  }\r\r  DCSSObj[] _cssItems;\r\r  alias opEquals = Object.opEquals;\r  bool opEquals(string css) {\r    return toString == css;\r  }\r\r  bool opEquals(DCSSContainer obj) {\r    return toString == obj.toString;\r  }\r\r  protected void init() {\r  }\r\r  override string toString() {\r    return null;\r  }\r}\r\rauto CSSContainer() {\r  return new DCSSContainer();\r}\r\runittest {\r  // TODO\r}\r",
		"isFinal": false,
		"package": "uim.css.classes.containers",
		"visibility": "protected",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.classes.containers.container;\r\rimport uim.css;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.classes.containers.container",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCSSContainer"
		],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.classes.containers.container;\r\rimport uim.css;\r\r@safe:\r\rDCSSContainer : UIMObject \r\r  this() \r    super();\r  }\r\r  this(Json[string] initData) \r    super(initData);\r  }\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    return true;\r  }\r\r  DCSSObj[] _cssItems;\r\r  alias opEquals = Object.opEquals;\r  bool opEquals(string css) \r    return toString == css;\r  }\r\r  bool opEquals(DCSSContainer obj) \r    return toString == obj.toString;\r  }\r\r  void init() \r  }\r\r  override string toString() \r    return null;\r  }\r}\r\rauto CSSContainer() \r  return new DCSSContainer();\r}\r\runittest",
		"parent": "DCSSContainer"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\b.d": {
		"origin": "class DH5B : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the <b> tag - specifies bold text."
		],
		"name": "DH5B",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5B : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\footer.d": {
		"origin": "class DH5Footer : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Footer",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Footer : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\ul.d": {
		"origin": "class DH5Ul : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Ul",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"O link(this O)(string id, string[] linkClasses, string src, string title)": {
				"origin": "O link(this O)(string id, string[] linkClasses, string src, string title)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string id, string[] linkClasses, string src, string title",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O link(this O)(string id, string[] linkClasses, string src, string title)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Ul : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\ol.d": {
		"origin": "class DH5Ol : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Ol",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Ol : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\containers\\container.d": {
		"origin": "abstract class DContainer(T : UIMObject) {\r",
		"isFinal": false,
		"package": "uim.oop.containers",
		"visibility": "public",
		"comments": [],
		"name": "DContainer(T",
		"isAbstract": true,
		"namespace": "uim.oop.containers.container",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject)"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DContainer(T : UIMObject)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\classes\\css.d": {
		"origin": "module uim.css.classes.css;\r\rimport uim.css;\r\r@safe:\rclass DCSS {\r  this() {}\r  this(string newContent) { this.content(newContent); }\r\r  // Resulting contet\r  mixin(XString!(\"content\"));\r  version(test_uim_css) { unittest {}}\r\r  O rule(this O)(string selector, string[string] values) {\r    return content(\"%s%s\".format(selector, values.toCss));\r  }\r  unittest {\r// TODO\r}\r\r  // Compare with toString result\r  bool opEquals(string txt) { return (txt == toString); }\r\r  string toHTML() {\r    return `<style>`~content~`<\/style>`;\r  }\r\r  override string toString() {\r    return content;\r  }\r}\rauto CSS() { return new DCSS(); }\rauto CSS(string newContent) { return new DCSS(newContent); }\r\runittest {\r  assert(CSS(\"test\").toHTML == `<style>test<\/style>`);\r}",
		"isFinal": false,
		"package": "uim.css.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.classes.css;\r\rimport uim.css;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.classes.css",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCSS \r  this() \r  this(string newContent)  this.content(newContent); }"
		],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.classes.css;\r\rimport uim.css;\r\r@safe:\rDCSS \r  this() \r  this(string newContent)  this.content(newContent); }",
		"parent": "DCSS \r  this() \r  this(string newContent)  this.content(newContent); }"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\attributes\\attribute.d": {
		"origin": "module uim.html.classes.attributes.attribute;\r\rimport uim.html;\r\r@safe:\r\r// Wrapper for <article> - represents a self-contained composition in a document, page, application, or site, \r// which is intended to be independently distributable or reusable (e.g., in syndication)\rclass DH5Attribute {\r    this() {\r    }\r\r    this(string name, bool isBoolean = false) {\r        this.name(name);\r        this.isBoolean(isBoolean);\r    }\r\r    this(string name, string value, bool isBoolean = false) {\r        this.value(value);\r        this.name(name);\r        this.isBoolean(isBoolean);\r    }\r\r    mixin(TProperty!(\"string\", \"name\"));\r    mixin(TProperty!(\"bool\", \"isBoolean\"));\r\r    mixin(TProperty!(\"string\", \"value\"));\r    @property void value(bool setValue) {\r        value(\"true\");\r    }\r\r    @property void value(int setValue) {\r        value(to!string(setValue));\r    }\r\r    @property void value(double setValue) {\r        value(to!string(setValue));\r    } // TODO sanitize\r\r    override string toString() {\r        return isBoolean && value !is null\r            ? name : name ~ `=\"%s\"`.format(value);\r    }\r}\r\rauto H5Attribute() {\r    return new DH5Attribute;\r}\r\rauto H5Attribute(string name, bool isBooleanAttribute = false) {\r    return new DH5Attribute(name, isBooleanAttribute);\r}\r\rauto H5Attribute(string name, string value, bool isBooleanAttribute = false) {\r    return new DH5Attribute(name, value, isBooleanAttribute);\r}\r",
		"isFinal": false,
		"package": "uim.html.classes.attributes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.attributes.attribute;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.attributes.attribute",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.classes.attributes.attribute;\r\rimport uim.html;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\linux\\link.d": {
		"origin": "module uim.filesystems.classes.os.linux.link;\r\rimport uim.filesystems;\r\r@safe:\rclass DLinuxLink : DLink {\r  mixin(LinkThis!(\"Linux\"));\r}\r\rmixin(LinkCalls!(\"Linux\"));\r\rversion (testUimFilesystems) {\r  unittest {\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto myFS = LinuxFilesystem(\"TestFs\");\r    myFS.rootPath(\"for_testing\");\r\r    if (!myFS.existsFolder(\"LinuxLink\")) {\r      myFS.createFolder(\"LinuxLink\");\r    }\r    if (!myFS.existsFolder([\"LinuxLink\"], \"links\")) {\r      myFS.createFolder([\"LinuxLink\"], \"links\");\r    }\r    if (!myFS.existsFolder([\"LinuxLink\"], \"link\")) {\r      myFS.createFolder([\"LinuxLink\"], \"link\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/creatingLinks\")) {\r      myFS.createFolder(\"LinuxLink/links/creatingLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/readLinks\")) {\r      myFS.createFolder(\"LinuxLink/links/readLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/updateLinks\")) {\r      myFS.createFolder(\"LinuxLink/links/updateLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/removeLinks\")) {\r      myFS.createFolder(\"LinuxLink/links/removeLinks\");\r    }\r\r    /* workFolder = (myFolder.existsFolder(\"creatingLinks\") ? myFolder.folder(\"creatingLinks\") : myFolder.createFolder(\"creatingLinks\"));\r  testLink_CreateLink(__MODULE__, workFolder, \"creatingLinks\", [\"creatingLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"readLinks\") ? myFolder.folder(\"readLinks\") : myFolder.createFolder(\"readLinks\"));\r  testLink_ReadLink(__MODULE__, workFolder, \"readLinks\", [\"readLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"updateLinks\") ? myFolder.folder(\"updateLinks\") : myFolder.createFolder(\"updateLinks\"));\r  testLink_UpdateLink(__MODULE__, workFolder, \"updateLinks\", [\"updateLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"removeLinks\") ? myFolder.folder(\"removeLinks\") : myFolder.createFolder(\"removeLinks\"));\r  testLink_RemoveLink(__MODULE__, workFolder, \"removeLinks\", [\"removeLinks\"]); \r  workFolder = null; */\r\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"End tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.white).setForeground(AnsiColor.black));\r    }\r  }\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.linux",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.linux.link;\r\rimport uim.filesystems;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.linux.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DLinuxLink"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.linux.link;\r\rimport uim.filesystems;\r\r@safe:\rDLinuxLink : DLink \r  mixin(LinkThis!(\"Linux\"));\r}\r\rmixin(LinkCalls!(\"Linux\"));\r\rversion (testUimFilesystems) \r  unittest \r    version (testUimFilesystems) \r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto myFS = LinuxFilesystem(\"TestFs\");\r    myFS.rootPath(\"for_testing\");\r\r    if (!myFS.existsFolder(\"LinuxLink\")) \r      myFS.createFolder(\"LinuxLink\");\r    }\r    if (!myFS.existsFolder([\"LinuxLink\"], \"links\")) \r      myFS.createFolder([\"LinuxLink\"], \"links\");\r    }\r    if (!myFS.existsFolder([\"LinuxLink\"], \"link\")) \r      myFS.createFolder([\"LinuxLink\"], \"link\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/creatingLinks\")) \r      myFS.createFolder(\"LinuxLink/links/creatingLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/readLinks\")) \r      myFS.createFolder(\"LinuxLink/links/readLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/updateLinks\")) \r      myFS.createFolder(\"LinuxLink/links/updateLinks\");\r    }\r\r    if (!myFS.existsFolder(\"LinuxLink/links/removeLinks\")) \r      myFS.createFolder(\"LinuxLink/links/removeLinks\");\r    }\r\r    /* workFolder = (myFolder.existsFolder(\"creatingLinks\") ? myFolder.folder(\"creatingLinks\") : myFolder.createFolder(\"creatingLinks\"));\r  testLink_CreateLink(__MODULE__, workFolder, \"creatingLinks\", [\"creatingLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"readLinks\") ? myFolder.folder(\"readLinks\") : myFolder.createFolder(\"readLinks\"));\r  testLink_ReadLink(__MODULE__, workFolder, \"readLinks\", [\"readLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"updateLinks\") ? myFolder.folder(\"updateLinks\") : myFolder.createFolder(\"updateLinks\"));\r  testLink_UpdateLink(__MODULE__, workFolder, \"updateLinks\", [\"updateLinks\"]);\r  workFolder = null;\r\r  workFolder = (myFolder.existsFolder(\"removeLinks\") ? myFolder.folder(\"removeLinks\") : myFolder.createFolder(\"removeLinks\"));\r  testLink_RemoveLink(__MODULE__, workFolder, \"removeLinks\", [\"removeLinks\"]); \r  workFolder = null; */\r\r    version (testUimFilesystems) \r      debug writeln(StyledString(\"End tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.white).setForeground(AnsiColor.black));\r    }\r  }\r}",
		"parent": "DLinuxLink"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\parsers\\collection.d": {
		"origin": "class DParserCollection : DCollection!DParser {   ",
		"isFinal": false,
		"package": "uim.oop.parsers",
		"visibility": "public",
		"comments": [],
		"name": "DParserCollection",
		"isAbstract": false,
		"namespace": "uim.oop.parsers.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCollection!DParser"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DParserCollection : DCollection!DParser",
		"parent": "DCollection!DParser"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\commands\\factory.d": {
		"origin": "class DCommandFactory : DFactory!DCommand {\r",
		"isFinal": false,
		"package": "uim.oop.commands",
		"visibility": "public",
		"comments": [],
		"name": "DCommandFactory",
		"isAbstract": false,
		"namespace": "uim.oop.commands.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DCommand"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DCommandFactory : DFactory!DCommand",
		"parent": "DFactory!DCommand"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\number.d": {
		"origin": "class DH5InputNUMBER : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputNUMBER",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputNUMBER : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\main_.d": {
		"origin": "class DH5Main : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <main> - represents the dominant content of the <body> of a document."
		],
		"name": "DH5Main",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Main : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\validators\\collection.d": {
		"origin": "class DValidatorCollection : DCollection!DUIMValidator {   \r",
		"isFinal": false,
		"package": "uim.oop.validators",
		"visibility": "public",
		"comments": [],
		"name": "DValidatorCollection",
		"isAbstract": false,
		"namespace": "uim.oop.validators.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCollection!DUIMValidator"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DValidatorCollection : DCollection!DUIMValidator",
		"parent": "DCollection!DUIMValidator"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\iframe.d": {
		"origin": "class DH5Iframe : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Iframe",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Iframe : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\pre.d": {
		"origin": "class DH5Pre : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Das Element pre erlaubt es, Text so darzustellen, wie er im Editor eingegeben wird, pre steht dabei für preformatted, also präformatiert, vorformatiert.",
			""
		],
		"name": "DH5Pre",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Pre : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\validators\\registry.d": {
		"origin": "class DValidatorRegistry : DObjectRegistry!DUIMValidator {\r",
		"isFinal": false,
		"package": "uim.oop.validators",
		"visibility": "public",
		"comments": [],
		"name": "DValidatorRegistry",
		"isAbstract": false,
		"namespace": "uim.oop.validators.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DUIMValidator"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DValidatorRegistry : DObjectRegistry!DUIMValidator",
		"parent": "DObjectRegistry!DUIMValidator"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\date.d": {
		"origin": "class DH5InputDate : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputDate",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputDate : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\datalist.d": {
		"origin": "class DH5Datalist : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Datalist",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Datalist : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\cite.d": {
		"origin": "class DH5Cite : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for cite tag - used to describe a reference to a cited creative work, and must include the title of that work."
		],
		"name": "DH5Cite",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Cite : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\collections\\file.d": {
		"origin": "class DFileJsonCollection : DJsonCollection {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.collections",
		"visibility": "public",
		"comments": [],
		"name": "DFileJsonCollection",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.collections.file",
		"isInherited": false,
		"methods": {
			"this(IFolder aFolder)": {
				"origin": "this(IFolder aFolder)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(IFolder",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(IFolder aFolder)",
				"isStatic": false
			},
			"override Json insertOne(Json newData)": {
				"origin": "override Json insertOne(Json newData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json newData",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json insertOne(Json newData)",
				"isStatic": false
			},
			"override bool removeOne(UUID anId, size_t aVersionNumber = 0)": {
				"origin": "override bool removeOne(UUID anId, size_t aVersionNumber = 0)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID anId, size_t aVersionNumber = 0",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID anId, size_t aVersionNumber = 0)",
				"isStatic": false
			},
			"override Json findOne(UUID anId, size_t versionNumber)": {
				"origin": "override Json findOne(UUID anId, size_t versionNumber)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID anId, size_t versionNumber",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID anId, size_t versionNumber)",
				"isStatic": false
			},
			"override size_t updateMany(Json select, Json updateData)": {
				"origin": "override size_t updateMany(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t updateMany(Json select, Json updateData)",
				"isStatic": false
			},
			"override size_t removeMany(UUID id, bool allVersions = false)": {
				"origin": "override size_t removeMany(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(UUID anId, bool allVersions = false)": {
				"origin": "override Json[] findMany(UUID anId, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID anId, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(UUID anId, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(Json select, bool allVersions = false)": {
				"origin": "override Json findOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(string[string] select, bool allVersions = false)": {
				"origin": "override bool removeOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"version (test_uim_jsonbase)": {
				"origin": "version (test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_jsonbase",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_jsonbase)",
				"isStatic": false
			},
			"override size_t removeMany(string[string] select, bool allVersions = false)": {
				"origin": "override size_t removeMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(UUID anId, bool allVersions = false)": {
				"origin": "override bool removeOne(UUID anId, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID anId, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID anId, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(string[string] select, bool allVersions = false)": {
				"origin": "override Json findOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override size_t updateMany(string[string] select, string[string] updateData)": {
				"origin": "override size_t updateMany(string[string] select, string[string] updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, string[string] updateData",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t updateMany(string[string] select, string[string] updateData)",
				"isStatic": false
			},
			"override Json[] findMany(string[string] select, bool allVersions = false)": {
				"origin": "override Json[] findMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override size_t removeMany(Json select, bool allVersions = false)": {
				"origin": "override size_t removeMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool updateOne(Json select, Json updateData)": {
				"origin": "override bool updateOne(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool updateOne(Json select, Json updateData)",
				"isStatic": false
			},
			"override Json[] findMany(Json select, bool allVersions = false)": {
				"origin": "override Json[] findMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(Json select, bool allVersions = false)": {
				"origin": "override bool removeOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(bool allVersions = false)": {
				"origin": "override Json[] findMany(bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(UUID id, bool allVersions = false)": {
				"origin": "override Json findOne(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID id, bool allVersions = false)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DJsonCollection"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DFileJsonCollection : DJsonCollection",
		"parent": "DJsonCollection"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\exceptions\\exception.d": {
		"origin": "module uim.jsonbases.exceptions.exception;\r\rimport uim.jsonbases;\r\r@safe:\rclass DJsonBaseException : UIMException {\r  mixin(ExceptionThis!(\"JsonBase\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-jsonbases\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"JsonBase\"));\r\runittest {\r  assert(JsonBaseException);\r}\r",
		"isFinal": false,
		"package": "uim.jsonbases.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.jsonbases.exceptions.exception;\r\rimport uim.jsonbases;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.jsonbases.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DJsonBaseException"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "module uim.jsonbases.exceptions.exception;\r\rimport uim.jsonbases;\r\r@safe:\rDJsonBaseException : UIMException \r  mixin(ExceptionThis!(\"JsonBase\"));\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-jsonbases\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"JsonBase\"));\r\runittest \r  assert(JsonBaseException);\r}",
		"parent": "DJsonBaseException"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\image.d": {
		"origin": "class DH5InputIMAGE : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputIMAGE",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputIMAGE : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\models\\uim\\models\\classes\\attributes\\attribute.d": {
		"origin": "class DAttribute : UIMObject, IAttribute {\r",
		"isFinal": false,
		"package": "uim.models.classes.attributes",
		"visibility": "public",
		"comments": [],
		"name": "DAttribute",
		"isAbstract": false,
		"namespace": "uim.models.classes.attributes.attribute",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IAttribute"
		],
		"isStatic": false,
		"library": "uim-models",
		"header": "DAttribute : UIMObject, IAttribute",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\gui\\uim\\gui\\exceptions\\exception.d": {
		"origin": "module uim.gui.exceptions.exception;\r\rimport uim.gui;\r\r@safe:\r\r// I18n exception.\rclass DGuiException : UIMException {\r  mixin(ExceptionThis!(\"Gui\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-gui\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Gui\"));\r\runittest {\r  testException(GuiException);\r}\r",
		"isFinal": false,
		"package": "uim.gui.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.gui.exceptions.exception;\r\rimport uim.gui;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.gui.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-gui",
		"header": "module uim.gui.exceptions.exception;\r\rimport uim.gui;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\configurations\\memory.d": {
		"origin": "class DMemoryConfiguration : DConfiguration {\r",
		"isFinal": false,
		"package": "uim.oop.configurations",
		"visibility": "public",
		"comments": [],
		"name": "DMemoryConfiguration",
		"isAbstract": false,
		"namespace": "uim.oop.configurations.memory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DConfiguration"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DMemoryConfiguration : DConfiguration",
		"parent": "DConfiguration"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\controllers\\uim\\controllers\\classes\\controllers\\controller.d": {
		"origin": "class DController : UIMObject, IController {",
		"isFinal": false,
		"package": "uim.controllers.classes.controllers",
		"visibility": "public",
		"comments": [],
		"name": "DController",
		"isAbstract": false,
		"namespace": "uim.controllers.classes.controllers.controller",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IController"
		],
		"isStatic": false,
		"library": "uim-controllers",
		"header": "DController : UIMObject, IController",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\map.d": {
		"origin": "class DH5Map : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Map",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Map : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\dt.d": {
		"origin": "class DH5Dt : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Dt",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Dt : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\i.d": {
		"origin": "class DH5I : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <i> tag - represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, taxonomical designations, among others."
		],
		"name": "DH5I",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5I : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\connectionhelper.d": {
		"origin": "class DConnectionHelper {\r",
		"isFinal": false,
		"package": "uim.oop.tests",
		"visibility": "public",
		"comments": [
			"",
			"Helper for managing test connections",
			"",
			"@internal",
			""
		],
		"name": "DConnectionHelper",
		"isAbstract": false,
		"namespace": "uim.oop.tests.connectionhelper",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DConnectionHelper",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\declaration.d": {
		"origin": "module uim.css.declaration;\r\rimport uim.css;\r@safe:\r\rclass DCSSDeclaration : DCSSObj {\r  this() { super(); }\r  this(string aName) { this.name(aName); }\r  this(string aName, string aValue) { this.name(aName).value(aValue); }\r\r  override protected void _init() { super._init; }\r\r  mixin(OProperty!(\"string\", \"name\"));\r  mixin(OProperty!(\"string\", \"value\"));\r\ralias opEquals = Object.opEquals;\r  bool opEquals(string css) { return toString == css; }\r  bool opEquals(DCSSDeclaration obj) { return toString == obj.toString; }\r\r  override string toString() {\r    return name~\": \"~value;\r  }\r}\rauto CSSDeclaration() { return new DCSSDeclaration(); }\rauto CSSDeclaration(string aName) { return new DCSSDeclaration(aName); }\rauto CSSDeclaration(string aName, string aValue) { return new DCSSDeclaration(aName,aValue); }\r\rversion(test_uim_css) { unittest {\r    assert(CSSDeclaration(\"background-color\", \"lightgreen\") == \"background-color:lightgreen\"); }}\r",
		"isFinal": false,
		"package": "uim.css",
		"visibility": "protected",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.declaration;\r\rimport uim.css;\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.declaration",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCSSDeclaration"
		],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.declaration;\r\rimport uim.css;\r@safe:\r\rDCSSDeclaration : DCSSObj \r  this()  super(); }\r  this(string aName)  this.name(aName); }\r  this(string aName, string aValue)  this.name(aName).value(aValue); }\r\r  override void _init()  super._init; }\r\r  mixin(OProperty!(\"string\", \"name\"));\r  mixin(OProperty!(\"string\", \"value\"));\r\ralias opEquals = Object.opEquals;\r  bool opEquals(string css)  return toString == css; }\r  bool opEquals(DCSSDeclaration obj)  return toString == obj.toString; }\r\r  override string toString() \r    return name~\": \"~value;\r  }\r}\rauto CSSDeclaration()  return new DCSSDeclaration(); }\rauto CSSDeclaration(string aName)  return new DCSSDeclaration(aName); }\rauto CSSDeclaration(string aName, string aValue)  return new DCSSDeclaration(aName,aValue); }\r\rversion(test_uim_css)  unittest \r    assert(CSSDeclaration(\"background-color\", \"lightgreen\") == \"background-color:lightgreen\"); }}",
		"parent": "DCSSDeclaration"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\range.d": {
		"origin": "class DH5InputRANGE : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputRANGE",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputRANGE : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\math.d": {
		"origin": "class DH5Math : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Math",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Math : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\optgroup.d": {
		"origin": "class DH5Optgroup : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Optgroup",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Optgroup : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\var.d": {
		"origin": "class DH5Var : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Var",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Var : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\code.d": {
		"origin": "class DH5Code : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for code tag - displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code."
		],
		"name": "DH5Code",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Code : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\td.d": {
		"origin": "class DH5Td : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Td",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Td : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\link.d": {
		"origin": "module uim.filesystems.classes.link;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DLink : DFilesystemEntry, ILink {\r  mixin(FolderThis!(\"Link\"));\r\r  override bool initialize(Json[string] initData = null) { // Hook\r    if (!super.initialize(initData)) {\r      return false;\r    }\r    return true;\r  }\r\r  override bool isLink() {\r    return exists;\r  }\r\r  bool isFileLink() {\r    return false;\r  }\r\r  bool isFolderLink() {\r    return false;\r  }\r\r  override bool exists() {\r    return (hasFilesystem ? filesystem.existsLink(name) : false);\r  }\r\r  override string toString() {\r    return this.classname ~ \": \" ~ name;\r  }\r}\r\r// mixin(FolderCalls!(\"Link\"));\r\runittest {\r  // assert(Link, \"Could not create LInk\");\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.link;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDLink : DFilesystemEntry, ILink \r  mixin(FolderThis!(\"Link\"));\r\r  override bool initialize(Json[string] initData = null)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\q.d": {
		"origin": "class DH5Q : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <q> - indicates that the enclosed text is a short inline quotation."
		],
		"name": "DH5Q",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Q : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\mixins\\properties\\expandable.d": {
		"origin": "  class DTest { mixin(XString!\"a\"); }\r",
		"isFinal": false,
		"package": "uim.oop.mixins.properties",
		"visibility": "public",
		"comments": [],
		"name": "DTest  mixin(XString!\"a\"); }",
		"isAbstract": false,
		"namespace": "uim.oop.mixins.properties.expandable",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTest  mixin(XString!\"a\"); }",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\entitybases\\uim\\entitybases\\exceptions\\exception.d": {
		"origin": "module uim.entitybases.exceptions.exception;\r\rimport uim.entitybases;\r\r@safe:\r\r// Datasource exception.\rclass DEntitybasesException : UIMException {\r  mixin(ExceptionThis!(\"Entitybases\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-entitybases\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Entitybases\"));\r\runittest {\r  testException(EntitybasesException);\r}\r",
		"isFinal": false,
		"package": "uim.entitybases.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.entitybases.exceptions.exception;\r\rimport uim.entitybases;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.entitybases.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-entitybases",
		"header": "module uim.entitybases.exceptions.exception;\r\rimport uim.entitybases;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\package.d": {
		"origin": "class DH5 {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			""
		],
		"name": "DH5",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			},
			"static auto CONTENT()": {
				"origin": "static auto CONTENT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto CONTENT()",
				"isStatic": true
			},
			"static auto AUDIO()": {
				"origin": "static auto AUDIO()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto AUDIO()",
				"isStatic": true
			},
			"static auto NOScript()": {
				"origin": "static auto NOScript()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto NOScript()",
				"isStatic": true
			},
			"static auto TR()": {
				"origin": "static auto TR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TR()",
				"isStatic": true
			},
			"static auto TRACK()": {
				"origin": "static auto TRACK()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TRACK()",
				"isStatic": true
			},
			"static auto STRONG()": {
				"origin": "static auto STRONG()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto STRONG()",
				"isStatic": true
			},
			"static auto H5()": {
				"origin": "static auto H5()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H5()",
				"isStatic": true
			},
			"static auto LINK()": {
				"origin": "static auto LINK()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto LINK()",
				"isStatic": true
			},
			"static auto INS()": {
				"origin": "static auto INS()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto INS()",
				"isStatic": true
			},
			"static auto H1()": {
				"origin": "static auto H1()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H1()",
				"isStatic": true
			},
			"static auto TIME()": {
				"origin": "static auto TIME()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TIME()",
				"isStatic": true
			},
			"static auto SVG()": {
				"origin": "static auto SVG()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SVG()",
				"isStatic": true
			},
			"static auto LI()": {
				"origin": "static auto LI()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto LI()",
				"isStatic": true
			},
			"static auto FORM()": {
				"origin": "static auto FORM()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto FORM()",
				"isStatic": true
			},
			"static auto FOOTER()": {
				"origin": "static auto FOOTER()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto FOOTER()",
				"isStatic": true
			},
			"static auto HTML()": {
				"origin": "static auto HTML()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto HTML()",
				"isStatic": true
			},
			"static auto STYLE()": {
				"origin": "static auto STYLE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto STYLE()",
				"isStatic": true
			},
			"static auto CAPTION()": {
				"origin": "static auto CAPTION()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto CAPTION()",
				"isStatic": true
			},
			"static auto FIGURE()": {
				"origin": "static auto FIGURE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto FIGURE()",
				"isStatic": true
			},
			"static auto VAR()": {
				"origin": "static auto VAR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto VAR()",
				"isStatic": true
			},
			"static auto MAIN()": {
				"origin": "static auto MAIN()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MAIN()",
				"isStatic": true
			},
			"static auto RP()": {
				"origin": "static auto RP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto RP()",
				"isStatic": true
			},
			"static auto TBODY()": {
				"origin": "static auto TBODY()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TBODY()",
				"isStatic": true
			},
			"static auto TFOOT()": {
				"origin": "static auto TFOOT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TFOOT()",
				"isStatic": true
			},
			"static auto MENU()": {
				"origin": "static auto MENU()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MENU()",
				"isStatic": true
			},
			"static auto P()": {
				"origin": "static auto P()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto P()",
				"isStatic": true
			},
			"static auto SUP()": {
				"origin": "static auto SUP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SUP()",
				"isStatic": true
			},
			"static auto DIALOG()": {
				"origin": "static auto DIALOG()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DIALOG()",
				"isStatic": true
			},
			"static auto AREA()": {
				"origin": "static auto AREA()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto AREA()",
				"isStatic": true
			},
			"static auto INPUT()": {
				"origin": "static auto INPUT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto INPUT()",
				"isStatic": true
			},
			"static auto OUTPUT()": {
				"origin": "static auto OUTPUT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto OUTPUT()",
				"isStatic": true
			},
			"static auto MENUITEM()": {
				"origin": "static auto MENUITEM()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MENUITEM()",
				"isStatic": true
			},
			"static auto DD()": {
				"origin": "static auto DD()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DD()",
				"isStatic": true
			},
			"static auto S()": {
				"origin": "static auto S()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto S()",
				"isStatic": true
			},
			"static auto COMMAND()": {
				"origin": "static auto COMMAND()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto COMMAND()",
				"isStatic": true
			},
			"static auto NAV()": {
				"origin": "static auto NAV()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto NAV()",
				"isStatic": true
			},
			"static auto Div()": {
				"origin": "static auto Div()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto Div()",
				"isStatic": true
			},
			"static auto CITE()": {
				"origin": "static auto CITE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto CITE()",
				"isStatic": true
			},
			"static auto IMG()": {
				"origin": "static auto IMG()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto IMG()",
				"isStatic": true
			},
			"static auto MATH()": {
				"origin": "static auto MATH()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MATH()",
				"isStatic": true
			},
			"static auto FIELDSET()": {
				"origin": "static auto FIELDSET()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto FIELDSET()",
				"isStatic": true
			},
			"static auto Button()": {
				"origin": "static auto Button()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto Button()",
				"isStatic": true
			},
			"static auto HEADER()": {
				"origin": "static auto HEADER()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto HEADER()",
				"isStatic": true
			},
			"static auto H4()": {
				"origin": "static auto H4()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H4()",
				"isStatic": true
			},
			"static auto SELECT()": {
				"origin": "static auto SELECT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SELECT()",
				"isStatic": true
			},
			"static auto TABLE()": {
				"origin": "static auto TABLE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TABLE()",
				"isStatic": true
			},
			"static auto HR()": {
				"origin": "static auto HR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto HR()",
				"isStatic": true
			},
			"static auto PICTURE()": {
				"origin": "static auto PICTURE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto PICTURE()",
				"isStatic": true
			},
			"static auto SOURCE()": {
				"origin": "static auto SOURCE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SOURCE()",
				"isStatic": true
			},
			"static auto BODY()": {
				"origin": "static auto BODY()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BODY()",
				"isStatic": true
			},
			"static auto SAMP()": {
				"origin": "static auto SAMP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SAMP()",
				"isStatic": true
			},
			"static auto H3()": {
				"origin": "static auto H3()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H3()",
				"isStatic": true
			},
			"static auto ARTICLE()": {
				"origin": "static auto ARTICLE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto ARTICLE()",
				"isStatic": true
			},
			"static auto METER()": {
				"origin": "static auto METER()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto METER()",
				"isStatic": true
			},
			"static auto TH()": {
				"origin": "static auto TH()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TH()",
				"isStatic": true
			},
			"static auto B()": {
				"origin": "static auto B()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto B()",
				"isStatic": true
			},
			"static auto DETAILS()": {
				"origin": "static auto DETAILS()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DETAILS()",
				"isStatic": true
			},
			"static auto BDO()": {
				"origin": "static auto BDO()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BDO()",
				"isStatic": true
			},
			"static auto OBJECT()": {
				"origin": "static auto OBJECT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto OBJECT()",
				"isStatic": true
			},
			"static auto DFN()": {
				"origin": "static auto DFN()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DFN()",
				"isStatic": true
			},
			"static auto H2()": {
				"origin": "static auto H2()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H2()",
				"isStatic": true
			},
			"static auto SUMMARY()": {
				"origin": "static auto SUMMARY()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SUMMARY()",
				"isStatic": true
			},
			"static auto EMBED()": {
				"origin": "static auto EMBED()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto EMBED()",
				"isStatic": true
			},
			"static auto CANVAS()": {
				"origin": "static auto CANVAS()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto CANVAS()",
				"isStatic": true
			},
			"static auto OPTGROUP()": {
				"origin": "static auto OPTGROUP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto OPTGROUP()",
				"isStatic": true
			},
			"static auto DECORATOR()": {
				"origin": "static auto DECORATOR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DECORATOR()",
				"isStatic": true
			},
			"static auto SHADOW()": {
				"origin": "static auto SHADOW()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SHADOW()",
				"isStatic": true
			},
			"static auto BLOCKQUOTE()": {
				"origin": "static auto BLOCKQUOTE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BLOCKQUOTE()",
				"isStatic": true
			},
			"static auto BR()": {
				"origin": "static auto BR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BR()",
				"isStatic": true
			},
			"static auto MARK()": {
				"origin": "static auto MARK()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MARK()",
				"isStatic": true
			},
			"static auto EM()": {
				"origin": "static auto EM()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto EM()",
				"isStatic": true
			},
			"static auto VIDEO()": {
				"origin": "static auto VIDEO()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto VIDEO()",
				"isStatic": true
			},
			"static auto TITLE()": {
				"origin": "static auto TITLE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TITLE()",
				"isStatic": true
			},
			"static auto OPTION()": {
				"origin": "static auto OPTION()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto OPTION()",
				"isStatic": true
			},
			"static auto LEGEND()": {
				"origin": "static auto LEGEND()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto LEGEND()",
				"isStatic": true
			},
			"static auto TEXTAREA()": {
				"origin": "static auto TEXTAREA()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TEXTAREA()",
				"isStatic": true
			},
			"static auto WBR()": {
				"origin": "static auto WBR()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto WBR()",
				"isStatic": true
			},
			"static auto Script()": {
				"origin": "static auto Script()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto Script()",
				"isStatic": true
			},
			"static auto UL()": {
				"origin": "static auto UL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto UL()",
				"isStatic": true
			},
			"static auto PRE()": {
				"origin": "static auto PRE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto PRE()",
				"isStatic": true
			},
			"static auto U()": {
				"origin": "static auto U()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto U()",
				"isStatic": true
			},
			"static auto META()": {
				"origin": "static auto META()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto META()",
				"isStatic": true
			},
			"static auto BDI()": {
				"origin": "static auto BDI()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BDI()",
				"isStatic": true
			},
			"static auto DT()": {
				"origin": "static auto DT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DT()",
				"isStatic": true
			},
			"static auto BASE()": {
				"origin": "static auto BASE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto BASE()",
				"isStatic": true
			},
			"static auto PARAM()": {
				"origin": "static auto PARAM()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto PARAM()",
				"isStatic": true
			},
			"static auto IFRAME()": {
				"origin": "static auto IFRAME()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto IFRAME()",
				"isStatic": true
			},
			"static auto H6()": {
				"origin": "static auto H6()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto H6()",
				"isStatic": true
			},
			"static auto ADDRESS()": {
				"origin": "static auto ADDRESS()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto ADDRESS()",
				"isStatic": true
			},
			"static auto HEAD()": {
				"origin": "static auto HEAD()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto HEAD()",
				"isStatic": true
			},
			"static auto KBD()": {
				"origin": "static auto KBD()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto KBD()",
				"isStatic": true
			},
			"static auto I()": {
				"origin": "static auto I()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto I()",
				"isStatic": true
			},
			"static auto COLGROUP()": {
				"origin": "static auto COLGROUP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto COLGROUP()",
				"isStatic": true
			},
			"static auto FIGCAPTION()": {
				"origin": "static auto FIGCAPTION()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto FIGCAPTION()",
				"isStatic": true
			},
			"static auto SMALL()": {
				"origin": "static auto SMALL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SMALL()",
				"isStatic": true
			},
			"static auto KEYGEN()": {
				"origin": "static auto KEYGEN()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto KEYGEN()",
				"isStatic": true
			},
			"static auto COL()": {
				"origin": "static auto COL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto COL()",
				"isStatic": true
			},
			"static auto CODE()": {
				"origin": "static auto CODE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto CODE()",
				"isStatic": true
			},
			"static auto DATALIST()": {
				"origin": "static auto DATALIST()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DATALIST()",
				"isStatic": true
			},
			"static auto TD()": {
				"origin": "static auto TD()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto TD()",
				"isStatic": true
			},
			"static auto SUB()": {
				"origin": "static auto SUB()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SUB()",
				"isStatic": true
			},
			"static auto RT()": {
				"origin": "static auto RT()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto RT()",
				"isStatic": true
			},
			"static auto SECTION()": {
				"origin": "static auto SECTION()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SECTION()",
				"isStatic": true
			},
			"static auto RUBY()": {
				"origin": "static auto RUBY()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto RUBY()",
				"isStatic": true
			},
			"static auto DL()": {
				"origin": "static auto DL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DL()",
				"isStatic": true
			},
			"static auto OL()": {
				"origin": "static auto OL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto OL()",
				"isStatic": true
			},
			"static auto DEL()": {
				"origin": "static auto DEL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto DEL()",
				"isStatic": true
			},
			"static auto MAP()": {
				"origin": "static auto MAP()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto MAP()",
				"isStatic": true
			},
			"static auto THEAD()": {
				"origin": "static auto THEAD()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto THEAD()",
				"isStatic": true
			},
			"static auto LABEL()": {
				"origin": "static auto LABEL()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto LABEL()",
				"isStatic": true
			},
			"static auto SPAN()": {
				"origin": "static auto SPAN()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto SPAN()",
				"isStatic": true
			},
			"static auto Q()": {
				"origin": "static auto Q()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto Q()",
				"isStatic": true
			},
			"static auto ASIDE()": {
				"origin": "static auto ASIDE()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto ASIDE()",
				"isStatic": true
			},
			"static auto PROGRESS()": {
				"origin": "static auto PROGRESS()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto PROGRESS()",
				"isStatic": true
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "",
		"header": "DH5",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\classes\\containers\\mediaquery.d": {
		"origin": "module uim.css.classes.containers.mediaquery;\r\rimport uim.css;\r\r@safe:\r\rclass DCSSMediaQuery {\r  this() {\r  }\r\r  this(string newCondition) {\r    this();\r    this\r      .condition(newCondition);\r  }\r\r  mixin(OProperty!(\"string\", \"condition\"));\r\r  protected STRINGAA _rules;\r\r  auto rule(this O)(string selector) {\r    return _rules.get(selector, null);\r  }\r\r  unittest {\r    /// TODO\r  }\r\r  O rule(this O)(string selector, string properties) {\r    _rules[selector] = properties;\r    return cast(O) this;\r  }\r\r  unittest {\r    /// TODO\r  }\r\r  O removeRule(this O)(string selector) {\r    _rules.remove(selector);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      // TODO\r    }\r  }\r\r  auto opIndex(string selector) {\r    return rule(selector);\r  }\r\r  unittest {\r    // TODO\r  }\r\r  O opIndexAssign(this O)(string selector, string properties) {\r    rule(selector, properties);\r    return cast(O) this;\r  }\r\r  unittest {\r    // TODO\r  }\r\r  override string toString() {\r    string result;\r\r    foreach (sel, props; _rules)\r      result ~= sel ~ \"{\" ~ props ~ \"}\";\r\r    return condition\r      ? \"@media \" ~ condition ~ \"{\" ~ result ~ \"}\" : result;\r  }\r\r  unittest {\r    /// TODO\r  }\r}\r\rauto CSSMediaQuery() {\r  return new DCSSMediaQuery;\r}\r\rauto CSSMediaQuery(string condition) {\r  return new DCSSMediaQuery(condition);\r}\r",
		"isFinal": false,
		"package": "uim.css.classes.containers",
		"visibility": "protected",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.classes.containers.mediaquery;\r\rimport uim.css;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.classes.containers.mediaquery",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCSSMediaQuery \r  this() \r  }\r\r  this(string newCondition) \r    this();\r    this\r      .condition(newCondition);\r  }\r\r  mixin(OProperty!(\"string\"",
			"\"condition\"));\r\r  STRINGAA _rules;\r\r  auto rule(this O)(string selector) \r    return _rules.get(selector",
			"null);\r  }\r\r  unittest"
		],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.classes.containers.mediaquery;\r\rimport uim.css;\r\r@safe:\r\rDCSSMediaQuery \r  this() \r  }\r\r  this(string newCondition) \r    this();\r    this\r      .condition(newCondition);\r  }\r\r  mixin(OProperty!(\"string\", \"condition\"));\r\r  STRINGAA _rules;\r\r  auto rule(this O)(string selector) \r    return _rules.get(selector, null);\r  }\r\r  unittest",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\dd.d": {
		"origin": "class DH5Dd : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Dd-Elemente enthalten eine Beschreibung eines zu beschreibenden Ausdrucks in einer Beschreibungsliste (Dd = description list data) */"
		],
		"name": "DH5Dd",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Dd : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\input.d": {
		"origin": "class DH5Input : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Input",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Input : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\database\\link.d": {
		"origin": "module uim.filesystems.classes.database.link;\r\rimport uim.filesystems;\r\runittest {\r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe:\rclass DDatabaseLink : DLink {\r  mixin(LinkThis!(\"Database\"));\r}\r\rmixin(LinkCalls!(\"Database\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.database",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.database.link;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.database.link",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DDatabaseLink"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.database.link;\r\rimport uim.filesystems;\r\runittest \r  writeln(\"-----  \", __MODULE__, \"\\t  -----\");\r}\r\r@safe:\rDDatabaseLink : DLink \r  mixin(LinkThis!(\"Database\"));\r}\r\rmixin(LinkCalls!(\"Database\"));",
		"parent": "DDatabaseLink"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\file.d": {
		"origin": "module uim.filesystems.classes.file;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DFile : DFilesystemEntry, IFile {\r  mixin(FileThis!());\r\r  override bool initialize(Json[string] initData = null) { // Hook\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    return true;\r  }\r\r  // #region inherited properties\r\r  // #region Properties\r  // Returns the folder object for the parent of the specified file.\r  override bool isFile() {\r    return exists;\r  }\r\r  // Check if file exits\r  override bool exists() {\r    if (parentFolder)\r      return parentFolder.existsFolder(path, name);\r    return (hasFilesystem ? filesystem.existsFolder(path, name) : false);\r  }\r\r  // Sets or returns the attributes of a specified file.\r  size_t attributes() {\r    return 0;\r  }\r\r  void attributes(size_t newAttributes) {\r  }\r\r  // Returns the date and time when a specified file was created.\r  long createdOn() {\r    return 0;\r  }\r\r  // Returns the date and time when a specified file was last accessed.\r  long accessedOn() {\r    return 0;\r  }\r\r  // Returns the date and time when a specified file was last modified.\r  long modifiedOn() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return 0;\r  }\r\r  // Returns the drive letter of the drive where a specified file or folder resides.\r  string driveName() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return null;\r  }\r\r  // Returns the type of a specified file.\r  string type() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return null;\r  }\r  // #endregion Properties\r\r  void[] readContent(size_t dataSitze = size_t.max) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return (hasFilesystem ? filesystem.readFromFile(path, name, dataSitze) : null);\r  }\r\r  void writeContent(const void[] content) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    if (hasFilesystem)\r      filesystem.writeToFile(path, name, content);\r  }\r\r  void appendContent(const void[] content) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    if (hasFilesystem)\r      filesystem.appendToFile(path, name, content);\r  }\r\r  string readText() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return (hasFilesystem ? filesystem.readTextFromFile(path, name) : null);\r  }\r\r  void writeText(string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    if (hasFilesystem)\r      filesystem.writeTextToFile(path, name, aText);\r  }\r\r  void appendText(string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    if (hasFilesystem)\r      filesystem.appendTextToFile(path, name, aText);\r  }\r\r  string[] readLines() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return (hasFilesystem ? filesystem.readLines(path, name) : null);\r  }\r\r  Json readJson() {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return Json(null);\r  }\r\r  bool writeJson(Json jsonData) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r\r    return false;\r  }\r\r  // #region Methods\r  // Copies a specified file from one location to another.\r  bool copy(string toPath) {\r    return false;\r  }\r\r  bool copy(string[] toPath) {\r    return false;\r  }\r\r  bool copy(IFolder toFolder) {\r    return false;\r  }\r\r  // Moves file from one location to another.\r  bool move(string toPath) {\r    return false;\r  }\r\r  bool move(string[] toPath) {\r    return false;\r  }\r\r  bool move(IFolder toFolder) {\r    return false;\r  }\r\r  // Deletes file.\r  bool remove() {\r    return (hasFilesystem ? filesystem.removeFile(path, name) : false);\r  }\r\r  override string toString() {\r    return this.classname ~ \": \" ~ name;\r  }\r  // TODO: OpenAsTextStream   Opens a specified file and returns a TextStream object to access the file.\r  // #endregion Methods\r}\r\runittest {\r  // TODO Adding Tests\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.file",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.file;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDFile : DFilesystemEntry, IFile \r  mixin(FileThis!());\r\r  override bool initialize(Json[string] initData = null)",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\body_.d": {
		"origin": "class DH5Body : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Body",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"O scripts(this O)(string[] links)": {
				"origin": "O scripts(this O)(string[] links)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] links",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O scripts(this O)(string[] links)",
				"isStatic": false
			},
			"O script(this O, T...)(T values)": {
				"origin": "O script(this O, T...)(T values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O, T...)(T values",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O script(this O, T...)(T values)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Body : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\sup.d": {
		"origin": "class DH5Sup : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <sup> - specifies inline text which is to be displayed as superscript for solely typographical reasons."
		],
		"name": "DH5Sup",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Sup : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\components\\component.d": {
		"origin": "module uim.html.classes.components.component;\r\rimport uim.html;\r\r@safe:\r\rclass DH5Component {\r  this() {\r    this.css(CSSMediaQueries);\r  }\r\r  mixin(OProperty!(\"DCSSMediaQueries\", \"css\"));\r  mixin(XString!(\"html\"));\r  mixin(XString!(\"js\"));\r\r  override string toString() {\r    string result;\r    result ~= \"<style>\" ~ _css.toString ~ \"<\/style>\";\r    if (html.length > 0)\r      result ~= html;\r    if (js.length > 0)\r      result ~= \"<script>\" ~ _js ~ \"<\/script>\";\r    return \"\";\r  }\r}\r\rauto H5Component() {\r  return new DH5Component();\r}\r\rversion (test_uim_html) {\r  unittest {\r    assert(H5Component);\r  }\r}\r",
		"isFinal": false,
		"package": "uim.html.classes.components",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.components.component;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.components.component",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Component \r  this() \r    this.css(CSSMediaQueries);\r  }\r\r  mixin(OProperty!(\"DCSSMediaQueries\"",
			"\"css\"));\r  mixin(XString!(\"html\"));\r  mixin(XString!(\"js\"));\r\r  override string toString() \r    string result;\r    result ~= \"<style>\" ~ _css.toString ~ \"<\/style>\";\r    if (html.length > 0)\r      result ~= html;\r    if (js.length > 0)\r      result ~= \"<script>\" ~ _js ~ \"<\/script>\";\r    return \"\";\r  }\r}\r\rauto H5Component() \r  return new DH5Component();\r}\r\rversion (test_uim_html) \r  unittest \r    assert(H5Component);\r  }\r}"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.classes.components.component;\r\rimport uim.html;\r\r@safe:\r\rDH5Component \r  this() \r    this.css(CSSMediaQueries);\r  }\r\r  mixin(OProperty!(\"DCSSMediaQueries\", \"css\"));\r  mixin(XString!(\"html\"));\r  mixin(XString!(\"js\"));\r\r  override string toString() \r    string result;\r    result ~= \"<style>\" ~ _css.toString ~ \"<\/style>\";\r    if (html.length > 0)\r      result ~= html;\r    if (js.length > 0)\r      result ~= \"<script>\" ~ _js ~ \"<\/script>\";\r    return \"\";\r  }\r}\r\rauto H5Component() \r  return new DH5Component();\r}\r\rversion (test_uim_html) \r  unittest \r    assert(H5Component);\r  }\r}",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\label.d": {
		"origin": "class DH5Label : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Label",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Label : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\content.d": {
		"origin": "class DH5Content : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Content",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Content : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\exceptions\\exception.d": {
		"origin": "class UIMException : Exception, IException {",
		"isFinal": false,
		"package": "uim.oop.exceptions",
		"visibility": "public",
		"comments": [],
		"name": "UIMException",
		"isAbstract": false,
		"namespace": "uim.oop.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"Exception",
			"IException"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "UIMException : Exception, IException",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\checkbox.d": {
		"origin": "class DH5Checkbox : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Checkbox",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Checkbox : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\parser\\package.d": {
		"origin": "module uim.html.parser;\r\rimport uim.html;\r\r@safe:\r\rsize_t[] posOfAll(string text, string searchTxt) {\r  size_t[] results;\r\r  if (searchTxt.length > 0) {\r    size_t currentPos = 0;\r    while ((currentPos < text.length) && (currentPos >= 0)) {\r      currentPos = text.indexOf(searchTxt, currentPos); // looking for first or next pos\r      if (currentPos == -1)\r        break; // not found\r\r      results ~= currentPos; // found pos and add to results      \r      currentPos += searchTxt.length;\r    }\r  }\r\r  return results;\r}\r\rsize_t[] posOfAll(string text, string searchTxt, size_t startPos, size_t endPos) {\r  size_t[] results;\r\r  if (searchTxt.length > 0) {\r    size_t currentPos = startPos;\r    while ((currentPos < endPos) && (currentPos >= 0)) {\r      currentPos = text.indexOf(searchTxt, currentPos); // looking for first or next pos\r      if (currentPos == -1)\r        break; // not found\r\r      if (currentPos < endPos)\r        results ~= currentPos; // found pos and add to results      \r      currentPos += searchTxt.length;\r    }\r  }\r\r  return results;\r}\r\rversion (test_uim_html) {\r  unittest {\r    writeln(\"x x x x\".posOfAll(\" \", 2, 6));\r    // assert(\"x x x x\".posOfAll(\" \", 2, 6) == [3, 5]);\r  }\r}\r\rstring fillWith(string txt, string addTxt, size_t startPos, size_t endPos) {\r  string result = txt;\r\r  for (size_t i = startPos; (i < endPos) && (i < result.length); i++) {\r    result = result[0 .. i] ~ addTxt ~ result[i + addTxt.length .. $];\r  }\r\r  return result;\r}\r\rclass DH5Node {\r  string txt;\r  bool isRoot = true;\r  bool isContent = false;\r  bool isStartTag = false;\r  bool isEndTag = false;\r  bool hasEndTag = true;\r  size_t startPos;\r  size_t startEnd;\r\r  string _tag;\r  size_t level;\r  DH5Node[] nodes;\r  DH5Node rootNode;\r\r  string _id;\r  string[] _classes;\r  STRINGAA _attributes;\r\r  this() {\r  }\r\r  this(DH5Node myRoot) {\r    this();\r    rootNode = myRoot;\r  }\r\r  this(string myTagName) {\r    this();\r    tag = myTagName;\r  }\r\r  this(DH5Node myRoot, string myTagName) {\r    this();\r    rootNode = myRoot;\r    tag = myTagName;\r  }\r\r  @property auto tag() {\r    return _tag;\r  }\r\r  @property void tag(string newTag) {\r    _tag = newTag.strip;\r  }\r\r  string tagToH5() {\r    return `H5%s`.format(capitalize(_tag));\r  }\r\r  @property auto id() {\r    return _id;\r  }\r\r  @property void id(string newId) {\r    _id = newId.strip;\r  }\r\r  string idToH5() {\r    return `\"%s\"`.format(_id);\r  }\r\r  @property auto classes() {\r    return _classes;\r  }\r\r  @property void classes(string newClasses) {\r    auto items = newClasses.split(\" \");\r    foreach (ref item; items) {\r      item = item.strip;\r    }\r\r    _classes = items.filter!(item => item.length > 0)\r      .map!(item => item)\r      .array;\r  }\r\r  string classesToH5() {\r    return !_classes.isEmpty\r      ? \"[%s]\".format(_classes.map!(cl => `\"%s\"`.format(cl)).join(\", \")) : null;\r  }\r\r  @property auto attributes() {\r    return _attributes;\r  }\r\r  @property void attributes(string[string] newAttributes) {\r    _attributes = newAttributes;\r    if (\"id\" in _attributes) {\r      id = _attributes.shift(\"id\");\r    }\r    if (\"class\" in _attributes) {\r      classes = _attributes.shift(\"class\");\r    }\r  }\r\r  string attributesToH5() {\r    string[] results;\r    return \"[\" ~\r      _attributes.byKeyValue\r      .filter!(attribute => attribute.key.length > 0)\r      .map!(attribute => `\"%s\":%s`.format(attribute.key, (attribute.value.indexOf(`\"`) > -1 ? attribute.value\r          : `\"` ~ attribute.value ~ `\"`)))\r      .join(\",\")\r      ~ \"]\";\r  }\r\r  void setNodes(DH5Node[] newNodes) {\r    auto min = minLevel(newNodes); // writeln(\"MinLevel = \", min, \" --------------\");\r\r    // TODO newNodes.each!(node => writeln(\"%s - %s \".format(node.level, node).indent(node.level * 2)));\r\r    DH5Node[] nodes = null;\r    DH5Node levelNode;\r    DH5Node[] subNodes;\r    newNodes.each!(\r      node => setNode(node, levelNode, nodes, subNodes));\r  }\r\r  void setNode(DH5Node newNode, DH5Node levelNode, DH5Node[] nodes, DH5Node[] subNodes) {\r    if (newNode.level == minLevel(nodes)) {\r      if (newNode.isContent || (newNode.isStartTag && newNode.isEndTag)) { // single node\r        nodes ~= newNode;\r      } else if (newNode.isStartTag) { // start dode \r        levelNode = newNode;\r      } else if (newNode.isEndTag) { // end Node\r        levelNode.setNodes(subNodes);\r        nodes ~= levelNode;\r      }\r      subNodes = null;\r    } else {\r      subNodes ~= newNode;\r    }\r  }\r\r  DH5Obj[] toH5() {\r    if (isRoot)\r      return nodes.map!(node => node.toH5).join;\r    if (isContent)\r      return [H5String(txt)];\r    return isStartTag && isEndTag\r      ? [H5Obj(_attributes)\r        .tag(tag)\r        .single(true)] : [\r        H5Obj(_attributes).tag(tag).content(nodes.toH5)\r      ];\r  }\r\r  string toH5String() {\r    if (isRoot)\r      return nodes.toH5String;\r    if (isContent)\r      return `\"` ~ txt ~ `\"`;\r    string[] tagContent;\r    if (id.length > 0)\r      tagContent ~= idToH5;\r    if (classes.length > 0)\r      tagContent ~= classesToH5;\r    if (attributes.length > 0)\r      tagContent ~= attributesToH5; // writeln(tagContent);\r    if (isStartTag && isEndTag)\r      return \"H5%s(%s)\".format(tag.capitalize, tagContent.join(\",\"));\r\r    if (nodes.length > 0)\r      tagContent ~= nodes.toH5String;\r    return \"H5%s(%s)\".format(tag.capitalize, tagContent\r        .join(\",\"));\r  }\r}\r\rauto H5Node() {\r  return new DH5Node;\r}\r\rauto H5Node(DH5Node myRoot) {\r  return new DH5Node(myRoot);\r}\r\rauto H5Node(string myTagName) {\r  return new DH5Node(myTagName);\r}\r\rauto H5Node(DH5Node myRoot, string myTagName) {\r  return new DH5Node(myRoot, myTagName);\r}\r\rDH5Obj[] toH5(DH5Node[] nodes) {\r  return nodes.map!(node => node.toH5).join;\r}\r\rauto toH5String(DH5Node[] nodes) {\r  return nodes.map!(node => node.toH5String).join(\",\");\r}\r\rsize_t minLevel(DH5Node[] newNodes) {\r  if (newNodes.isEmpty) {\r    return -1;\r  }\r  if (newNodes.length == 1) {\r    return newNodes[0].level;\r  }\r\r  size_t result = newNodes[0].level;\r  newNodes[1 .. $].each!(\r    node => result = min(node.level, result));\r  return result;\r}\r\r/* DH5Node parse(string html) {\r  DH5Node rootNode = H5Node(html);\r\r  auto level1Items = html.replace(\"\\n\", \"\").split(\"<\")[1 ..$];\r  foreach (ref item; level1Items)\r    item = \"<\" ~ item;\r\r  string[] level2Items;\r  foreach (ref item; level1Items) {\r    auto items = item.split(\">\");\r    foreach (ref it; items)\r    {\r      if (it.strip.isEmpty)\r        continue;\r      if (it.indexOf(\"<\") > -1)\r        level2Items ~= it ~ \">\";\r      else\r        level2Items ~= it;\r    }\r  }\r\r  DH5Node[] newNodes;\r  foreach (value; level2Items) {\r    DH5Node node;\r    auto v = value.strip.toLower;\r    if (v.indexOf(\"<\") == -1)\r      node.isContent = true;\r    else if (v.indexOf(\"<\/\") > -1)\r      node.isEndTag = true;\r    else\r    {\r      node.isStartTag = true;\r      if (v.indexOf(\"/>\") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"< \") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"<!doctype\") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"<img\") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"<br\") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"<meta\") > -1)\r        node.isEndTag = true;\r      if (v.indexOf(\"<link\") > -1)\r        node.isEndTag = true;\r    }\r    if (node.isStartTag || node.isEndTag || node.isContent)\r      node.isRoot = false;\r    node.txt = value;\r\r    if (node.isStartTag)\r    {\r      // <xxx> -> xxx / <xxx a=\"b\"> -> xxx a=\"b\"\r      node.tag = node.txt.strip.replace(\"<\", \"\").replace(\">\", \"\").split(\" \")[0];\r      // if ()\r      auto atts = node.txt.strip.replace(\"<\", \"\").replace(\">\", \"\").split(\" \");\r/*      if (atts.length > 1)\r        foreach (a; atts[1 ..$])  node.attribute(a);\r * /    }\r    else if (node.isEndTag)\r      node.tag = node.txt.strip.replace(\"<\/\", \"\").replace(\">\", \"\");\r\r    newNodes ~= node;\r  }\r\r  int counter = 0;\r  foreach (ref node; newNodes) {\r    if (node.isContent)\r    {\r      node.level = counter;\r      continue;\r    }\r    else if ((node.isStartTag) && (node.isEndTag))\r    {\r      node.level = counter;\r      continue;\r    }\r    else if (node.isStartTag)\r    {\r      node.level = counter;\r      counter++;\r      continue;\r    }\r    else if (node.isEndTag)\r    {\r      counter--;\r      node.level = counter;\r      continue;\r    }\r  }\r\r  rootNode.setNodes(newNodes);\r  return rootNode;\r}\r\runittest\r{\r  // // writeln(DH5Node(`<thead><tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr><tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr><\/thead>`));\r  // // writeln(DH5Node(`<tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr><tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr>`));\r  //// writeln(DH5Node(`<thead><tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr><tr><th width=\"1%\">Product<\/th><th>Quantity<\/th><th>Price<\/th><\/tr><\/thead>`).toH5.toPretty);\r\r}\r*/\rauto parse2(string html) {\r  auto startComment = \"<!--\";\r  auto endComment = \"-->\";\r\r  // Step 0: Delete End of Lines\r  auto hLines = html.split(\"\\n\");\r  string[] newLines;\r  foreach (ref line; hLines) {\r    line = line.strip;\r    if (line.length > 0)\r      newLines ~= line;\r  }\r  auto htmlBase = newLines.join(\"\"); // Step 1: Cut out comments\r  debug writeln(\"Step 1: Cut out comments\");\r  size_t commentPos;\r  while (htmlBase.indexOf(startComment, commentPos) > -1) { // has comment <!--\r    auto startCPos = htmlBase.indexOf(startComment, commentPos);\r    if (htmlBase.indexOf(endComment, startCPos + startComment\r        .length) > -1) {\r      auto endCPos = htmlBase.indexOf(endComment, startCPos + startComment\r          .length);\r      htmlBase = htmlBase[0 .. startCPos] ~ htmlBase[endCPos + endComment\r        .length .. $];\r    } else {\r      htmlBase = htmlBase[0 .. startCPos];\r      break;\r    }\r    commentPos = startCPos;\r  }\r\r  // Step 2: Read quotes\r  string htmlMask = htmlBase;\r  debug writeln(\r    \"Step 2: Read quotes\");\r  writeln(\"1\");\r  htmlMask = htmlMask.replace(`\\\"`, \"ss\"); // Replace \"false\" quotes with chars;\r  writeln(\"2\");\r  auto stringIndicators = htmlMask.posOfAll(\r    `\"`); // Now we have all quotes\r  writeln(\"3\");\r  for (size_t i = 0; i < stringIndicators.length - 1; i += 2) {\r    htmlMask = htmlMask.fillWith(\"s\", stringIndicators[i] + 1, stringIndicators[i + 1]);\r  }\r\r  // Step 3: Looking for tag limiter every < has a > if well-formed\r  debug writeln(\"Step 3: Looking for tag limiter\");\r  auto ltIndicators = htmlMask.posOfAll(`<`); // All <\r  auto gtIndicators = htmlMask.posOfAll(`>`); // All >\r\r  // Step 4: Set Nodes and level \r  DH5Node[] nodes;\r  DH5Node rootNode = H5Node;\r  size_t[string] tagLevels;\r  size_t level;\r  DH5Node fokusNode;\r  foreach (index, value; ltIndicators) {\r    DH5Node node = H5Node(rootNode);\r    node.isRoot = false;\r    if (\r      index >= gtIndicators.length) { // Not well-formed :-(\r      break;\r    }\r\r    string tag = htmlMask[ltIndicators[index] .. gtIndicators[index] + 1]; // Should be <tag> or <\/tag> or <tag/>\r    auto tagSpaces = posOfAll(htmlMask, \" \", ltIndicators[index], gtIndicators[index] - 1);\r    writeln(\"tag;\", tag);\r    writeln(tagSpaces);\r\r    auto spacesSeparated = tag.split(\" \"); // separate in spaces if exists \r    auto tagName = \"\";\r    node.level = level;\r    if (tag.indexOf(\"<\/\") == 0) { // is EndTag\r      node.isEndTag = true;\r      tagName = spacesSeparated[0].replace(\r        \"<\/\", \"\").replace(\">\", \"\").strip;\r      rootNode = rootNode.rootNode;\r      if (level > 0)\r        level--;\r    } else {\r      node.isStartTag = true;\r      tagName = spacesSeparated[0].replace(\r        \"<\", \"\").replace(\">\", \"\").strip;\r      switch (tagName) {\r      case \"link\", \"meta\", \"img\", \"input\", \"br\":\r        rootNode.nodes ~= node;\r        break; // same level\r      default:\r        rootNode.nodes ~= node;\r        rootNode = node;\r        level++;\r        break;\r      }\r\r      string[] parameters;\r      STRINGAA attributes;\r      if (tagSpaces) {\r        writeln(\"T:\", htmlBase[ltIndicators[index] + 1 .. tagSpaces[0]]);\r        for (size_t spaceI = 0; spaceI < tagSpaces.length - 1; spaceI += 2) {\r          parameters ~= htmlBase[tagSpaces[spaceI] .. tagSpaces[spaceI + 1]]\r            .strip;\r        }\r        parameters ~= htmlBase[tagSpaces[-1] .. gtIndicators[index]]\r          .strip;\r        writeln(parameters);\r\r        foreach (para; parameters) {\r          if (para.indexOf(\"=\") == -1) {\r            attributes[para] = para;\r          } else {\r            auto pos = para.indexOf(\r              \"=\");\r            attributes[para[0 .. pos]] = para[pos + 2 .. -1];\r          }\r        }\r        writeln(attributes);\r        if (\"id\" in attributes) {\r          node.id(attributes[\"id\"]);\r          attributes.removeKey(\r            \"id\");\r        }\r        if (\"class\" in attributes) {\r          node.classes(\r            attributes[\"class\"]);\r          attributes.removeKey(\r            \"class\");\r        }\r        node.attributes = attributes;\r      }\r      node.level = level;\r    }\r    node.tag(tagName);\r    if ((index < gtIndicators.length) && (\r        index < ltIndicators.length - 1)) {\r      auto content = htmlBase[gtIndicators[index] + 1 .. ltIndicators[index + 1]];\r      if (content) {\r        DH5Node sNode = H5Node(rootNode);\r        sNode.isRoot = false;\r        sNode.isContent = true;\r        sNode.txt = content;\r        sNode.level = level;\r\r        rootNode.nodes ~= sNode;\r      }\r    }\r  }\r\r  return rootNode;\r}\r\runittest {\r  /*  // writeln(`<tag a d>`);\r  // writeln(parse2(`<tag a d>`));\r  // writeln(`<tag a=\"b\" d=\"c\">`);\r  // writeln(parse2(`<tag a=\"b\" d=\"c\">`));\r  // writeln(`<tag>`);\r  // writeln(parse2(`<tag>`));\r */\r  // auto nodes = parse2(readText(\"html.txt\"));\r  // writeln(nodeToH5(nodes.nodes,0));\r\r  // auto f = File(\"h5.txt\", \"w\"); // open for writing\r  // f.write(nodeToH5(nodes.nodes,0));\r}\r\rvoid writelnNodes(DH5Node[] nodes) {\r  foreach (node; nodes) {\r    // writeln(mul(\"    \", node.level), \"\\t\", node.level, \":\", node.tagToH5, \"(\", \"H5String(\\\"\" ~ node.txt.strip ~ \"\\\")\");\r    if (node.nodes)\r      writelnNodes(node.nodes);\r  }\r}\r\rstring intender(string txt, size_t multiple, size_t step = 2) {\r  string result = txt;\r  for (auto i = 0; i < multiple * step; i++)\r    result = \" \" ~ result;\r\r  return result;\r}\r\rstring nodeToH5(DH5Node[] nodes, size_t level) {\r  string[] results;\r\r  if ((nodes.length == 1) && nodes[0]\r    .isContent) {\r    results ~= ((nodes[0].txt.length > 0) ? \"\\\"%s\\\"\"\r        .format(nodes[0].txt) : \"\");\r    nodes = null;\r  } else {\r    foreach (node; nodes) {\r      auto result = node.isContent && node.txt.length > 0\r        ? nodeToH5(node, level) : nodeToH5(node, level);\r\r      if (result.length > 0)\r        results ~= intender(\"\\n\" ~ result, level);\r    }\r  }\r  return results.join(\",\").replace(\",)\", \")\")\r    .replace(\",]\", \"]\").replace(\"\\\"\\\",\", \",\");\r  /*  auto xxxLines = xxx.split(\"\\n\"); \r  string[] newLines;\r  foreach(line; xxxLines) if (line.strip.length > 0) newLines ~= line; // use only not empty lines\r  return newLines.join(\"\\n\");\r */\r}\r\rstring nodeToH5(DH5Node node, size_t level) {\r  string result;\r  if (node.isStartTag) {\r    string[] vals;\r    if (\r      node.id.strip.length > 0)\r      vals ~= node.idToH5;\r    if (node.classes.length > 0)\r      vals ~= node\r        .classesToH5;\r    if (\r      node.attributes) {\r      string[] ats = node.attributes.byKeyValue\r        .map!(kv => \"\\\"%s\\\":\\\"%s\\\"\".format(\r            kv.key.strip, kv.value\r            .strip)).array;\r      if (ats)\r        vals ~= \"[\" ~ ats.join(\r          \",\") ~ \"]\";\r    }\r    if (node.nodes)\r      vals ~= nodeToH5(node.nodes, level + 1);\r    else if (node.txt.length > 0)\r      vals ~= \"\\\"\" ~ node.txt ~ \"\\\"\";\r\r    result ~= intender(\"H5\" ~ capitalize(\r        node.tag) ~ \"(%s\\n\".format(vals.join(\",\")) ~ \")\", to!size_t(\r        level));\r  } else if ((node.isContent) && (\r      node.txt.length > 0)) {\r    result ~= intender(node.txt.length > 0 ? \"H5String(\\\"%s\\\")\".format(node.txt) : \"\", to!size_t(\r        level));\r  }\r\r  return result;\r}\r",
		"isFinal": false,
		"package": "uim.html",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.parser;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.parser",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"size_t[] posOfAll(string text",
			"string searchTxt) \r  size_t[] results;\r\r  if (searchTxt.length > 0) \r    size_t currentPos = 0;\r    while ((currentPos < text.length) && (currentPos >= 0)) \r      currentPos = text.indexOf(searchTxt",
			"currentPos);"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.parser;\r\rimport uim.html;\r\r@safe:\r\rsize_t[] posOfAll(string text, string searchTxt) \r  size_t[] results;\r\r  if (searchTxt.length > 0) \r    size_t currentPos = 0;\r    while ((currentPos < text.length) && (currentPos >= 0)) \r      currentPos = text.indexOf(searchTxt, currentPos);",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\bases\\base.d": {
		"origin": "class DJsonBase : UIMObject, IJsonBase, IJsonTenantManager {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.bases",
		"visibility": "public",
		"comments": [],
		"name": "DJsonBase",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.bases.base",
		"isInherited": false,
		"methods": {
			"bool deleteTenant(string aName)": {
				"origin": "bool deleteTenant(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool deleteTenant(string aName)",
				"isStatic": false
			},
			"bool addTenants(IJsonTenant[string] someTenants)": {
				"origin": "bool addTenants(IJsonTenant[string] someTenants)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "IJsonTenant[string] someTenants",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool addTenants(IJsonTenant[string] someTenants)",
				"isStatic": false
			},
			"bool deleteTenants(string[] someNames)": {
				"origin": "bool deleteTenants(string[] someNames)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool deleteTenants(string[] someNames)",
				"isStatic": false
			},
			"bool hasTenant(string aName)": {
				"origin": "bool hasTenant(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasTenant(string aName)",
				"isStatic": false
			},
			"IJsonTenant createTenant(string aName)": {
				"origin": "IJsonTenant createTenant(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName",
				"visibility": "public",
				"datatype": "IJsonTenant",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IJsonTenant createTenant(string aName)",
				"isStatic": false
			},
			"string[] existingTenants(string[] someNames = null)": {
				"origin": "string[] existingTenants(string[] someNames = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames = null",
				"visibility": "public",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] existingTenants(string[] someNames = null)",
				"isStatic": false
			},
			"version (test_uim_jsonbase)": {
				"origin": "version (test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_jsonbase",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_jsonbase)",
				"isStatic": false
			},
			"IJsonTenant[] tenants()": {
				"origin": "IJsonTenant[] tenants()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "IJsonTenant[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IJsonTenant[] tenants()",
				"isStatic": false
			},
			"bool deleteTenants(string[] someNames...)": {
				"origin": "bool deleteTenants(string[] someNames...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool deleteTenants(string[] someNames...)",
				"isStatic": false
			},
			"bool addTenant(IJsonTenant aTenant)": {
				"origin": "bool addTenant(IJsonTenant aTenant)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "IJsonTenant aTenant",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool addTenant(IJsonTenant aTenant)",
				"isStatic": false
			},
			"bool hasTenants(string[] someNames...)": {
				"origin": "bool hasTenants(string[] someNames...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasTenants(string[] someNames...)",
				"isStatic": false
			},
			"bool hasTenants(string[] someNames = null)": {
				"origin": "bool hasTenants(string[] someNames = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames = null",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool hasTenants(string[] someNames = null)",
				"isStatic": false
			},
			"size_t countTenants(string[] someNames...)": {
				"origin": "size_t countTenants(string[] someNames...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames...",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "size_t countTenants(string[] someNames...)",
				"isStatic": false
			},
			"string[] tenantNames()": {
				"origin": "string[] tenantNames()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] tenantNames()",
				"isStatic": false
			},
			"IJsonTenant[] createTenants(string[] someNames...)": {
				"origin": "IJsonTenant[] createTenants(string[] someNames...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames...",
				"visibility": "public",
				"datatype": "IJsonTenant[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IJsonTenant[] createTenants(string[] someNames...)",
				"isStatic": false
			},
			"bool addTenants(IJsonTenant[] someTenants)": {
				"origin": "bool addTenants(IJsonTenant[] someTenants)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "IJsonTenant[] someTenants",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool addTenants(IJsonTenant[] someTenants)",
				"isStatic": false
			},
			"IJsonTenant tenant(string aName)": {
				"origin": "IJsonTenant tenant(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName",
				"visibility": "public",
				"datatype": "IJsonTenant",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IJsonTenant tenant(string aName)",
				"isStatic": false
			},
			"size_t countTenants(string[] someNames = null)": {
				"origin": "size_t countTenants(string[] someNames = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames = null",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "size_t countTenants(string[] someNames = null)",
				"isStatic": false
			},
			"IJsonTenant[] createTenants(string[] someNames)": {
				"origin": "IJsonTenant[] createTenants(string[] someNames)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames",
				"visibility": "public",
				"datatype": "IJsonTenant[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "IJsonTenant[] createTenants(string[] someNames)",
				"isStatic": false
			},
			"bool addTenants(IJsonTenant[] someTenants...)": {
				"origin": "bool addTenants(IJsonTenant[] someTenants...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "IJsonTenant[] someTenants...",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool addTenants(IJsonTenant[] someTenants...)",
				"isStatic": false
			},
			"string[] existingTenants(string[] someNames...)": {
				"origin": "string[] existingTenants(string[] someNames...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[] someNames...",
				"visibility": "public",
				"datatype": "string[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string[] existingTenants(string[] someNames...)",
				"isStatic": false
			},
			"bool addTenant(string aName, IJsonTenant aTenant)": {
				"origin": "bool addTenant(string aName, IJsonTenant aTenant)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string aName, IJsonTenant aTenant",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool addTenant(string aName, IJsonTenant aTenant)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IJsonBase",
			"IJsonTenantManager"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DJsonBase : UIMObject, IJsonBase, IJsonTenantManager",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\apps\\uim\\apps\\classes\\applications\\application.d": {
		"origin": "class DApplication : UIMObject, IApplication {\r",
		"isFinal": false,
		"package": "uim.apps.classes.applications",
		"visibility": "public",
		"comments": [],
		"name": "DApplication",
		"isAbstract": false,
		"namespace": "uim.apps.classes.applications.application",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IApplication"
		],
		"isStatic": false,
		"library": "uim-apps",
		"header": "DApplication : UIMObject, IApplication",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\html.d": {
		"origin": "class DH5Html : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"",
			"DH5Html - Wrapper for the html-Element",
			"Das html-Element, auch root(-Element) oder Wurzelelement enthält den vollständigen Inhalt einer Internetseite.",
			"Date: January 09, 2015",
			""
		],
		"name": "DH5Html",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"": {
				"origin": "",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "",
				"isStatic": false
			},
			"auto body_(this O)(DH5Obj[] addContent)": {
				"origin": "auto body_(this O)(DH5Obj[] addContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] addContent",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(DH5Obj[] addContent)",
				"isStatic": false
			},
			"auto body_(this O)(string[string] attributes)": {
				"origin": "auto body_(this O)(string[string] attributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] attributes",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(string[string] attributes)",
				"isStatic": false
			},
			"auto body_(this O)(string addContent)": {
				"origin": "auto body_(this O)(string addContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string addContent",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(string addContent)",
				"isStatic": false
			},
			"void opBinary(string op, T...)(T values)": {
				"origin": "void opBinary(string op, T...)(T values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string op, T...)(T values",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void opBinary(string op, T...)(T values)",
				"isStatic": false
			},
			"auto body_(this O)(string[] classes)": {
				"origin": "auto body_(this O)(string[] classes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] classes",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(string[] classes)",
				"isStatic": false
			},
			"auto head(this O)(string[] classes)": {
				"origin": "auto head(this O)(string[] classes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] classes",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto head(this O)(string[] classes)",
				"isStatic": false
			},
			"auto body_(this O)(string[] classes, string[string] attributes)": {
				"origin": "auto body_(this O)(string[] classes, string[string] attributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[] classes, string[string] attributes",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(string[] classes, string[string] attributes)",
				"isStatic": false
			},
			"auto head(this O)(string addContent)": {
				"origin": "auto head(this O)(string addContent)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string addContent",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto head(this O)(string addContent)",
				"isStatic": false
			},
			"O script(this O, T...)(T values)": {
				"origin": "O script(this O, T...)(T values)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O, T...)(T values",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O script(this O, T...)(T values)",
				"isStatic": false
			},
			"auto body_(this O)(DH5Obj[] addContent...)": {
				"origin": "auto body_(this O)(DH5Obj[] addContent...)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DH5Obj[] addContent...",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto body_(this O)(DH5Obj[] addContent...)",
				"isStatic": false
			},
			"auto head(this O)(string[string] attributes)": {
				"origin": "auto head(this O)(string[string] attributes)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] attributes",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto head(this O)(string[string] attributes)",
				"isStatic": false
			},
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"override bool initialize()": {
				"origin": "override bool initialize()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool initialize()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Html : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\hidden.d": {
		"origin": "class DH5InputHidden : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputHidden",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputHidden : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\file.d": {
		"origin": "class DH5InputFile : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputFile",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputFile : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\slot.d": {
		"origin": "class DH5Slot : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			""
		],
		"name": "DH5Slot",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Slot : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\classes\\containers\\mediaqueries.d": {
		"origin": "module uim.css.classes.containers.mediaqueries;\r\rimport uim.css;\r\r@safe:\r\rclass DCSSMediaQueries {\r  this() {\r    _queries[\"default\"] = CSSMediaQuery;\r  }\r\r  protected DCSSMediaQuery[string] _queries;\r\r  auto query(string queryName = null) {\r    return queryName\r      ? _queries.get(queryName, null) : _queries.get(\"default\", null);\r  }\r\r  unittest {\r    /// TODO\r  }\r\r  O query(this O)(string queryName, string condition) {\r    if (!_queries.hasKey(queryName))\r      _queries[queryName] = CSSMediaQuery(condition);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  auto rule(this O)(string ruleName) {\r    return query(\"default\").rule(ruleName, properties);\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  O rule(this O)(string name, string properties) {\r    query(\"default\").rule(name, properties);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  O rule(this O)(string queryName, string ruleName, string properties) {\r    if (_queries.hasKey(queryName))\r      _queries[query].rule(ruleName, properties);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  O removeRule(this O)(string name) {\r    _queries[\"default\"].removeRule(name);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  O removeRule(this O)(string queryName, string ruleName) {\r    if (_queries.hasKey(queryName))\r      _queries[queryName].removeRule(ruleName);\r    return cast(O) this;\r  }\r\r  version (test_uim_css) {\r    unittest {\r      /// TODO\r    }\r  }\r\r  override string toString() {\r    return _queries.byValue\r      .filter!(query => query !is null)\r      .map!(query => query.toString)\r      .join;\r  }\r\r  unittest {\r    /// TODO\r  }\r\r  string toString(string[] queryNames) {\r    return _queries.byValue\r      .map!(query => query.toString).join;\r  }\r\r  unittest {\r    /// TODO\r  }\r}\r\rauto CSSMediaQueries() {\r  return new DCSSMediaQueries;\r}\r",
		"isFinal": false,
		"package": "uim.css.classes.containers",
		"visibility": "protected",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.classes.containers.mediaqueries;\r\rimport uim.css;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.classes.containers.mediaqueries",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DCSSMediaQueries \r  this() \r    _queries[\"default\"] = CSSMediaQuery;\r  }\r\r  DCSSMediaQuery[string] _queries;\r\r  auto query(string queryName = null) \r    return queryName\r      ? _queries.get(queryName",
			"null)"
		],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.classes.containers.mediaqueries;\r\rimport uim.css;\r\r@safe:\r\rDCSSMediaQueries \r  this() \r    _queries[\"default\"] = CSSMediaQuery;\r  }\r\r  DCSSMediaQuery[string] _queries;\r\r  auto query(string queryName = null) \r    return queryName\r      ? _queries.get(queryName, null) : _queries.get(\"default\", null);\r  }\r\r  unittest",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\link.d": {
		"origin": "class DH5Link : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Link",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"O styleSheet(this O)(bool mode = true)": {
				"origin": "O styleSheet(this O)(bool mode = true)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool mode = true",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O styleSheet(this O)(bool mode = true)",
				"isStatic": false
			},
			"O icon(this O)(bool mode = true)": {
				"origin": "O icon(this O)(bool mode = true)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(bool mode = true",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O icon(this O)(bool mode = true)",
				"isStatic": false
			},
			"bool isStyleSheet()": {
				"origin": "bool isStyleSheet()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isStyleSheet()",
				"isStatic": false
			},
			"bool isIcon()": {
				"origin": "bool isIcon()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool isIcon()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Link : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\figure.d": {
		"origin": "class DH5Figure : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the figure tag - represents self-contained content, potentially with an optional caption, which is specified using the <figcaption> element."
		],
		"name": "DH5Figure",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Figure : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\article.d": {
		"origin": "class DH5Article : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <article> - represents a self-contained composition in a document, page, application, or site,",
			"which is intended to be independently distributable or reusable (e.g., in syndication)"
		],
		"name": "DH5Article",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Article : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\menu.d": {
		"origin": "class DH5Menu : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Menu",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Menu : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\p.d": {
		"origin": "class DH5P : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5P",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5P : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\script.d": {
		"origin": "class DH5Script : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Script",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override string renderJS(string[string] bindings = null)": {
				"origin": "override string renderJS(string[string] bindings = null)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] bindings = null",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string renderJS(string[string] bindings = null)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Script : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\errors\\factory.d": {
		"origin": "class DErrorFactory : DFactory!UIMError {",
		"isFinal": false,
		"package": "uim.oop.errors",
		"visibility": "public",
		"comments": [],
		"name": "DErrorFactory",
		"isAbstract": false,
		"namespace": "uim.oop.errors.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!UIMError"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DErrorFactory : DFactory!UIMError",
		"parent": "DFactory!UIMError"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\meta.d": {
		"origin": "class DH5Meta : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Meta",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Meta : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\schemaloader.d": {
		"origin": "class DSchemaLoader {",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"",
			"Create test database schema from one or more SQL dump files.",
			"",
			"This class DCan be useful to create test database schema when",
			"your schema is managed by tools external to your UIM",
			"application.",
			"",
			"It is not well suited for applications/plugins that need to",
			"support multiple database platforms. You should use migrations",
			"for that instead.",
			""
		],
		"name": "DSchemaLoader",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.schemaloader",
		"isInherited": false,
		"methods": {
			"void loadInternalFile(string schemaFile, string connectionName = \"test\")": {
				"origin": "void loadInternalFile(string schemaFile, string connectionName = \"test\")",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string schemaFile, string connectionName = \"test\"",
				"visibility": "public",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "void loadInternalFile(string schemaFile, string connectionName = \"test\")",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DSchemaLoader",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\media.d": {
		"origin": "class DCSSMedia : DCSSRules {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DCSSMedia",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override protected void _init()": {
				"origin": "override protected void _init()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "protected",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "void _init()",
				"isStatic": false
			},
			"this(string aName, DCSSRules aRules)": {
				"origin": "this(string aName, DCSSRules aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aName, DCSSRules aRules)",
				"isStatic": false
			},
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"this(string aName)": {
				"origin": "this(string aName)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aName)",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"this(string aName, DCSSRule[] someRules)": {
				"origin": "this(string aName, DCSSRule[] someRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aName, DCSSRule[] someRules)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DCSSRules"
		],
		"isStatic": false,
		"library": "",
		"header": "DCSSMedia : DCSSRules",
		"parent": "DCSSRules"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\components\\sidebar_dropdown.d": {
		"origin": "module uim.html.classes.components.sidebar_dropdown;\r\rimport uim.html;\r\r@safe:\r\rclass DH5SidebarDropdown : DH5Component {\r  this() {\r    super();\r    css.query\r      .rule(\"body\", `font-family: \"Lato\", sans-serif;`) /* Fixed sidenav, full height */\r      .rule(\".sidenav\", `height: 100%; width: 200px; position: fixed; z-index: 1; top: 0; left: 0; background-color: #111; overflow-x: hidden;` ~\r          `padding-top: 20px;`) /* Style the sidenav links and the dropdown button */\r      .rule(\".sidenav a, .dropdown-btn\", `padding: 6px 8px 6px 16px; text-decoration: none; font-size: 20px; color: #818181; display: block;` ~\r          `border: none; background: none; width: 100%; text-align: left; cursor: pointer; outline: none;`) /* On mouse-over */\r      .rule(\".sidenav a:hover, .dropdown-btn:hover\", \"color: #f1f1f1;\") /* Main content */\r      .rule(\".main\", `margin-left: 200px;` ~  /* Same as the width of the sidenav */\r          `font-size: 20px;` ~  /* Increased text to enable scrolling */\r          `padding: 0px 10px;`) /* Add an active class to the active dropdown button */\r      .rule(\".active\", \"background-color: green;color: white;\") /* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */\r      .rule(\".dropdown-container\", `display: none; background-color: #262626; padding-left: 8px;`) /* Optional: Style the caret down icon */\r      .rule(\".fa-caret-down\", \"float: right;padding-right: 8px;\");\r\r    /* Some media queries for responsiveness */\r    css\r      .query(\"max450\", \"screen and (max-height: 450px)\")\r      .rule(\".sidenav\", \"padding-top: 15px;\")\r      .rule(\".sidenav a\", \"font-size: 18px;\");\r\r    /* }`)\r.html(`<dclassiv class=\"sidenav\">\r  <a href=\"#about\">About<\/a>\r  <a href=\"#services\">Services<\/a>\r  <a href=\"#clients\">Clients<\/a>\r  <a href=\"#contact\">Contact<\/a>\r  <button class=\"dropdown-btn\">Dropdown \r    <i class=\"fa fa-caret-down\"><\/i>\r  <\/button>\r  <div class=\"dropdown-container\">\r    <a href=\"#\">Link 1<\/a>\r    <a href=\"#\">Link 2<\/a>\r    <a href=\"#\">Link 3<\/a>\r  <\/div>\r  <a href=\"#contact\">Search<\/a>\r<\/div>\r\r<div class=\"main\">\r  <h2>Sidebar Dropdown<\/h2>\r  <p>Click on the dropdown button to open the dropdown menu inside the side navigation.<\/p>\r  <p>This sidebar is of full height (100%) and always shown.<\/p>\r  <p>Some random text..<\/p>\r<\/div>`)\r.js(`* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */\r    /*var dropdown = document.getElementsByclassname(\"dropdown-btn\");\rvar i;\r\rfor (i = 0; i < dropdown.length; i++) {\r  dropdown[i].adIEventListener(\"click\", function() {\r  this.classList.toggle(\"active\");\r  var dropdownContent = this.nextElementSibling;\r  if (dropdownContent.style.display === \"block\") {\r  dropdownContent.style.display = \"none\";\r  } else {\r  dropdownContent.style.display = \"block\";\r  }\r  });\r}`); */\r  }\r}\r\rauto H5SidebarDropdown() {\r  return new DH5SidebarDropdown();\r}\r",
		"isFinal": false,
		"package": "uim.html.classes.components",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.html.classes.components.sidebar_dropdown;\r\rimport uim.html;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.html.classes.components.sidebar_dropdown",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5SidebarDropdown"
		],
		"isStatic": false,
		"library": "uim-html",
		"header": "module uim.html.classes.components.sidebar_dropdown;\r\rimport uim.html;\r\r@safe:\r\rDH5SidebarDropdown : DH5Component \r  this() \r    super();\r    css.query\r      .rule(\"body\", `font-family: \"Lato\", sans-serif;`) /* Fixed sidenav, full height */\r      .rule(\".sidenav\", `height: 100%; width: 200px; position: fixed; z-index: 1; top: 0; left: 0; background-color: #111; overflow-x: hidden;` ~\r          `padding-top: 20px;`) /* Style the sidenav links and the dropdown button */\r      .rule(\".sidenav a, .dropdown-btn\", `padding: 6px 8px 6px 16px; text-decoration: none; font-size: 20px; color: #818181; display: block;` ~\r          `border: none; background: none; width: 100%; text-align: left; cursor: pointer; outline: none;`) /* On mouse-over */\r      .rule(\".sidenav a:hover, .dropdown-btn:hover\", \"color: #f1f1f1;\") /* Main content */\r      .rule(\".main\", `margin-left: 200px;` ~  /* Same as the width of the sidenav */\r          `font-size: 20px;` ~  /* Increased text to enable scrolling */\r          `padding: 0px 10px;`) /* Add an active to the active dropdown button */\r      .rule(\".active\", \"background-color: green;color: white;\") /* Dropdown container (hidden by default). Optional: add a lighter background color and some left padding to change the design of the dropdown content */\r      .rule(\".dropdown-container\", `display: none; background-color: #262626; padding-left: 8px;`) /* Optional: Style the caret down icon */\r      .rule(\".fa-caret-down\", \"float: right;padding-right: 8px;\");\r\r    /* Some media queries for responsiveness */\r    css\r      .query(\"max450\", \"screen and (max-height: 450px)\")\r      .rule(\".sidenav\", \"padding-top: 15px;\")\r      .rule(\".sidenav a\", \"font-size: 18px;\");\r\r    /* }`)\r.html(`<dclassiv class=\"sidenav\">\r  <a href=\"#about\">About<\/a>\r  <a href=\"#services\">Services<\/a>\r  <a href=\"#clients\">Clients<\/a>\r  <a href=\"#contact\">Contact<\/a>\r  <button class=\"dropdown-btn\">Dropdown \r    <i class=\"fa fa-caret-down\"><\/i>\r  <\/button>\r  <div class=\"dropdown-container\">\r    <a href=\"#\">Link 1<\/a>\r    <a href=\"#\">Link 2<\/a>\r    <a href=\"#\">Link 3<\/a>\r  <\/div>\r  <a href=\"#contact\">Search<\/a>\r<\/div>\r\r<div class=\"main\">\r  <h2>Sidebar Dropdown<\/h2>\r  <p>Click on the dropdown button to open the dropdown menu inside the side navigation.<\/p>\r  <p>This sidebar is of full height (100%) and always shown.<\/p>\r  <p>Some random text..<\/p>\r<\/div>`)\r.js(`* Loop through all dropdown buttons to toggle between hiding and showing its dropdown content - This allows the user to have multiple dropdowns without any conflict */\r    /*var dropdown = document.getElementsByclassname(\"dropdown-btn\");\rvar i;\r\rfor (i = 0; i < dropdown.length; i++) \r  dropdown[i].adIEventListener(\"click\", function() \r  this.classList.toggle(\"active\");\r  var dropdownContent = this.nextElementSibling;\r  if (dropdownContent.style.display === \"block\") \r  dropdownContent.style.display = \"none\";\r  } else \r  dropdownContent.style.display = \"block\";\r  }\r  });\r}`); */\r  }\r}\r\rauto H5SidebarDropdown() \r  return new DH5SidebarDropdown();\r}",
		"parent": "DH5SidebarDropdown"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\virtual\\folder.d": {
		"origin": "module uim.filesystems.classes.virtual.folder;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\r\rclass DVirtualFolder : DFolder {\r  mixin(FolderThis!(\"Virtual\"));\r\r  // #region files\r  protected IFile[string] _files;\r\r  alias files = DFolder.files;\r  override IFile[] files(string arelPath = null) {\r    return _files.values.dup;\r  }\r\r  bool addFiles(IFile[] someFiles...) {\r    return addFiles(someFiles.dup);\r  }\r\r  bool addFiles(IFile[] someFiles) {\r    if (someFiles.isEmpty) {\r      return false;\r    }\r\r    return someFiles.all!(file => addFile(file));\r  }\r\r  override bool addFile(IFile aFile) {\r    if (aFile) {\r      aFile.parentFolder(this);\r      _files[aFile.name] = aFile;\r      return true;\r    }\r    return false;\r  }\r  // #endregion files\r\r  protected IFolder _parentFolder;\r  override IFolder parentFolder() {\r    return _parentFolder;\r  }\r\r  // # region Folders\r  alias folders = DFolder.folders;\r  protected IFolder[string] _folders;\r\r  /*   /* override */\r  IFolder[] folders(bool includingHiddenFolders = false) {\r    if (includingHiddenFolders) {\r      return _folders.values.dup;\r    }\r    // Without hidden folders\r    return _folders.values.filter!(folder => !folder.isHidden /* (\"\") */ ).array;\r  }\r\r  override bool addFolder(IFolder aFolder) {\r    return (aFolder ? () { _folders[aFolder.name] = aFolder; return true; }() : false);\r  }\r\r  bool removeFolder() {\r    return false;\r  }\r  // #endregion Folders\r}\r\rmixin(FolderCalls!(\"Virtual\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.virtual",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.virtual.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.virtual.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.virtual.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\r\rDVirtualFolder : DFolder \r  mixin(FolderThis!(\"Virtual\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\rules.d": {
		"origin": "class DCSSRules : DCSSObj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DCSSRules",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"this(DCSSRules aRules)": {
				"origin": "this(DCSSRules aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(DCSSRules",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(DCSSRules aRules)",
				"isStatic": false
			},
			"auto find(string selector)": {
				"origin": "auto find(string selector)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string selector",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto find(string selector)",
				"isStatic": false
			},
			"DCSSRule[] rules()": {
				"origin": "DCSSRule[] rules()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "DCSSRule[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "DCSSRule[] rules()",
				"isStatic": false
			},
			"O add(this O)(DCSSRules aRules)": {
				"origin": "O add(this O)(DCSSRules aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRules aRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DCSSRules aRules)",
				"isStatic": false
			},
			"O add(this O)(DCSSRule aRule)": {
				"origin": "O add(this O)(DCSSRule aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DCSSRule aRule)",
				"isStatic": false
			},
			"o sub(this O)(string selector)": {
				"origin": "o sub(this O)(string selector)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string selector",
				"visibility": "public",
				"datatype": "o",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "o sub(this O)(string selector)",
				"isStatic": false
			},
			"override protected void _init()": {
				"origin": "override protected void _init()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "protected",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "void _init()",
				"isStatic": false
			},
			"assert(CSSRules.rule(CSSRule(\"body\", [\"background-color\": \"lightgreen\"])) == \"body": {
				"origin": "assert(CSSRules.rule(CSSRule(\"body\", [\"background-color\": \"lightgreen\"])) == \"body",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "assert(CSSRules.rule(CSSRule(\"body\",",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "assert(CSSRules.rule(CSSRule(\"body\", [\"background-color\": \"lightgreen\"])) == \"body",
				"isStatic": false
			},
			"O opCall(this O)(DCSSRule aRule)": {
				"origin": "O opCall(this O)(DCSSRule aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DCSSRule aRule)",
				"isStatic": false
			},
			"O rule(this O)(string aSelector, string name, string value)": {
				"origin": "O rule(this O)(string aSelector, string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string name, string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rule(this O)(string aSelector, string name, string value)",
				"isStatic": false
			},
			"O rules(this O)(DCSSRule[] someRules)": {
				"origin": "O rules(this O)(DCSSRule[] someRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule[] someRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rules(this O)(DCSSRule[] someRules)",
				"isStatic": false
			},
			"bool opEquals(string css)": {
				"origin": "bool opEquals(string css)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string css",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool opEquals(string css)",
				"isStatic": false
			},
			"O rule(this O)(string aSelector, string[string] someDeclarations)": {
				"origin": "O rule(this O)(string aSelector, string[string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string[string] someDeclarations",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rule(this O)(string aSelector, string[string] someDeclarations)",
				"isStatic": false
			},
			"O opCall(this O)(DCSSRule aRules)": {
				"origin": "O opCall(this O)(DCSSRule aRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(DCSSRule aRules)",
				"isStatic": false
			},
			"O removeKey(this O)(long index)": {
				"origin": "O removeKey(this O)(long index)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(long index",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O removeKey(this O)(long index)",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"this(DCSSRule[] someRules)": {
				"origin": "this(DCSSRule[] someRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(DCSSRule[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(DCSSRule[] someRules)",
				"isStatic": false
			},
			"O rules(this O)(DCSSRules someRules)": {
				"origin": "O rules(this O)(DCSSRules someRules)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRules someRules",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rules(this O)(DCSSRules someRules)",
				"isStatic": false
			},
			"O add(this O)(DCSSMedia aRule)": {
				"origin": "O add(this O)(DCSSMedia aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSMedia aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O add(this O)(DCSSMedia aRule)",
				"isStatic": false
			},
			"O rule(this O)(DCSSRule aRule)": {
				"origin": "O rule(this O)(DCSSRule aRule)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(DCSSRule aRule",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rule(this O)(DCSSRule aRule)",
				"isStatic": false
			},
			"O opCall(this O)(string aSelector, string name, string value)": {
				"origin": "O opCall(this O)(string aSelector, string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string name, string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string aSelector, string name, string value)",
				"isStatic": false
			},
			"O opCall(this O)(string aSelector, string[string] someDeclarations)": {
				"origin": "O opCall(this O)(string aSelector, string[string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string aSelector, string[string] someDeclarations",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O opCall(this O)(string aSelector, string[string] someDeclarations)",
				"isStatic": false
			},
			"O rules(this O)(string[string][string] someDeclarations)": {
				"origin": "O rules(this O)(string[string][string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string][string] someDeclarations",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rules(this O)(string[string][string] someDeclarations)",
				"isStatic": false
			},
			"version(test_uim_css)": {
				"origin": "version(test_uim_css)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_css)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_css)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DCSSObj"
		],
		"isStatic": false,
		"library": "",
		"header": "DCSSRules : DCSSObj",
		"parent": "DCSSObj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\source.d": {
		"origin": "class DH5Source : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Source",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Source : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\formatters\\factory.d": {
		"origin": "class DFormatterFactory : DFactory!DFormatter {\r",
		"isFinal": false,
		"package": "uim.oop.formatters",
		"visibility": "public",
		"comments": [],
		"name": "DFormatterFactory",
		"isAbstract": false,
		"namespace": "uim.oop.formatters.factory",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DFactory!DFormatter"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DFormatterFactory : DFactory!DFormatter",
		"parent": "DFactory!DFormatter"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\memory\\folder.d": {
		"origin": "module uim.filesystems.classes.memory.folder;\r\rimport uim.filesystems;\r\runittest {\r  version (testUimFilesystems) {\r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rclass DMemoryFolder : DFolder {\r  mixin(FolderThis!(\"Memory\"));\r}\r\rmixin(FolderCalls!(\"Memory\"));\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.memory",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.memory.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \"",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.memory.folder",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"\" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.memory.folder;\r\rimport uim.filesystems;\r\runittest \r  version (testUimFilesystems) \r    debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r  }\r}\r\r@safe:\rDMemoryFolder : DFolder \r  mixin(FolderThis!(\"Memory\"));\r}\r\rmixin(FolderCalls!(\"Memory\"));",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\ruby.d": {
		"origin": "class DH5Ruby : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Ruby",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Ruby : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\collections\\memory.d": {
		"origin": "class DMemoryJsonCollection : DJsonCollection {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.collections",
		"visibility": "public",
		"comments": [],
		"name": "DMemoryJsonCollection",
		"isAbstract": false,
		"namespace": "uim.jsonbases.classes.collections.memory",
		"isInherited": false,
		"methods": {
			"override Json findOne(UUID id, size_t versionNumber)": {
				"origin": "override Json findOne(UUID id, size_t versionNumber)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, size_t versionNumber",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID id, size_t versionNumber)",
				"isStatic": false
			},
			"override Json insertOne(Json newData)": {
				"origin": "override Json insertOne(Json newData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json newData",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json insertOne(Json newData)",
				"isStatic": false
			},
			"override bool removeOne(UUID id, bool allVersions = false)": {
				"origin": "override bool removeOne(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(UUID id, size_t versionNumber)": {
				"origin": "override bool removeOne(UUID id, size_t versionNumber)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, size_t versionNumber",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(UUID id, size_t versionNumber)",
				"isStatic": false
			},
			"override size_t updateMany(Json select, Json updateData)": {
				"origin": "override size_t updateMany(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t updateMany(Json select, Json updateData)",
				"isStatic": false
			},
			"override size_t removeMany(UUID id, bool allVersions = false)": {
				"origin": "override size_t removeMany(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(string[string] select, bool allVersions = false)": {
				"origin": "override bool removeOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(Json select, bool allVersions = false)": {
				"origin": "override Json findOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(UUID id, bool allVersions = false)": {
				"origin": "override Json[] findMany(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(UUID id, bool allVersions = false)",
				"isStatic": false
			},
			"version (test_uim_jsonbase)": {
				"origin": "version (test_uim_jsonbase)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "test_uim_jsonbase",
				"visibility": "public",
				"datatype": "version",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version (test_uim_jsonbase)",
				"isStatic": false
			},
			"override size_t removeMany(string[string] select, bool allVersions = false)": {
				"origin": "override size_t removeMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool removeOne(Json select, bool allVersions = false)": {
				"origin": "override bool removeOne(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool removeOne(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(string[string] select, bool allVersions = false)": {
				"origin": "override Json findOne(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(string[string] select, bool allVersions = false)": {
				"origin": "override Json[] findMany(string[string] select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string[string] select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(string[string] select, bool allVersions = false)",
				"isStatic": false
			},
			"override size_t removeMany(Json select, bool allVersions = false)": {
				"origin": "override size_t removeMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "size_t",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "size_t removeMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override bool updateOne(Json select, Json updateData)": {
				"origin": "override bool updateOne(Json select, Json updateData)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, Json updateData",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool updateOne(Json select, Json updateData)",
				"isStatic": false
			},
			"override Json[] findMany(Json select, bool allVersions = false)": {
				"origin": "override Json[] findMany(Json select, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "Json select, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(Json select, bool allVersions = false)",
				"isStatic": false
			},
			"override Json[] findMany(bool allVersions = false)": {
				"origin": "override Json[] findMany(bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "bool allVersions = false",
				"visibility": "public",
				"datatype": "Json[]",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json[] findMany(bool allVersions = false)",
				"isStatic": false
			},
			"override Json findOne(UUID id, bool allVersions = false)": {
				"origin": "override Json findOne(UUID id, bool allVersions = false)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "UUID id, bool allVersions = false",
				"visibility": "public",
				"datatype": "Json",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "Json findOne(UUID id, bool allVersions = false)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DJsonCollection"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DMemoryJsonCollection : DJsonCollection",
		"parent": "DJsonCollection"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\embed.d": {
		"origin": "class DH5Embed : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Embed",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Embed : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\exceptions\\exception.d": {
		"origin": "module uim.css.exceptions.exception;\r\rimport uim.css;\r\r@safe:\r\r// Base css exception.\rclass DCssException : UIMException {\r  mixin(ExceptionThis!(\"Css\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    messageTemplate(\"default\", \"Exception in libary uim-css\");\r\r    return true;\r  }\r}\r\rmixin(ExceptionCalls!(\"Css\"));\r\runittest {\r  assert(CssException);\r}\r",
		"isFinal": false,
		"package": "uim.css.exceptions",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.css.exceptions.exception;\r\rimport uim.css;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.css.exceptions.exception",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-css",
		"header": "module uim.css.exceptions.exception;\r\rimport uim.css;\r\r@safe:",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\area.d": {
		"origin": "class DH5Area : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			""
		],
		"name": "DH5Area",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Area : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\svg.d": {
		"origin": "class DH5Svg : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Svg",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Svg : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\inputs\\week.d": {
		"origin": "class DH5InputWEEK : DH5Input {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5InputWEEK",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Input"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5InputWEEK : DH5Input",
		"parent": "DH5Input"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\textarea.d": {
		"origin": "class DH5Textarea : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Textarea",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"O rows(this O)(string value)": {
				"origin": "O rows(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rows(this O)(string value)",
				"isStatic": false
			},
			"O cols(this O)(uint value)": {
				"origin": "O cols(this O)(uint value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(uint value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O cols(this O)(uint value)",
				"isStatic": false
			},
			"O rows(this O)(uint value)": {
				"origin": "O rows(this O)(uint value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(uint value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O rows(this O)(uint value)",
				"isStatic": false
			},
			"O cols(this O)(string value)": {
				"origin": "O cols(this O)(string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O cols(this O)(string value)",
				"isStatic": false
			},
			"version(test_uim_html)": {
				"origin": "version(test_uim_html)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_html)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_html)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Textarea : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\wbr.d": {
		"origin": "class DH5Wbr : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Wbr",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Wbr : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\tests\\fixtures\\transactionstrategy.d": {
		"origin": "class DTransactionStrategy : IFixtureStrategy {\r",
		"isFinal": false,
		"package": "uim.oop.tests.fixtures",
		"visibility": "public",
		"comments": [
			"",
			"",
			"Fixture strategy that wraps fixtures in a transaction that is rolled back",
			"after each test.",
			"",
			"Any test that calls Connection.rollback(true) will break this strategy.",
			""
		],
		"name": "DTransactionStrategy",
		"isAbstract": false,
		"namespace": "uim.oop.tests.fixtures.transactionstrategy",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"IFixtureStrategy"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTransactionStrategy : IFixtureStrategy",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\jsonbases\\uim\\jsonbases\\classes\\collections\\collection.d": {
		"origin": "abstract class DJsonCollection : UIMObject, IJsonCollection {",
		"isFinal": false,
		"package": "uim.jsonbases.classes.collections",
		"visibility": "public",
		"comments": [],
		"name": "DJsonCollection",
		"isAbstract": true,
		"namespace": "uim.jsonbases.classes.collections.collection",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMObject",
			"IJsonCollection"
		],
		"isStatic": false,
		"library": "uim-jsonbases",
		"header": "DJsonCollection : UIMObject, IJsonCollection",
		"parent": ""
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\filesystems\\uim\\filesystems\\classes\\os\\linux\\filesystem.d": {
		"origin": "module uim.filesystems.classes.os.linux.filesystem;\r\rimport uim.filesystems;\r\r@safe:\rclass DLinuxFilesystem : DFilesystem {\r  mixin(FilesystemThis!(\"Linux\"));\r\r  override bool initialize(Json[string] initData = null) {\r    if (!super.initialize(initData)) {\r      return false;\r    }\r\r    pathSeparator(\"/\");\r    return true;\r  }\r\r  override size_t availableDiskSpace() {\r    return getAvailableDiskSpace(rootPath);\r  }\r\r  // #region isFolder\r  override bool isFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (aPath.length == 0 && aFolderName.length == 0) {\r      return false;\r    }\r\r    auto myPath = (aPath.length > 0\r        ? (aFolderName.length > 0 ? absolutePath(aPath ~ aFolderName) : absolutePath(aPath)) : absolutePath(\r          aFolderName));\r\r    return (myPath.exists ? myPath.isDir : false);\r  }\r  // #endregion isFolder\r\r  // #region Folders\r  // #region Create\r  // #endregion Create\r\r  // #region Read\r  // #region existsFolders() \r  alias existsFolders = DFilesystem.existsFolders;\r  override bool existsFolders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFolderName = \\t\", aFolderName);\r    }\r    auto myFolderPath = (!aPath.isEmpty || !aFolderName.isEmpty ? absolutePath(aPath ~ aFolderName)\r        : rootPath);\r\r    // debug writeln(\"myFolderPath = \", myFolderPath);\r    bool result = false;\r    () @trusted {\r      result = std.file.dirEntries(myFolderPath, SpanMode.shallow).array.length > 0;\r    }();\r    return result;\r  }\r  // #endregion existsFolders() \r\r  // #region folders()\r  alias folders = DFilesystem.folders;\r  override IFolder[] folders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\t aFolderName = \\t\", aFolderName);\r    }\r    auto myFolderPath = (!aPath.isEmpty || !aFolderName.isEmpty ? absolutePath(aPath ~ aFolderName)\r        : rootPath);\r\r    // debug writeln(\"myFolderPath = \", myFolderPath);\r    IFolder[] results;\r    () @trusted {\r      foreach (std.file.DirEntry entry; std.file.dirEntries(myFolderPath, SpanMode.shallow)\r        .filter!(entry => entry.isDir)\r        .array\r        ) {\r        auto pathItems = toPathItems(entry.name[rootPath.length .. $]);\r        results ~= LinuxFolder(this, aPath ~ aFolderName);\r      }\r    }();\r\r    return results;\r  }\r  // #endregion folders()\r\r  // #region countFolders() \r  alias countFolders = DFilesystem.countFolders;\r  override size_t countFolders(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \", aPath, \"\\t aFolderName = \", aFolderName);\r    }\r    auto myFolderPath = (!aPath.isEmpty || !aFolderName.isEmpty ? absolutePath(aPath ~ aFolderName)\r        : rootPath);\r\r    // debug writeln(\"myFolderPath = \", myFolderPath);\r    size_t result = false;\r    () @trusted {\r      result = std.file.dirEntries(myFolderPath, SpanMode.shallow).array.length;\r    }();\r    return result;\r  }\r  // #endregion countFolders()   \r  // #endregion Read\r\r  // #region Update\r  // #endregion Update\r\r  // #region Delete\r  // #endregion Delete\r  // #endregion Folders\r\r  // #region Folder\r  // #region Create\r  alias createFolder = DFilesystem.createFolder;\r  override IFolder createFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r      debug writeln(\"aFolderName = \\t\", aFolderName);\r    }\r    if (existsFolder(aPath, aFolderName)) {\r      return null;\r    } // A Folder exists\r\r    std.file.mkdir(absolutePath(aPath ~ aFolderName));\r\r    return folder(aPath, aFolderName);\r  }\r  // #endregion Create\r\r  // #region Read\r  // #region existsFolder()\r  alias existsFolder = DFilesystem.existsFolder;\r  override bool existsFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r      debug writeln(\"aFolderName = \\t\", aFolderName);\r    }\r    return (std.file.exists(absolutePath(aPath ~ aFolderName)) && std.file.isDir(\r        absolutePath(aPath ~ aFolderName)));\r  }\r  // #endregion existsFolder()\r\r  // #region folder()\r  alias folder = DFilesystem.folder;\r  override IFolder folder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r      debug writeln(\"aFolderName = \\t\", aFolderName);\r    }\r    if (!existsFolder(aPath, aFolderName)) {\r      return null;\r    }\r\r    return LinuxFolder(this, aPath ~ aFolderName);\r  }\r  // #endregion folder()\r  // #endregion Read\r\r  // #region Update\r  alias renameFolder = DFilesystem.renameFolder;\r  override bool renameFolder(string[] aPath, string oldName, string newName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r      debug writeln(\"oldName = \\t\", oldName, \" \\tnewName = \\t\", newName);\r    }\r    if (!existsFolder(aPath, oldName) || newName is null) {\r      return false;\r    }\r\r    std.file.rename(absolutePath(aPath ~ oldName), absolutePath(aPath ~ newName));\r    return existsFolder(aPath, newName);\r  }\r  // #endregion Update\r\r  // #region Delete\r  alias removeFolder = DFilesystem.removeFolder;\r  override bool removeFolder(string[] aPath, string aFolderName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (!existsFolder(aPath)) {\r      return false;\r    } // Folder missing\r\r    debug writeln(\"absolutePath(aPath) -> \", absolutePath(aPath ~ aFolderName));\r    std.file.rmdir(absolutePath(aPath ~ aFolderName));\r\r    return !existsFolder(aPath, aFolderName);\r  }\r  // #endregion Delete\r  // #endregion Folder\r\r  // #region Files\r  // #region Create\r\r  // #endregion Create\r\r  // #region Read\r\r  // #endregion Read\r\r  // #region Update\r  // #endregion Update\r\r  // #region Delete\r  // #endregion Delete\r  // #endregion Files\r\r  // #region File\r  // #region Create\r  alias createFile = DFilesystem.createFile;\r  override IFile createFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFileName = \\t\", aFileName);\r    }\r    if (aPath.isEmpty || aFileName.length == 0) {\r      return null;\r    }\r    if (existsFile(aPath, aFileName)) {\r      return null;\r    }\r\r    auto myFile = std.stdio.File(absolutePath(aPath ~ aFileName), \"w\");\r    myFile.close;\r\r    return file(aPath, aFileName);\r  }\r  // #endregion Create\r\r  // #region Read\r  alias existsFile = DFilesystem.existsFile;\r  override bool existsFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\taFileName = \\t\", aFileName);\r    }\r    string myabsolutePath = absolutePath(aPath ~ aFileName);\r    return std.file.exists(myabsolutePath) && std.file.isFile(myabsolutePath);\r  }\r\r  alias file = DFilesystem.file;\r  override IFile file(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    string myabsolutePath = absolutePath(aPath ~ aFileName);\r    if (!std.file.exists(myabsolutePath) || !std.file.isFile(myabsolutePath)) {\r      return null;\r    }\r\r    return LinuxFile(this, aPath ~ aFileName);\r  }\r  // #endregion Read\r\r  // #region Update\r  alias renameFile = DFilesystem.renameFile;\r  override bool renameFile(string[] aPath, string oldFileName, string newFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r      debug writeln(\"oldFileName = \\t\", oldFileName, \" \\newFileName = \\t\", newFileName);\r    }\r    if (!existsFile(aPath, oldFileName) || newFileName is null) {\r      return false;\r    }\r\r    // version(testUimFilesystems) { debug writeln(\"From \", absolutePath(aPath~oldName), \" to\", absolutePath(aPath~newName)); \r    std.file.rename(absolutePath(aPath ~ oldFileName), absolutePath(aPath ~ newFileName));\r    return existsFile(aPath, newFileName);\r  }\r  // #endregion Update\r\r  // #region Delete\r  alias removeFile = DFilesystem.removeFile;\r  override bool removeFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r    }\r    if (!existsFile(aPath, aFileName)) {\r      return false;\r    }\r\r    remove(absolutePath(aPath ~ aFileName));\r\r    return !existsFile(aPath, aFileName);\r  }\r  // #endregion Delete\r  // #endregion File\r\r  // #region Links\r  // #region Create\r  // #endregion Create\r\r  // #region Read\r  // #endregion Read\r\r  // #region Update\r  // #endregion Update\r\r  // #region Delete\r  // #endregion Delete\r  // #endregion Links\r\r  // #region Link\r  // #region Create\r  // #endregion Create\r\r  // #region Read\r  // #endregion Read\r\r  // #region Update\r  // #endregion Update\r\r  // #region Delete\r  // #endregion Delete\r  // #endregion Link\r\r  override bool isFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\t aFileName = \\t\", aFileName);\r    }\r    if (aPath.length == 0 && aFileName.length == 0) {\r      return false;\r    }\r\r    auto myPath = (aPath.length > 0\r        ? (aFileName.length > 0 ? absolutePath(aPath ~ aFileName) : absolutePath(aPath)) : absolutePath(\r          aFileName));\r\r    return (myPath.exists ? myPath.isFile : false);\r  }\r\r  override bool isLink(string[] aPath, string aLinkName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath, \"\\t aLinkName = \\t\", aLinkName);\r    }\r    if (aPath.isEmpty && aLinkName.isEmpty) {\r      return false;\r    }\r\r    auto myPath = (aPath.length > 0\r        ? (aLinkName.length > 0 ? absolutePath(aPath ~ aLinkName) : absolutePath(aPath)) : absolutePath(\r          aLinkName));\r\r    return (myPath.exists ? myPath.isSymlink : false);\r  }\r  // #endregion Folder\r\r  // #region Filemanager\r  override IFile[] files(string[] aPath) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath = \\t\", aPath);\r    }\r    auto myFolderPath = aPath ? absolutePath(aPath) : rootPath;\r\r    IFile[] results;\r    () @trusted {\r      results = std.file.dirEntries(myFolderPath, SpanMode.shallow)\r        .filter!(entry => entry.isFile)\r        .map!(entry => cast(IFile) LinuxFile(this, entry.name[rootPath.length .. $]))\r        .array;\r    }();\r\r    return results;\r  }\r\r  override void[] readFromFile(string[] aPath, string aFileName, size_t numberOfBytes = size_t.max) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return null;\r  }\r\r  override void writeToFile(string[] aPath, string aFileName, const void[] data) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    std.file.write(absolutePath(aPath ~ aFileName), data);\r  }\r\r  override void appendToFile(string[] aPath, string aFileName, const void[] data) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    std.file.append(absolutePath(aPath ~ aFileName), data);\r  }\r\r  override string readTextFromFile(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return std.file.readText(absolutePath(aPath ~ aFileName));\r  }\r\r  override void writeTextToFile(string[] aPath, string aFileName, string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    std.file.write(absolutePath(aPath ~ aFileName), aText);\r  }\r\r  override void appendTextToFile(string[] aPath, string aFileName, string aText) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    std.file.append(absolutePath(aPath ~ aFileName), aText);\r  }\r\r  override string[] readLines(string[] aPath, string aFileName) {\r    version (testUimFilesystems) {\r      debug writeln(\"\\n\", __MODULE__ ~ \": \" ~ __PRETTY_FUNCTION__);\r      debug writeln(\"aPath    = \\t\", aPath);\r      debug writeln(\"aFileName = \\t\", aFileName);\r    }\r\r    return null;\r  }\r\r  // #endregion Filemanager\r  /*\r  // #region LinkManagement\r    override ILink[] links(string aPath = null) {\r      auto myFolderPath = aPath ? absolutePath(aPath) : rootPath;\r\r      ILink[] results;\r      () @trusted { \r        foreach (std.file.DirEntry entry;  std.file.dirEntries(myFolderPath, SpanMode.shallow)) {\r          if (entry.isSymlink) results~=LinuxLink(this, entry.name[rootPath.length..$]);\r        }  \r      } ();\r\r      return results;\r    }*/\r  override ILink createLink(string[] aPath) {\r    if (!existsLink(aPath)) {\r      return null;\r    }\r\r    return null;\r  }\r  // #endregion LinkManagement */\r}\r\rmixin(FilesystemCalls!(\"Linux\"));\r\rversion (testUimFilesystems) {\r  unittest {\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"\\nStart tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.yellow).setForeground(AnsiColor.black));\r    }\r\r    auto fs = LinuxFilesystem(\"TestFS\");\r    fs.rootPath(\"./for_testing\");\r    assert(fs.rootPath == \"./for_testing\");\r\r    fs.createIfNotExistsFolder(\"LinuxFilesystem\");\r    fs.createIfNotExistsFolder([\"LinuxFilesystem\"], \"filesystems\");\r\r    // debug writeln(fs.availableDiskSpace(), \"Bytes available\");\r\r    IFilesystem myFileSystem = fs;\r    assert(myFileSystem.rootPath == \"./for_testing\");\r\r    // debug writeln(\"start tests\");\r    testFilesystem(myFileSystem);\r\r    //debug writeln(\"Test Identify type\");\r    assert(!myFileSystem.isFolder(\"\"), \"\\tERROR: No Folder detected\");\r\r    // #region Test Folder\r    myFileSystem.createIfNotExistsFolder(\"LinuxFilesystem/folders\");\r    myFileSystem.createIfNotExistsFolder(\"LinuxFilesystem/folders/creatingFolders\");\r\r    testFilesystem_CreateFolders(__MODULE__, myFileSystem, \"LinuxFilesystem/folders/creatingFolders\", [\r        \"LinuxFilesystem\", \"folders\", \"creatingFolders\"\r      ]);\r\r    myFileSystem.createIfNotExistsFolder(\"LinuxFilesystem/folders/readFolders\");\r    testFilesystem_ReadFolders(__MODULE__, myFileSystem, \"LinuxFilesystem/folders/readFolders\", [\r        \"LinuxFilesystem\", \"folders\", \"readFolders\"\r      ]);\r\r    myFileSystem.createIfNotExistsFolder(\"LinuxFilesystem/folders/updateFolders\");\r    testFilesystem_UpdateFolders(__MODULE__, myFileSystem, \"LinuxFilesystem/folders/updateFolders\", [\r        \"LinuxFilesystem\", \"folders\", \"updateFolders\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folders/removeFolders\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folders/removeFolders\");\r    }\r    testFilesystem_RemoveFolders(__MODULE__, myFileSystem, \"LinuxFilesystem/folders/removeFolders\", [\r        \"LinuxFilesystem\", \"folders\", \"removeFolders\"\r      ]);\r    // #endregion Test Folder\r\r    // #region Test Folder\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folder\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folder\");\r    }\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folder/creatingFolders\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folder/creatingFolders\");\r    }\r    testFilesystem_CreateFolder(__MODULE__, myFileSystem, \"LinuxFilesystem/folder/creatingFolders\", [\r        \"LinuxFilesystem\", \"folder\", \"creatingFolders\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folder/readFolders\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folder/readFolders\");\r    }\r    testFilesystem_ReadFolder(__MODULE__, myFileSystem, \"LinuxFilesystem/folder/readFolders\", [\r        \"LinuxFilesystem\", \"folder\", \"readFolders\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folder/updateFolders\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folder/updateFolders\");\r    }\r    testFilesystem_UpdateFolder(__MODULE__, myFileSystem, \"LinuxFilesystem/folder/updateFolders\", [\r        \"LinuxFilesystem\", \"folder\", \"updateFolders\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/folder/removeFolders\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/folder/removeFolders\");\r    }\r    testFilesystem_RemoveFolder(__MODULE__, myFileSystem, \"LinuxFilesystem/folder/removeFolders\", [\r        \"LinuxFilesystem\", \"folder\", \"removeFolders\"\r      ]);\r    // #endregion Test Folder\r\r    // #region Test Files\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files\");\r    }\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/creatingFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/creatingFiles\");\r    }\r    testFilesystem_CreateFiles(__MODULE__, myFileSystem, \"LinuxFilesystem/files/creatingFiles\", [\r        \"LinuxFilesystem\", \"files\", \"creatingFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/readFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/readFiles\");\r    }\r    testFilesystem_ReadFiles(__MODULE__, myFileSystem, \"LinuxFilesystem/files/readFiles\", [\r        \"LinuxFilesystem\", \"files\", \"readFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/updateFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/updateFiles\");\r    }\r    testFilesystem_UpdateFiles(__MODULE__, myFileSystem, \"LinuxFilesystem/files/updateFiles\", [\r        \"LinuxFilesystem\", \"files\", \"updateFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/removeFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/removeFiles\");\r    }\r    testFilesystem_RemoveFiles(__MODULE__, myFileSystem, \"LinuxFilesystem/files/removeFiles\", [\r        \"LinuxFilesystem\", \"files\", \"removeFiles\"\r      ]);\r    // #endregion Test Files\r\r    // #region Test File\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/file\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/file\");\r    }\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/creatingFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/creatingFiles\");\r    }\r    testFilesystem_CreateFile(__MODULE__, myFileSystem, \"LinuxFilesystem/files/creatingFiles\", [\r        \"LinuxFilesystem\", \"files\", \"creatingFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/readFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/readFiles\");\r    }\r    testFilesystem_ReadFile(__MODULE__, myFileSystem, \"LinuxFilesystem/files/readFiles\", [\r        \"LinuxFilesystem\", \"files\", \"readFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/updateFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/updateFiles\");\r    }\r    testFilesystem_UpdateFile(__MODULE__, myFileSystem, \"LinuxFilesystem/files/updateFiles\", [\r        \"LinuxFilesystem\", \"files\", \"updateFiles\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/files/removeFiles\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/files/removeFiles\");\r    }\r    testFilesystem_removeFile(__MODULE__, myFileSystem, \"LinuxFilesystem/files/removeFiles\", [\r        \"LinuxFilesystem\", \"files\", \"removeFiles\"\r      ]);\r    // #endregion Test File\r\r    // #region Test Links\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links\");\r    }\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/creatingLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/creatingLinks\");\r    }\r    testFilesystem_CreateLinks(__MODULE__, myFileSystem, \"LinuxFilesystem/links/creatingLinks\", [\r        \"LinuxFilesystem\", \"links\", \"creatingLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/readLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/readLinks\");\r    }\r    testFilesystem_ReadLinks(__MODULE__, myFileSystem, \"LinuxFilesystem/links/readLinks\", [\r        \"LinuxFilesystem\", \"links\", \"readLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/updateLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/updateLinks\");\r    }\r    testFilesystem_UpdateLinks(__MODULE__, myFileSystem, \"LinuxFilesystem/links/updateLinks\", [\r        \"LinuxFilesystem\", \"links\", \"updateLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/removeLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/removeLinks\");\r    }\r    testFilesystem_RemoveLinks(__MODULE__, myFileSystem, \"LinuxFilesystem/links/removeLinks\", [\r        \"LinuxFilesystem\", \"links\", \"removeLinks\"\r      ]);\r    // #endregion Test Links\r\r    // #region Test Link\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/link\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/link\");\r    }\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/creatingLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/creatingLinks\");\r    }\r    testFilesystem_CreateLink(__MODULE__, myFileSystem, \"LinuxFilesystem/links/creatingLinks\", [\r        \"LinuxFilesystem\", \"links\", \"creatingLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/readLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/readLinks\");\r    }\r    testFilesystem_ReadLink(__MODULE__, myFileSystem, \"LinuxFilesystem/links/readLinks\", [\r        \"LinuxFilesystem\", \"links\", \"readLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/updateLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/updateLinks\");\r    }\r    testFilesystem_UpdateLink(__MODULE__, myFileSystem, \"LinuxFilesystem/links/updateLinks\", [\r        \"LinuxFilesystem\", \"links\", \"updateLinks\"\r      ]);\r\r    if (!myFileSystem.existsFolder(\"LinuxFilesystem/links/removeLinks\")) {\r      myFileSystem.createFolder(\"LinuxFilesystem/links/removeLinks\");\r    }\r    testFilesystem_RemoveLink(__MODULE__, myFileSystem, \"LinuxFilesystem/links/removeLinks\", [\r        \"LinuxFilesystem\", \"links\", \"removeLinks\"\r      ]);\r    // #endregion Test Link\r    version (testUimFilesystems) {\r      debug writeln(StyledString(\"End tests in \" ~ __MODULE__)\r          .setBackground(AnsiColor.white).setForeground(AnsiColor.black));\r    }\r  }\r}\r",
		"isFinal": false,
		"package": "uim.filesystems.classes.os.linux",
		"visibility": "public",
		"comments": [
			"/****************************************************************************************************************",
			"Copyright: © 2017-2024 Ozan Nurettin Süel (aka UIManufaktur) *",
			"License: Subject to the terms of the Apache 2.0 license, as written in the included LICENSE.txt file. *",
			"Authors: Ozan Nurettin Süel (aka UIManufaktur) *",
			"*****************************************************************************************************************/"
		],
		"name": "module uim.filesystems.classes.os.linux.filesystem;\r\rimport uim.filesystems;\r\r@safe",
		"isAbstract": false,
		"namespace": "uim.filesystems.classes.os.linux.filesystem",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DLinuxFilesystem"
		],
		"isStatic": false,
		"library": "uim-filesystems",
		"header": "module uim.filesystems.classes.os.linux.filesystem;\r\rimport uim.filesystems;\r\r@safe:\rDLinuxFilesystem : DFilesystem \r  mixin(FilesystemThis!(\"Linux\"));\r\r  override bool initialize(Json[string] initData = null) \r    if (!super.initialize(initData)) \r      return false;\r    }\r\r    pathSeparator(\"/\");\r    return true;\r  }\r\r  override size_t availableDiskSpace() \r    return getAvailableDiskSpace(rootPath);\r  }",
		"parent": "DLinuxFilesystem"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\css\\uim\\css\\rule.d": {
		"origin": "class DCSSRule : DCSSObj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"A single CSS rule with one or more selectors, and a declaration block."
		],
		"name": "DCSSRule",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"O declaration(this O)(string name, string value)": {
				"origin": "O declaration(this O)(string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string name, string value",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O declaration(this O)(string name, string value)",
				"isStatic": false
			},
			"bool opEquals(DCSSRule obj)": {
				"origin": "bool opEquals(DCSSRule obj)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "DCSSRule obj",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool opEquals(DCSSRule obj)",
				"isStatic": false
			},
			"this(string aSelector)": {
				"origin": "this(string aSelector)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aSelector)",
				"isStatic": false
			},
			"O declarations(this O)(string[string] someDeclarations)": {
				"origin": "O declarations(this O)(string[string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(string[string] someDeclarations",
				"visibility": "public",
				"datatype": "O",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "O declarations(this O)(string[string] someDeclarations)",
				"isStatic": false
			},
			"override protected void _init()": {
				"origin": "override protected void _init()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "protected",
				"datatype": "void",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "void _init()",
				"isStatic": false
			},
			"bool opEquals(string css)": {
				"origin": "bool opEquals(string css)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string css",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "bool opEquals(string css)",
				"isStatic": false
			},
			"auto declarations(this O)()": {
				"origin": "auto declarations(this O)()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "this O)(",
				"visibility": "public",
				"datatype": "auto",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "auto declarations(this O)()",
				"isStatic": false
			},
			"assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]).declaration(\"border\",\"0\") == \"body": {
				"origin": "assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]).declaration(\"border\",\"0\") == \"body",
				"isFinal": false,
				"isProperty": false,
				"parameters": "\"border\",\"0\"",
				"visibility": "public",
				"datatype": "assert(CSSRule(\"body\",",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]).declaration(\"border\",\"0\") == \"body",
				"isStatic": false
			},
			"assert(CSSRule(\"test\").declaration(\"do\", \"it\") == `test": {
				"origin": "assert(CSSRule(\"test\").declaration(\"do\", \"it\") == `test",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "assert(CSSRule(\"test\").declaration(\"do\",",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "assert(CSSRule(\"test\").declaration(\"do\", \"it\") == `test",
				"isStatic": false
			},
			"this()": {
				"origin": "this()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this()",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this()",
				"isStatic": false
			},
			"assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]) == \"body": {
				"origin": "assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]) == \"body",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "assert(CSSRule(\"body\",",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "assert(CSSRule(\"body\", [\"background-color\": \"lightgreen\"]) == \"body",
				"isStatic": false
			},
			"this(string aSelector, string name, string value)": {
				"origin": "this(string aSelector, string name, string value)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aSelector, string name, string value)",
				"isStatic": false
			},
			"override string toString()": {
				"origin": "override string toString()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "string toString()",
				"isStatic": false
			},
			"string declaration(string name)": {
				"origin": "string declaration(string name)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "string name",
				"visibility": "public",
				"datatype": "string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "string declaration(string name)",
				"isStatic": false
			},
			"assert(CSSRule(\"test\") == `test": {
				"origin": "assert(CSSRule(\"test\") == `test",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "assert(CSSRule(\"test\")",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "assert(CSSRule(\"test\") == `test",
				"isStatic": false
			},
			"version(test_uim_css)": {
				"origin": "version(test_uim_css)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "version(test_uim_css)",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "version(test_uim_css)",
				"isStatic": false
			},
			"this(string aSelector, string[string] someDeclarations)": {
				"origin": "this(string aSelector, string[string] someDeclarations)",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "this(string",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": false,
				"header": "this(string aSelector, string[string] someDeclarations)",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DCSSObj"
		],
		"isStatic": false,
		"library": "",
		"header": "DCSSRule : DCSSObj",
		"parent": "DCSSObj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\tfoot.d": {
		"origin": "class DH5Tfoot : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Tfoot",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Tfoot : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\img.d": {
		"origin": "class DH5Img : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [],
		"name": "DH5Img",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Img : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\mixins\\properties\\property.d": {
		"origin": "  class DTest {mixin(OProperty!(\"string\", \"name\", \"`someThing`\"));}\r",
		"isFinal": false,
		"package": "uim.oop.mixins.properties",
		"visibility": "public",
		"comments": [],
		"name": "DTest mixin(OProperty!(\"string\", \"name\", \"`someThing`\"));}",
		"isAbstract": false,
		"namespace": "uim.oop.mixins.properties.property",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [],
		"isStatic": false,
		"library": "uim-oop",
		"header": "DTest mixin(OProperty!(\"string\", \"name\", \"`someThing`\"));}",
		"parent": null
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\controllers\\uim\\controllers\\classes\\controllers\\registry.d": {
		"origin": "class DControllerRegistry : DObjectRegistry!DController {\r",
		"isFinal": false,
		"package": "uim.controllers.classes.controllers",
		"visibility": "public",
		"comments": [],
		"name": "DControllerRegistry",
		"isAbstract": false,
		"namespace": "uim.controllers.classes.controllers.registry",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DObjectRegistry!DController"
		],
		"isStatic": false,
		"library": "uim-controllers",
		"header": "DControllerRegistry : DObjectRegistry!DController",
		"parent": "DObjectRegistry!DController"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\caption.d": {
		"origin": "class DH5Caption : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for caption tag = specifies the caption (or title) of a table."
		],
		"name": "DH5Caption",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Caption : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\bdo.d": {
		"origin": "class DH5Bdo : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for the bdo tag - overrides the current directionality of text, so that the text within is rendered in a different direction."
		],
		"name": "DH5Bdo",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5Bdo : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\html\\uim\\html\\classes\\elements\\a.d": {
		"origin": "class DH5A : DH5Obj {",
		"isFinal": false,
		"package": "",
		"visibility": "public",
		"comments": [
			"Wrapper for <a> - defines a hyperlink to link from one page to another."
		],
		"name": "DH5A",
		"isAbstract": false,
		"namespace": "",
		"isInherited": false,
		"methods": {
			"override bool initialize()": {
				"origin": "override bool initialize()",
				"isFinal": false,
				"isProperty": false,
				"parameters": "",
				"visibility": "public",
				"datatype": "bool",
				"isSafe": false,
				"isConst": false,
				"isAbstract": false,
				"isInherited": true,
				"header": "bool initialize()",
				"isStatic": false
			}
		},
		"hasParent": false,
		"implements": [
			"DH5Obj"
		],
		"isStatic": false,
		"library": "",
		"header": "DH5A : DH5Obj",
		"parent": "DH5Obj"
	},
	"C:\\Users\\ONS\\PROJECTS2023\\uim\\oop\\uim\\oop\\helpers\\exceptions\\xml.d": {
		"origin": "class XmlException : UIMException {",
		"isFinal": false,
		"package": "uim.oop.helpers.exceptions",
		"visibility": "public",
		"comments": [
			"Exception class for Xml. This exception will be thrown from Xml when it encounters an error."
		],
		"name": "XmlException",
		"isAbstract": false,
		"namespace": "uim.oop.helpers.exceptions.xml",
		"isInherited": false,
		"methods": {},
		"hasParent": false,
		"implements": [
			"UIMException"
		],
		"isStatic": false,
		"library": "uim-oop",
		"header": "XmlException : UIMException",
		"parent": ""
	}
}
